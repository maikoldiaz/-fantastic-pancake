{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "logAnalyticsResourceId": {
      "type": "string"
    },
    "acrName": {
      "type": "string",
      "minLength": 5,
      "maxLength": 50,
      "metadata": {
        "description": "Name of your Azure Container Registry"
      }
    },
    "acrAdminUserEnabled": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Enable admin user that have push / pull permission to the registry."
      }
    },
    "acrSku": {
      "type": "string",
      "metadata": {
        "description": "Tier of your Azure Container Registry."
      },
      "defaultValue": "Basic",
      "allowedValues": [
        "Basic",
        "Standard",
        "Premium"
      ]
    },
    "pidDeploymentName": {
      "type": "string"
    }
  },
  "variables": {
    "location": "[resourceGroup().location]",
    "diagnosticSettingsName": "securityauditevents"
  },
  "resources": [
    {
      "apiVersion": "2020-06-01",
      "name": "[parameters('pidDeploymentName')]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": [
            {
              "apiVersion": "2020-06-01",
              "name": "pid-adb8eac6-989a-5354-8580-19055546ec74",
              "type": "Microsoft.Resources/deployments",
              "properties": {
                "mode": "Incremental",
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "resources": []
                }
              }
            }
          ]
        }
      }
    },
    {
      "name": "[toUpper(parameters('acrName'))]",
      "type": "Microsoft.ContainerRegistry/registries",
      "apiVersion": "2017-10-01",
      "location": "[variables('location')]",
      "comments": "Container registry for storing docker images",
      "sku": {
        "name": "[parameters('acrSku')]",
        "tier": "[parameters('acrSku')]"
      },
      "properties": {
        "adminUserEnabled": "[parameters('acrAdminUserEnabled')]"
      },
      "resources": [
        {
          "type": "Microsoft.ContainerRegistry/registries/providers/diagnosticsettings",
          "name": "[concat(parameters('acrName'), '/Microsoft.Insights/service')]",
          "apiVersion": "2016-09-01",
          "location": "[variables('location')]",
          "dependsOn": [
            "[resourceId('Microsoft.ContainerRegistry/registries', parameters('acrName'))]"
          ],
          "properties": {
            "name": "[variables('diagnosticSettingsName')]",
            "workspaceId": "[parameters('logAnalyticsResourceId')]",
            "logs": [
              {
                "category": "ContainerRegistryRepositoryEvents",
                "enabled": true,
                "retentionPolicy": {
                  "days": 0,
                  "enabled": false
                }
              },
              {
                "category": "ContainerRegistryLoginEvents",
                "enabled": true,
                "retentionPolicy": {
                  "days": 0,
                  "enabled": false
                }
              }
            ],
            "metrics": [
              {
                "category": "AllMetrics",
                "enabled": true,
                "retentionPolicy": {
                  "enabled": false,
                  "days": 0
                }
              }
            ]
          }
        }
      ]
    }
  ],
  "outputs": {
    "ou_acrLoginServer": {
      "value": "[reference(resourceId('Microsoft.ContainerRegistry/registries',toUpper(parameters('acrName'))),'2017-10-01').loginServer]",
      "type": "string"
    },
    "ou_acr_resourceId": {
      "type": "string",
      "value": "[resourceId('Microsoft.ContainerRegistry/registries', toUpper(parameters('acrName')))]"
    }
  }
}