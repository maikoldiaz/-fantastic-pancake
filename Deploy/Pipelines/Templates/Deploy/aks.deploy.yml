steps:
  - task: HelmInstaller@1
    displayName: Install Helm
    inputs:
      helmVersionToInstall: 3.4.0
    
  - task: AzureCLI@1
    displayName: ACR Login
    inputs:
      azureSubscription: ${{ parameters.azureSubscription }}
      scriptLocation: inlineScript
      inlineScript: |
          az login --service-principal -u $(aksServicePrincipalProfileClientId) -p $(aksServicePrincipalProfileSecret) -t $(tenantId)
          az acr helm repo add -n ${{ parameters.registryName }}

  - task: AzureCLI@2
    displayName: Connect AKS
    inputs:
      azureSubscription: '$(serviceConnection)'
      scriptType: 'pscore'
      scriptLocation: 'inlineScript'
      inlineScript: |
        az aks get-credentials --resource-group "$(sharedResourceGroupName)" --name "$(aksClusterName)" --admin

  - task: AzureCLI@2
    displayName: Adding Deployment Labels
    inputs:
      azureSubscription: '$(serviceConnection)'
      scriptType: 'pscore'
      scriptLocation: 'inlineScript'
      inlineScript: |
        kubectl annotate deployments ${{ parameters.releaseName }} --overwrite --namespace ${{ parameters.namespace }} meta.helm.sh/release-name=${{ parameters.releaseName }}
        kubectl annotate deployments ${{ parameters.releaseName }} --overwrite --namespace ${{ parameters.namespace }} meta.helm.sh/release-namespace=${{ parameters.namespace }}
        kubectl label deployments ${{ parameters.releaseName }} --overwrite --namespace ${{ parameters.namespace }} app.kubernetes.io/managed-by=Helm
        kubectl annotate services ${{ parameters.releaseName }} --overwrite --namespace ${{ parameters.namespace }} meta.helm.sh/release-name=${{ parameters.releaseName }}
        kubectl annotate services ${{ parameters.releaseName }} --overwrite --namespace ${{ parameters.namespace }} meta.helm.sh/release-namespace=${{ parameters.namespace }}
        kubectl label services ${{ parameters.releaseName }} --overwrite --namespace ${{ parameters.namespace }} app.kubernetes.io/managed-by=Helm
        kubectl annotate ingress ${{ parameters.releaseName }}-ingress --overwrite --namespace ${{ parameters.namespace }} meta.helm.sh/release-namespace=${{ parameters.namespace }}
        kubectl annotate ingress ${{ parameters.releaseName }}-ingress --overwrite --namespace ${{ parameters.namespace }} meta.helm.sh/release-name=${{ parameters.releaseName }}
        kubectl label ingress ${{ parameters.releaseName }}-ingress --overwrite --namespace ${{ parameters.namespace }} app.kubernetes.io/managed-by=Helm
    continueOnError: true
    
  - task: HelmDeploy@0
    displayName: Deploy Helm Chart
    inputs:
      azureSubscription: ${{ parameters.azureSubscription }}
      azureResourceGroup: '${{ parameters.azureResourceGroup }}'
      kubernetesCluster: '${{ parameters.kubernetesCluster }}'
      namespace: '${{ parameters.namespace }}'
      useClusterAdmin: true
      command: upgrade
      chartName: '${{ parameters.chartName }}'
      releaseName: '${{ parameters.releaseName }}'
      arguments: '--atomic
                  --version $(build.buildId)
                  --set resources.limits.cpu=${{ parameters.cpuLimits }}
                  --set resources.limits.memory=${{ parameters.memoryLimits }}
                  --set resources.requests.memory=${{ parameters.memoryRequests }}
                  --set resources.requests.cpu=${{ parameters.cpuRequests }}
                  --set image.repository=${{ parameters.registryName }}.azurecr.io/${{ parameters.projectName }}
                  --set image.tag=${{ parameters.tag }}
                  --set replicaCount=${{parameters.replicaCount}}
                  --set HOST_NAME=$(hostName)
                  --debug'