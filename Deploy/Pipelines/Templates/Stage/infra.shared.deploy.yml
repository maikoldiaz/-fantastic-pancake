stages:
- stage: Deploy
  jobs:
  - deployment: AppInsightsAndLogAnalytics
    pool:
     vmImage: 'windows-latest'
    environment: $(envInfra)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadBuildArtifacts@0
            displayName: 'Download Build Artifacts'
            inputs:
              artifactName: Drop
              downloadPath: '$(System.ArtifactsDirectory)'

          - script: echo '##vso[task.setvariable variable=env]$(env)
            displayName: 'Set Environment Variable'

          - powershell: |
              $date=$(Get-Date -Format g);
              Write-Host "##vso[task.setvariable variable=creationDate]$date"
            displayName: 'Set Date Tag'

          - template: ../Infra/logAnalytics.yml
            parameters:
              azureSubscriptionName: '$(serviceConnection)'
              resourceGroupName: '$(sharedResourceGroupName)'
              deployLocation: '$(deployLocation)'
              workspaceName: '$(logAnalyticsWorkspaceName)'
              tier: 'data'

          - template: ../Infra/appInsights.yml
            parameters:
              instrumentationKeyName: '$(instrumentationKeyName)'
              azureSubscriptionName: '$(serviceConnection)'
              resourceGroupName: '$(sharedResourceGroupName)'
              deployLocation: '$(deployLocation)'
              applicationInsights: '$(applicationInsights)'
              tier: 'Front'
              shared: 'true'

  - deployment: APIM
    dependsOn:
    - AppInsightsAndLogAnalytics
    condition: succeeded('AppInsightsAndLogAnalytics')
    pool:
     vmImage: 'windows-latest'
    environment: $(envInfra)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadBuildArtifacts@0
            displayName: 'Download Build Artifacts'
            inputs:
              artifactName: Drop
              downloadPath: '$(System.ArtifactsDirectory)'

          - script: echo '##vso[task.setvariable variable=env]$(env)
            displayName: 'Set Environment Variable'

          - powershell: |
              $date=$(Get-Date -Format g);
              Write-Host "##vso[task.setvariable variable=creationDate]$date"
            displayName: 'Set Date Tag'

          - template: ../Infra/apim.yml
            parameters:
              azureSubscriptionName: '$(serviceConnection)'
              resourceGroupName: '$(sharedResourceGroupName)'
              deployLocation: '$(deployLocation)'
              tier: 'data'
              deployTM : 'false'
              shared: 'true'
    
  - deployment: Cluster
    dependsOn:
    - AppInsightsAndLogAnalytics
    condition: succeeded('AppInsightsAndLogAnalytics')
    pool:
     vmImage: 'windows-latest'
    environment: $(envInfra)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadBuildArtifacts@0
            displayName: 'Download Build Artifacts'
            inputs:
              artifactName: Drop
              downloadPath: '$(System.ArtifactsDirectory)'
          - template: ../Infra/aks.cluster.yml
            parameters:
                azureSubscriptionName : '$(serviceConnection)'
                resourceGroupName : $(sharedResourceGroupName)
                virtualNetworkresourceGroup: $(infrastructureResourceGroupName)

  - deployment: PodIdentity
    dependsOn:
    - Cluster
    condition: succeeded('Cluster')
    pool:
      vmImage: 'windows-latest'
    environment: '$(envInfra)'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadBuildArtifacts@0
            displayName: 'Download Build Artifacts'
            inputs:
              artifactName: Drop
              downloadPath: '$(System.ArtifactsDirectory)'
          - template: ../Infra/aks.identity.yml
            parameters:
                azureSubscriptionName : '$(serviceConnection)'
                nodeServiceConnection: '$(serviceConnection)'
                resourceGroupName : $(sharedResourceGroupName)
                nodeResourceGroup : $(aksNodeResourceGroup)
                keyVaultName: '$(keyVault)'
                shared: 'true'

  - deployment: ClusterSecrets
    dependsOn:
    - PodIdentity
    condition: succeeded('PodIdentity')
    pool:
      vmImage: 'windows-latest'
    environment: '$(envInfra)'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadBuildArtifacts@0
            displayName: 'Download Build Artifacts'
            inputs:
              artifactName: Drop
              downloadPath: '$(System.ArtifactsDirectory)'
          - template: ../Infra/aks.secrets.yml
            parameters:
              azureSubscriptionName : '$(serviceConnection)'
              resourceGroupName : '$(sharedResourceGroupName)'
              shared: 'true'