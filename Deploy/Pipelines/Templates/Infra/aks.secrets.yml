steps:
- task: AzurePowerShell@3
  displayName: Base64 encode tls cert
  inputs:
     azureSubscription: '${{parameters.azureSubscriptionName}}'
     ScriptPath: '$(System.ArtifactsDirectory)/Drop/Scripts/Convert-ToBase64Encoded.ps1'
     ScriptArguments: '-CertificateFilePath $(System.ArtifactsDirectory)/Drop/$(aksCertName).crt -VariableName tlscertvalue'
     azurePowerShellVersion: LatestVersion

- task: AzurePowerShell@3
  displayName: Base64 encode tls key
  inputs:
     azureSubscription: '${{parameters.azureSubscriptionName}}'
     ScriptPath: '$(System.ArtifactsDirectory)/Drop/Scripts/Convert-ToBase64Encoded.ps1'
     ScriptArguments: '-CertificateFilePath $(System.ArtifactsDirectory)/Drop/$(aksCertName).key -VariableName tlskeyvalue'
     azurePowerShellVersion: LatestVersion

- task: qetza.replacetokens.replacetokens-task.replacetokens@3
  displayName: Replace cert values in tls
  inputs:
      targetFiles: '$(System.ArtifactsDirectory)/Drop/Templates/Azure Kubernetes Services/Configurations/aks-ingress-tls.yml'
      actionOnMissing: fail

- task: Kubernetes@1
  displayName: Create tls secret
  inputs:
      connectionType: 'Azure Resource Manager'
      azureSubscriptionEndpoint: '${{parameters.azureSubscriptionName}}'
      azureResourceGroup: "${{ parameters.resourceGroupName }}"
      kubernetesCluster: '$(aksManagedClustersName)'
      useClusterAdmin: true
      command: apply
      useConfigurationFile: true
      configuration: '$(System.ArtifactsDirectory)/Drop/Templates/Azure Kubernetes Services/Configurations/aks-ingress-tls.yml'

- task: AzurePowerShell@3
  displayName: Base64 encode analytics client identifier
  inputs:
     azureSubscription: '${{parameters.azureSubscriptionName}}'
     ScriptPath: '$(System.ArtifactsDirectory)/Drop/Scripts/ConvertString-ToBase64Encoded.ps1'
     ScriptArguments: '-StringValue $(analyticsAppClientId) -VariableName analyticsAppClientId'
     azurePowerShellVersion: LatestVersion
  condition: and(succeeded(), eq('${{parameters.shared}}', 'false'))

- task: AzurePowerShell@3
  displayName: Base64 encode analytics client secret
  inputs:
     azureSubscription: '${{parameters.azureSubscriptionName}}'
     ScriptPath: '$(System.ArtifactsDirectory)/Drop/Scripts/ConvertString-ToBase64Encoded.ps1'
     ScriptArguments: '-StringValue $(analyticsAppSecret) -VariableName analyticsAppSecret'
     azurePowerShellVersion: LatestVersion
  condition: and(succeeded(), eq('${{parameters.shared}}', 'false'))

- task: AzurePowerShell@3
  displayName: Base64 encode tenant identifier
  inputs:
     azureSubscription: '${{parameters.azureSubscriptionName}}'
     ScriptPath: '$(System.ArtifactsDirectory)/Drop/Scripts/ConvertString-ToBase64Encoded.ps1'
     ScriptArguments: '-StringValue $(tenantId) -VariableName analyticsTenantId'
     azurePowerShellVersion: LatestVersion
  condition: and(succeeded(), eq('${{parameters.shared}}', 'false'))

- task: AzurePowerShell@3
  displayName: Base64 encode keyvault address
  inputs:
     azureSubscription: '${{parameters.azureSubscriptionName}}'
     ScriptPath: '$(System.ArtifactsDirectory)/Drop/Scripts/ConvertString-ToBase64Encoded.ps1'
     ScriptArguments: '-StringValue "https://$(keyVault).vault.azure.net/" -VariableName analyticsKeyvault'
     azurePowerShellVersion: LatestVersion
  condition: and(succeeded(), eq('${{parameters.shared}}', 'false'))

- task: qetza.replacetokens.replacetokens-task.replacetokens@3
  displayName: Replace values in analytics secret
  inputs:
      targetFiles: '$(System.ArtifactsDirectory)/Drop/Templates/Azure Kubernetes Services/Configurations/aks-analytics-secret.yml'
      actionOnMissing: fail
  condition: and(succeeded(), eq('${{parameters.shared}}', 'false'))

- task: Kubernetes@1
  displayName: Create analytics secret
  inputs:
      connectionType: 'Azure Resource Manager'
      azureSubscriptionEndpoint: '${{parameters.azureSubscriptionName}}'
      azureResourceGroup: "${{ parameters.resourceGroupName }}"
      kubernetesCluster: '$(aksManagedClustersName)'
      useClusterAdmin: true
      command: apply
      useConfigurationFile: true
      configuration: '$(System.ArtifactsDirectory)/Drop/Templates/Azure Kubernetes Services/Configurations/aks-analytics-secret.yml'
  condition: and(succeeded(), eq('${{parameters.shared}}', 'false'))