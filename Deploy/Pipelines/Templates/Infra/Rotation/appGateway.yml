steps:
 - template: ../fetchSecrets.yml
   parameters:
     azureSubscriptionName : '$(serviceConnection)'
     keyVaultName: '$(keyVaultShared)'
     secretsFilter: '*'

 - task: AzurePowerShell@4
   displayName: Role Assignment
   inputs:
     azureSubscription: "$(sharedServiceConnection)"
     ScriptPath: '$(System.ArtifactsDirectory)/Drop/Scripts/Add-AzRoleAssignment.ps1'
     ScriptArguments: '-ObjectId "$(appGatewayServiceObjectId)" -RoleDefinitionName "Network Contributor" -ResourceGroupName "$(appGatewayResourceGroupName)"'
     azurePowerShellVersion: LatestVersion
   condition:  and(succeeded(), eq(variables['appGateway'], 'true'))

 - task: AzurePowerShell@4
   displayName: Adding Configuration to App Gateway
   inputs:
     azureSubscription: "$(sharedServiceConnection)"
     ScriptPath: '$(System.ArtifactsDirectory)/Drop/Scripts/Add-AppGatewayConfigurations.ps1'
     ScriptArguments: '-httpListenerHostName "$(dnsNameForUI)" -BackendHttpHostName "$(dnsNameForUI)" -ResourceGroupName "$(appGatewayResourceGroupName)" -AppGatewayName "$(appGatewaySharedName)" -CertPwd "$(sslCertPasswordForUI)" -CertFilepath "$(System.ArtifactsDirectory)/Drop/$(dnsNameForUI).pfx" -backendPoolName "$(appGatewaybackendPoolName)" -BackendFqdns "$(appServiceNameUI).azurewebsites.net" -frontendportName "$(appGatewayFrontEndportName)" -httpListenerName "$(appGatewayListenerName)" -probeConfigName "$(appGatewayProbeConfigName)" -backendHttpSettingsName "$(appGatewayBackendHttpSettingsName)" -RuleName "$(appGatewayRuleName)"'
     azurePowerShellVersion: LatestVersion
   condition:  and(succeeded(), eq(variables['appGateway'], 'true'))

 - task: AzurePowerShell@4
   displayName: Add Custom Domain to the Web App
   inputs:
     azureSubscription: "$(serviceConnection)"
     ScriptPath: '$(System.ArtifactsDirectory)/Drop/Scripts/Add-CustomDomain.ps1'
     ScriptArguments: ' -ResourceGroupName "$(resourceGroupName)" -WebAppName "$(appServiceNameUI)" -CustomHostName "$(dnsNameForUI)"'
     azurePowerShellVersion: LatestVersion
   condition:  and(succeeded(), eq(variables['appGateway'], 'true'))

 - task: AzurePowerShell@4
   displayName: Bind SSL Certificate For UI
   inputs:
     azureSubscription: "$(serviceConnection)"
     ScriptPath: '$(System.ArtifactsDirectory)/Drop/Scripts/Bind-SSL.ps1'
     ScriptArguments: '-WebAppName "$(appServiceNameUI)" -ResourceGroupName "$(resourceGroupName)" -DnsName "$(dnsNameForUI)" -CertificateFilePath $(System.ArtifactsDirectory)/Drop/$(dnsNameForUI).pfx -CertificatePassword "$(sslCertPasswordForUI)"'
     azurePowerShellVersion: LatestVersion
   condition:  and(succeeded(), eq(variables['appGateway'], 'true'))