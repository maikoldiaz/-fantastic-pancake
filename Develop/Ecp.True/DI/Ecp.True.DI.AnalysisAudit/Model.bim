{
  "name": "SemanticModel",
  "compatibilityLevel": 1500,
  "model": {
    "culture": "en-US",
    "collation": "Latin1_General_CS_AS",
    "dataSources": [
      {
        "name": "mi-asc-ecp-dev-mainsqlmidev.public.c105ff79c574.database.windows.net",
        "connectionString": "Data Source=tcp:mi-asc-ecp-dev-mainsqlmidev.public.c105ff79c574.database.windows.net,3342;User ID=truedbuser;Persist Security Info=false;Encrypt=true;TrustServerCertificate=false;Initial Catalog=dbaeuecpdevtrue",
        "impersonationMode": "impersonateServiceAccount",
        "provider": "System.Data.SqlClient",
        "annotations": [
          {
            "name": "ConnectionEditUISource",
            "value": "SqlAzure"
          }
        ]
      }
    ],
    "tables": [
      {
        "name": "DimDate",
        "columns": [
          {
            "name": "DateKey",
            "dataType": "int64",
            "sourceColumn": "DateKey",
            "sourceProviderType": "int"
          },
          {
            "name": "Date",
            "dataType": "dateTime",
            "sourceColumn": "Date",
            "formatString": "General Date",
            "sourceProviderType": "date"
          },
          {
            "name": "Day",
            "dataType": "int64",
            "sourceColumn": "Day",
            "sourceProviderType": "tinyint"
          },
          {
            "name": "DaySuffix",
            "dataType": "string",
            "sourceColumn": "DaySuffix",
            "sourceProviderType": "char"
          },
          {
            "name": "Weekday",
            "dataType": "int64",
            "sourceColumn": "Weekday",
            "sourceProviderType": "tinyint"
          },
          {
            "name": "WeekDayName",
            "dataType": "string",
            "sourceColumn": "WeekDayName",
            "sourceProviderType": "varchar"
          },
          {
            "name": "WeekDayName_Short",
            "dataType": "string",
            "sourceColumn": "WeekDayName_Short",
            "sourceProviderType": "char"
          },
          {
            "name": "WeekDayName_FirstLetter",
            "dataType": "string",
            "sourceColumn": "WeekDayName_FirstLetter",
            "sourceProviderType": "char"
          },
          {
            "name": "DOWInMonth",
            "dataType": "int64",
            "sourceColumn": "DOWInMonth",
            "sourceProviderType": "tinyint"
          },
          {
            "name": "DayOfYear",
            "dataType": "int64",
            "sourceColumn": "DayOfYear",
            "sourceProviderType": "smallint"
          },
          {
            "name": "WeekOfMonth",
            "dataType": "int64",
            "sourceColumn": "WeekOfMonth",
            "sourceProviderType": "tinyint"
          },
          {
            "name": "WeekOfYear",
            "dataType": "int64",
            "sourceColumn": "WeekOfYear",
            "sourceProviderType": "tinyint"
          },
          {
            "name": "Month",
            "dataType": "int64",
            "sourceColumn": "Month",
            "sourceProviderType": "tinyint"
          },
          {
            "name": "MonthName",
            "dataType": "string",
            "sourceColumn": "MonthName",
            "sourceProviderType": "varchar"
          },
          {
            "name": "MonthName_Short",
            "dataType": "string",
            "sourceColumn": "MonthName_Short",
            "sourceProviderType": "char"
          },
          {
            "name": "MonthName_FirstLetter",
            "dataType": "string",
            "sourceColumn": "MonthName_FirstLetter",
            "sourceProviderType": "char"
          },
          {
            "name": "Quarter",
            "dataType": "int64",
            "sourceColumn": "Quarter",
            "sourceProviderType": "tinyint"
          },
          {
            "name": "QuarterName",
            "dataType": "string",
            "sourceColumn": "QuarterName",
            "sourceProviderType": "varchar"
          },
          {
            "name": "Year",
            "dataType": "int64",
            "sourceColumn": "Year",
            "sourceProviderType": "int"
          },
          {
            "name": "MMYYYY",
            "dataType": "string",
            "sourceColumn": "MMYYYY",
            "sourceProviderType": "char"
          },
          {
            "name": "MonthYear",
            "dataType": "string",
            "sourceColumn": "MonthYear",
            "sourceProviderType": "char"
          },
          {
            "name": "IsWeekend",
            "dataType": "boolean",
            "sourceColumn": "IsWeekend",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "sourceProviderType": "bit"
          },
          {
            "name": "IsHoliday",
            "dataType": "boolean",
            "sourceColumn": "IsHoliday",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "sourceProviderType": "bit"
          }
        ],
        "partitions": [
          {
            "name": "DimDate",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": " SELECT [Admin].[DimDate].* FROM [Admin].[DimDate] ",
              "dataSource": "mi-asc-ecp-dev-mainsqlmidev.public.c105ff79c574.database.windows.net"
            }
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": " SELECT [Admin].[DimDate].* FROM [Admin].[DimDate] "
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "DimDate"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "Admin"
          }
        ]
      },
      {
        "name": "ReportExecutionDate",
        "columns": [
          {
            "name": "ReportExecutionDate",
            "dataType": "dateTime",
            "sourceColumn": "ReportExecutionDate",
            "formatString": "General Date",
            "sourceProviderType": "datetimeoffset"
          }
        ],
        "partitions": [
          {
            "name": "ReportExecutionDate",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": " SELECT [Admin].[ReportExecutionDate].* FROM [Admin].[ReportExecutionDate] ",
              "dataSource": "mi-asc-ecp-dev-mainsqlmidev.public.c105ff79c574.database.windows.net"
            }
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": " SELECT [Admin].[ReportExecutionDate].* FROM [Admin].[ReportExecutionDate] "
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "ReportExecutionDate"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "Admin"
          }
        ]
      },
      {
        "name": "ReportHeaderDetails",
        "columns": [
          {
            "name": "PC_Category",
            "dataType": "string",
            "sourceColumn": "PC_Category",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "PC_Element",
            "dataType": "string",
            "sourceColumn": "PC_Element",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "PC_NodeName",
            "dataType": "string",
            "sourceColumn": "PC_NodeName",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "Category",
            "dataType": "string",
            "sourceColumn": "Category",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "Element",
            "dataType": "string",
            "sourceColumn": "Element",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "NodeName",
            "dataType": "string",
            "sourceColumn": "NodeName",
            "sourceProviderType": "nvarchar"
          }
        ],
        "partitions": [
          {
            "name": "ReportHeaderDetails",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": " SELECT [Admin].[ReportHeaderDetails].* FROM [Admin].[ReportHeaderDetails] ",
              "dataSource": "mi-asc-ecp-dev-mainsqlmidev.public.c105ff79c574.database.windows.net"
            }
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": " SELECT [Admin].[ReportHeaderDetails].* FROM [Admin].[ReportHeaderDetails] "
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "ReportHeaderDetails"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "Admin"
          }
        ]
      },
      {
        "name": "ReportTemplateDetails",
        "columns": [
          {
            "name": "ReportIdentifier",
            "dataType": "string",
            "sourceColumn": "ReportIdentifier",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "Area",
            "dataType": "string",
            "sourceColumn": "Area",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "InformationResponsible",
            "dataType": "string",
            "sourceColumn": "InformationResponsible",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "Frequency",
            "dataType": "string",
            "sourceColumn": "Frequency",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "InformationSource",
            "dataType": "string",
            "sourceColumn": "InformationSource",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "Datamart",
            "dataType": "string",
            "sourceColumn": "Datamart",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "Version",
            "dataType": "string",
            "sourceColumn": "Version",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "UpdateDate",
            "dataType": "string",
            "sourceColumn": "UpdateDate",
            "sourceProviderType": "varchar"
          },
          {
            "name": "ChangeResponsible",
            "dataType": "string",
            "sourceColumn": "ChangeResponsible",
            "sourceProviderType": "nvarchar"
          }
        ],
        "partitions": [
          {
            "name": "ReportTemplateDetails",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": " SELECT [Admin].[ReportTemplateDetails].* FROM [Admin].[ReportTemplateDetails] ",
              "dataSource": "mi-asc-ecp-dev-mainsqlmidev.public.c105ff79c574.database.windows.net"
            }
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": " SELECT [Admin].[ReportTemplateDetails].* FROM [Admin].[ReportTemplateDetails] "
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "ReportTemplateDetails"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "Admin"
          }
        ]
      },
      {
        "name": "MovementSource",
        "columns": [
          {
            "name": "MovementSourceId",
            "dataType": "int64",
            "sourceColumn": "MovementSourceId",
            "sourceProviderType": "int"
          },
          {
            "name": "MovementTransactionId",
            "dataType": "int64",
            "sourceColumn": "MovementTransactionId",
            "sourceProviderType": "int"
          },
          {
            "name": "SourceNodeId",
            "dataType": "int64",
            "sourceColumn": "SourceNodeId",
            "sourceProviderType": "int"
          },
          {
            "name": "SourceStorageLocationId",
            "dataType": "int64",
            "sourceColumn": "SourceStorageLocationId",
            "sourceProviderType": "int"
          },
          {
            "name": "SourceProductId",
            "dataType": "string",
            "sourceColumn": "SourceProductId",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "SourceProductTypeId",
            "dataType": "string",
            "sourceColumn": "SourceProductTypeId",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "CreatedBy",
            "dataType": "string",
            "sourceColumn": "CreatedBy",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "CreatedDate",
            "dataType": "dateTime",
            "sourceColumn": "CreatedDate",
            "formatString": "General Date",
            "sourceProviderType": "datetime"
          },
          {
            "name": "LastModifiedBy",
            "dataType": "string",
            "sourceColumn": "LastModifiedBy",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "LastModifiedDate",
            "dataType": "dateTime",
            "sourceColumn": "LastModifiedDate",
            "formatString": "General Date",
            "sourceProviderType": "datetime"
          },
          {
            "type": "calculated",
            "name": "ProductTypeIdElementIdCategoryId",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "MovementSource[SourceProductTypeId] & \"_11\""
          },
          {
            "type": "calculated",
            "name": "SourceNodeNameFilter",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " VAR SourceNodeName = MovementSource[SourceNodeId]",
              "RETURN",
              "    CALCULATE (",
              "        SELECTEDVALUE (Node[Name] ),",
              "        ALL (MovementSource),",
              "        Node[NodeId] = SourceNodeName",
              "    )"
            ]
          }
        ],
        "partitions": [
          {
            "name": "MovementSource",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": " SELECT [Offchain].[MovementSource].* FROM [Offchain].[MovementSource] ",
              "dataSource": "mi-asc-ecp-dev-mainsqlmidev.public.c105ff79c574.database.windows.net"
            }
          }
        ],
        "measures": [
          {
            "name": "SourceNodeName",
            "expression": "IF(HASONEVALUE(MovementSource[SourceNodeId]),CALCULATE(CALCULATE(VALUES(Node[Name]),MovementSource),USERELATIONSHIP(MovementSource[SourceNodeId],Node[NodeId]),ALL(Node)))"
          },
          {
            "name": "ProductTypeSourceName",
            "expression": "IF(HASONEVALUE(MovementSource[ProductTypeIdElementIdCategoryId]),CALCULATE(CALCULATE(VALUES(CategoryElement[Name]),MovementSource),USERELATIONSHIP(MovementSource[ProductTypeIdElementIdCategoryId],CategoryElement[ElementIdCategoryId]),ALL(CategoryElement)))"
          },
          {
            "name": "SourceProductName",
            "expression": "IF(HASONEVALUE(MovementSource[SourceProductId]),CALCULATE(CALCULATE(VALUES('Product'[Name]),MovementSource),USERELATIONSHIP(MovementSource[SourceProductId],'Product'[ProductId]),ALL('Product')))"
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": " SELECT [Offchain].[MovementSource].* FROM [Offchain].[MovementSource] "
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "MovementSource"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "Offchain"
          }
        ]
      },
      {
        "name": "Movement",
        "columns": [
          {
            "name": "MovementTransactionId",
            "dataType": "int64",
            "sourceColumn": "MovementTransactionId",
            "sourceProviderType": "int"
          },
          {
            "name": "MessageTypeId",
            "dataType": "int64",
            "sourceColumn": "MessageTypeId",
            "sourceProviderType": "int"
          },
          {
            "name": "SystemTypeId",
            "dataType": "int64",
            "sourceColumn": "SystemTypeId",
            "sourceProviderType": "int"
          },
          {
            "name": "Action",
            "dataType": "string",
            "sourceColumn": "EventType",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "MovementId",
            "dataType": "string",
            "sourceColumn": "MovementId",
            "sourceProviderType": "varchar"
          },
          {
            "name": "MovementTypeId",
            "dataType": "string",
            "sourceColumn": "MovementTypeId",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "TicketId",
            "dataType": "int64",
            "sourceColumn": "TicketId",
            "sourceProviderType": "int"
          },
          {
            "name": "SegmentId",
            "dataType": "int64",
            "sourceColumn": "SegmentId",
            "sourceProviderType": "int"
          },
          {
            "name": "OperationalDate",
            "dataType": "dateTime",
            "sourceColumn": "OperationalDate",
            "formatString": "dd-MMM-yy",
            "sourceProviderType": "datetime",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"1033\" Group=\"ShortDate\" FormatString=\"dd-MMM-yy\" /></DateTimes></Format>"
              }
            ]
          },
          {
            "name": "GrossAmount",
            "dataType": "double",
            "sourceColumn": "GrossStandardVolume",
            "sourceProviderType": "decimal"
          },
          {
            "name": "NetQuantity",
            "dataType": "double",
            "sourceColumn": "NetStandardVolume",
            "sourceProviderType": "decimal"
          },
          {
            "name": "UncertaintyPercentage",
            "dataType": "double",
            "sourceColumn": "UncertaintyPercentage",
            "sourceProviderType": "decimal"
          },
          {
            "name": "MeasurementUnit",
            "dataType": "string",
            "sourceColumn": "MeasurementUnit",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "ScenarioId",
            "dataType": "int64",
            "sourceColumn": "ScenarioId",
            "sourceProviderType": "int"
          },
          {
            "name": "Observations",
            "dataType": "string",
            "sourceColumn": "Observations",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "Classification",
            "dataType": "string",
            "sourceColumn": "Classification",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "IsDeleted",
            "dataType": "boolean",
            "sourceColumn": "IsDeleted",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "sourceProviderType": "bit"
          },
          {
            "name": "IsSystemGenerated",
            "dataType": "boolean",
            "sourceColumn": "IsSystemGenerated",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "sourceProviderType": "bit"
          },
          {
            "name": "VariableTypeId",
            "dataType": "int64",
            "sourceColumn": "VariableTypeId",
            "sourceProviderType": "int"
          },
          {
            "name": "FileRegistrationTransactionId",
            "dataType": "int64",
            "sourceColumn": "FileRegistrationTransactionId",
            "sourceProviderType": "int"
          },
          {
            "name": "OwnershipTicketId",
            "dataType": "int64",
            "sourceColumn": "OwnershipTicketId",
            "sourceProviderType": "int"
          },
          {
            "name": "ReasonId",
            "dataType": "int64",
            "sourceColumn": "ReasonId",
            "sourceProviderType": "int"
          },
          {
            "name": "CommentChange",
            "dataType": "string",
            "sourceColumn": "Comment",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "MovementContractId",
            "dataType": "int64",
            "sourceColumn": "MovementContractId",
            "sourceProviderType": "int"
          },
          {
            "name": "BlockchainStatus",
            "dataType": "boolean",
            "sourceColumn": "BlockchainStatus",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "sourceProviderType": "bit"
          },
          {
            "name": "BlockchainMovementTransactionId",
            "dataType": "string",
            "sourceColumn": "BlockchainMovementTransactionId",
            "sourceProviderType": "uniqueidentifier"
          },
          {
            "name": "PreviousBlockchainMovementTransactionId",
            "dataType": "string",
            "sourceColumn": "PreviousBlockchainMovementTransactionId",
            "sourceProviderType": "uniqueidentifier"
          },
          {
            "name": "InsecurityPercentage",
            "dataType": "double",
            "sourceColumn": "Tolerance",
            "sourceProviderType": "decimal"
          },
          {
            "name": "OperatorId",
            "dataType": "int64",
            "sourceColumn": "OperatorId",
            "sourceProviderType": "int"
          },
          {
            "name": "BackupMovementId",
            "dataType": "string",
            "sourceColumn": "BackupMovementId",
            "sourceProviderType": "varchar"
          },
          {
            "name": "GlobalMovementId",
            "dataType": "string",
            "sourceColumn": "GlobalMovementId",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "BalanceStatus",
            "dataType": "string",
            "sourceColumn": "BalanceStatus",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "SAPProcessStatus",
            "dataType": "string",
            "sourceColumn": "SAPProcessStatus",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "MovementEventId",
            "dataType": "int64",
            "sourceColumn": "MovementEventId",
            "sourceProviderType": "int"
          },
          {
            "name": "SourceMovementId",
            "dataType": "int64",
            "sourceColumn": "SourceMovementId",
            "sourceProviderType": "int"
          },
          {
            "name": "TransactionHash",
            "dataType": "string",
            "sourceColumn": "TransactionHash",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "BlockNumber",
            "dataType": "string",
            "sourceColumn": "BlockNumber",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "RetryCount",
            "dataType": "int64",
            "sourceColumn": "RetryCount",
            "sourceProviderType": "int"
          },
          {
            "name": "IsOfficial",
            "dataType": "boolean",
            "sourceColumn": "IsOfficial",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "sourceProviderType": "bit"
          },
          {
            "name": "Version",
            "dataType": "string",
            "sourceColumn": "Version",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "BatchId",
            "dataType": "string",
            "sourceColumn": "BatchId",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "SystemId",
            "dataType": "int64",
            "sourceColumn": "SystemId",
            "sourceProviderType": "int"
          },
          {
            "name": "SourceSystemId",
            "dataType": "int64",
            "sourceColumn": "SourceSystemId",
            "sourceProviderType": "int"
          },
          {
            "name": "IsTransferPoint",
            "dataType": "boolean",
            "sourceColumn": "IsTransferPoint",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "sourceProviderType": "bit"
          },
          {
            "name": "SourceMovementTransactionId",
            "dataType": "int64",
            "sourceColumn": "SourceMovementTransactionId",
            "sourceProviderType": "int"
          },
          {
            "name": "SourceInventoryProductId",
            "dataType": "int64",
            "sourceColumn": "SourceInventoryProductId",
            "sourceProviderType": "int"
          },
          {
            "name": "DeltaTicketId",
            "dataType": "int64",
            "sourceColumn": "DeltaTicketId",
            "sourceProviderType": "int"
          },
          {
            "name": "CreatedBy",
            "dataType": "string",
            "sourceColumn": "CreatedBy",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "CreatedDateSource",
            "dataType": "dateTime",
            "sourceColumn": "CreatedDate",
            "formatString": "dd-MMM-yy",
            "sourceProviderType": "datetime",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"1033\" Group=\"ShortDate\" FormatString=\"dd-MMM-yy\" /></DateTimes></Format>"
              }
            ]
          },
          {
            "name": "LastModifiedBy",
            "dataType": "string",
            "sourceColumn": "LastModifiedBy",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "ModifiedDate",
            "dataType": "dateTime",
            "sourceColumn": "LastModifiedDate",
            "formatString": "dd-MMM-yy",
            "sourceProviderType": "datetime",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"1033\" Group=\"ShortDate\" FormatString=\"dd-MMM-yy\" /></DateTimes></Format>"
              }
            ]
          },
          {
            "type": "calculated",
            "name": "MovementTypeIdElementIdCategoryId",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "Movement[MovementTypeId] & \"_9\""
          },
          {
            "type": "calculated",
            "name": "ReasonIdElementIdCategoryId",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "Movement[ReasonId] & \"_16\""
          },
          {
            "type": "calculated",
            "name": "MeasurementUnitElementIdCategoryId",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "Movement[MeasurementUnit] & \"_6\""
          },
          {
            "type": "calculated",
            "name": "MovementIdModifiedDate",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "Movement[MovementId] & \"_\" & FORMAT(Movement[CreatedDateSource], \"dMMyyyy\")"
          },
          {
            "type": "calculated",
            "name": "OperatorNameFilter",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " VAR OperatorName =  Movement[OperatorIdElementIdCategoryId]",
              " RETURN",
              "    CALCULATE (",
              "        SELECTEDVALUE (CategoryElement[Name]),",
              "        ALL (Movement),",
              "        CategoryElement[ElementIdCategoryId] = OperatorName",
              "    )"
            ]
          },
          {
            "type": "calculated",
            "name": "OperatorIdElementIdCategoryId",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "Movement[OperatorId] & \"_3\""
          },
          {
            "type": "calculated",
            "name": "%NSV",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": "IF(UPPER(Movement[Action])=\"INSERT\",IFERROR(ABS(Movement[NetQuantity]-[SumNSV])/Movement[NetQuantity],BLANK()),BLANK())"
          },
          {
            "type": "calculated",
            "name": "Categories%NSV",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "IF(ISBLANK(Movement[%NSV]),BLANK(),IF(Movement[%NSV]=0,0,IF(Movement[%NSV]<=0.01,1,IF(Movement[%NSV]<=0.02,2,IF(Movement[%NSV]<=0.05,3,IF(Movement[%NSV]>0.05,4,BLANK()))))))"
          },
          {
            "type": "calculated",
            "name": "Rank%NSV",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "SWITCH(Movement[Categories%NSV],0,\"0%\",1,\"0%-1%\",2,\"1%-2%\",3,\"2%-5%\",4,\">5%\",\"NA\")"
          },
          {
            "type": "calculated",
            "name": "IsUpdateColumn",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "IF(UPPER([IsUpdate])=\"UPDATE\",1,0)"
          },
          {
            "type": "calculated",
            "name": "OpTop5",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "IF([RankOp]<= 4,Movement[OperatorNameFilter],\"Otros\")"
          },
          {
            "type": "calculated",
            "name": "DaysCreateUpdate",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "DATEDIFF(Movement[FirstInsert],Movement[CreatedDateSource],DAY)"
          },
          {
            "type": "calculated",
            "name": "RankDaysCreateUpdate",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "IF(Movement[DaysCreateUpdate]<=3,\"1-3\",IF(Movement[DaysCreateUpdate]<=7,\"4-7\",IF(Movement[DaysCreateUpdate]<=14,\"8-14\",IF(Movement[DaysCreateUpdate]<=21,\"15-21\",IF(Movement[DaysCreateUpdate]<=28,\"22-28\",IF(Movement[DaysCreateUpdate]>28,\"29+\",\"NA\"))))))"
          },
          {
            "type": "calculated",
            "name": "SorterDays CreateUpdate",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "SWITCH(Movement[RankDaysCreateUpdate],\"1-3\",1,\"4-7\",2,\"8-14\",3,\"15-21\",4,\"22-28\",5,\"29+\",6,7)"
          },
          {
            "type": "calculated",
            "name": "DaysOperationUpdate",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "DATEDIFF(Movement[OperationalDate],Movement[CreatedDateSource],DAY)"
          },
          {
            "type": "calculated",
            "name": "RankDaysOperatioUpdate",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "IF(Movement[DaysOperationUpdate]<=3,\"1-3\",IF(Movement[DaysOperationUpdate]<=7,\"4-7\",IF(Movement[DaysOperationUpdate]<=14,\"8-14\",IF(Movement[DaysOperationUpdate]<=21,\"15-21\",IF(Movement[DaysOperationUpdate]<=28,\"22-28\",IF(Movement[DaysOperationUpdate]>28,\"29+\",\"NA\"))))))"
          },
          {
            "type": "calculated",
            "name": "SorterOperationUpdate",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "SWITCH(Movement[RankDaysOperatioUpdate],\"1-3\",1,\"4-7\",2,\"8-14\",3,\"15-21\",4,\"22-28\",5,\"29+\",6,7)"
          },
          {
            "type": "calculated",
            "name": "User",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "IF(UPPER(Movement[Action]) = \"INSERT\", Movement[CreatedBy],IF(UPPER(Movement[Action]) = \"UPDATE\", Movement[ModifiedBy], IF(UPPER(Movement[Action]) = \"DELETE\",  Movement[ModifiedBy])))"
          },
          {
            "type": "calculated",
            "name": "SegmentIdElementIdCategoryId",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "Movement[SegmentId] & \"_2\""
          },
          {
            "type": "calculated",
            "name": "MovementTypeNameFilter",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " VAR MovementTypeName = Movement[MovementTypeIdElementIdCategoryId]",
              " RETURN",
              "    CALCULATE (",
              "        SELECTEDVALUE (CategoryElement[Name]),",
              "        ALL (Movement),",
              "        CategoryElement[ElementIdCategoryId] = MovementTypeName",
              "    )"
            ]
          },
          {
            "type": "calculated",
            "name": "ScenarioName",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "CALCULATE(VALUES(ScenarioType[Name]),USERELATIONSHIP(Movement[ScenarioId],ScenarioType[ScenarioTypeId]))"
          },
          {
            "type": "calculated",
            "name": "SegmentNameFilter",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " VAR Segment = Movement[SegmentIdElementIdCategoryId]",
              "RETURN",
              "    CALCULATE (",
              "        SELECTEDVALUE (CategoryElement[Name]),",
              "        ALL (Movement),",
              "        CategoryElement[ElementIdCategoryId] = Segment",
              "        )"
            ]
          },
          {
            "type": "calculated",
            "name": "OperationalDatekey",
            "dataType": "int64",
            "isDataTypeInferred": false,
            "expression": "VALUE(FORMAT(Movement[OperationalDate],\"yyyymmdd\"))"
          },
          {
            "type": "calculated",
            "name": "ModifiedDateWithoutHours",
            "dataType": "dateTime",
            "isDataTypeInferred": true,
            "expression": "IF(UPPER(Movement[Action]) == \"UPDATE\" || UPPER(Movement[Action]) == \"DELETE\", DATE(YEAR(Movement[CreatedDateSource]),MONTH(Movement[CreatedDateSource]),DAY(Movement[CreatedDateSource])),BLANK() )",
            "formatString": "dd-MMM-yy",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"1033\" Group=\"ShortDate\" FormatString=\"dd-MMM-yy\" /></DateTimes></Format>"
              }
            ]
          },
          {
            "type": "calculated",
            "name": "EndDate",
            "dataType": "dateTime",
            "isDataTypeInferred": true,
            "expression": "CALCULATE(VALUES(MovementPeriod[EndTime]),USERELATIONSHIP(Movement[MovementTransactionId],MovementPeriod[MovementTransactionId]))",
            "formatString": "General Date"
          },
          {
            "type": "calculated",
            "name": "SourceNodeId",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "CALCULATE(VALUES(MovementSource[SourceNodeId]),USERELATIONSHIP(Movement[MovementTransactionId],MovementSource[MovementTransactionId]))"
          },
          {
            "type": "calculated",
            "name": "DestinationNodeId",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "CALCULATE(VALUES(MovementDestination[DestinationNodeId]),USERELATIONSHIP(Movement[MovementTransactionId],MovementDestination[MovementTransactionId]))"
          },
          {
            "type": "calculated",
            "name": "StartDate",
            "dataType": "dateTime",
            "isDataTypeInferred": true,
            "expression": "CALCULATE(VALUES(MovementPeriod[StartTime]),USERELATIONSHIP(Movement[MovementTransactionId],MovementPeriod[MovementTransactionId]))",
            "formatString": "General Date"
          },
          {
            "name": "OfficialDeltaTicketId",
            "dataType": "int64",
            "sourceColumn": "OfficialDeltaTicketId"
          },
          {
            "type": "calculated",
            "name": "SourceNode",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " VAR SourceNode = Movement[MovementTransactionId]",
              "RETURN",
              "    CALCULATE (",
              "        SELECTEDVALUE (MovementSource[SourceNodeNameFilter] ),",
              "        ALL (Movement),",
              "        MovementSource[MovementTransactionId] = SourceNode",
              "    )"
            ]
          },
          {
            "type": "calculated",
            "name": "DestinationNode",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " VAR DestinationNode = Movement[MovementTransactionId]",
              "RETURN",
              "    CALCULATE (",
              "        SELECTEDVALUE (MovementDestination[DestinationNodeNameFilter] ),",
              "        ALL (Movement),",
              "        MovementDestination[MovementTransactionId] = DestinationNode",
              "    )"
            ]
          },
          {
            "type": "calculated",
            "name": "SystemIdCategoryElementCategoryId",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "Movement[SystemId] & \"_8\""
          },
          {
            "type": "calculated",
            "name": "SourceSystemIdCategoryElementCategoryId",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "Movement[SourceSystemId] & \"_22\""
          },
          {
            "type": "calculated",
            "name": "System",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " VAR System = Movement[SystemIdCategoryElementCategoryId]",
              "RETURN",
              "    CALCULATE (",
              "        SELECTEDVALUE (CategoryElement[Name] ),",
              "        ALL (Movement),",
              "        CategoryElement[ElementIdCategoryId] = System",
              "    )"
            ]
          },
          {
            "type": "calculated",
            "name": "Source",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "VAR Sources = Movement[SourceSystemIdCategoryElementCategoryId]",
              "RETURN",
              "    CALCULATE (",
              "        SELECTEDVALUE (CategoryElement[Name] ),",
              "        ALL (Movement),",
              "        CategoryElement[ElementIdCategoryId] = Sources",
              "    )"
            ]
          },
          {
            "type": "calculated",
            "name": "MovementSourceNodeId",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": [
              " VAR SourceNodeId = Movement[MovementTransactionId]",
              "RETURN",
              "    CALCULATE (",
              "        SELECTEDVALUE (MovementSource[SourceNodeId] ),",
              "        ALL (Movement),",
              "        MovementSource[MovementTransactionId] = SourceNodeId",
              "    )"
            ]
          },
          {
            "type": "calculated",
            "name": "MovementDestinationNodeId",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": [
              " VAR DestinationNodeId = Movement[MovementTransactionId]",
              "RETURN",
              "    CALCULATE (",
              "        SELECTEDVALUE (MovementDestination[DestinationNodeId] ),",
              "        ALL (Movement),",
              "        MovementDestination[MovementTransactionId] = DestinationNodeId",
              "    )"
            ]
          },
          {
            "type": "calculated",
            "name": "ModifiedBy",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "VAR LastModifiedBy = Movement[LastModifiedBy]",
              "              VAR FileRegistrationTrasactionId = Movement[FileRegistrationTransactionId]",
              "              RETURN",
              "              IF(ISBLANK(LastModifiedBy) || UPPER(LastModifiedBy) = \"SYSTEM\",",
              "              CALCULATE (",
              "                      SELECTEDVALUE (FileRegistrationTransaction[FileRegistrationCreatedBy]),",
              "                      ALL (Movement),",
              "                      FileRegistrationTransaction[FileRegistrationTransactionId] =  FileRegistrationTrasactionId",
              "                       ),",
              "              LastModifiedBy)"
            ]
          },
          {
            "type": "calculated",
            "name": "CreatedDate",
            "dataType": "dateTime",
            "isDataTypeInferred": true,
            "expression": "Movement[CreatedDateSource]",
            "formatString": "dd-MMM-yy HH:mm:ss"
          },
          {
            "type": "calculated",
            "name": "DeltaNodeCreatedDate",
            "dataType": "dateTime",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "VAR NodeId = Movement[NodeId]",
              "VAR StartDate = Movement[StartDate]",
              "VAR EndDate = Movement[EndDate]",
              "RETURN",
              "CALCULATE (",
              "        SELECTEDVALUE (DeltaNode[TicketCreatedDate]),",
              "        ALL (Movement),",
              "        DeltaNode[NodeId] = NodeId, DeltaNode[StartDate] = StartDate, DeltaNode[EndDate] = EndDate, DeltaNode[Status] <> 3",
              "       )"
            ]
          },
          {
            "type": "calculated",
            "name": "NodeId",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "VAR StartDate = Movement[StartDate]",
              "VAR EndDate = Movement[EndDate]",
              "VAR SegmentId = Movement[SegmentId]",
              "VAR DestinationNodeId = Movement[DestinationNodeId]",
              "VAR SourceNodeId = Movement[SourceNodeId]",
              "VAR NodeSource = CALCULATE (",
              "        SELECTEDVALUE (NodeTag[NodeId]),",
              "        ALL (Movement),",
              "       NodeTag[NodeId] = SourceNodeId, NodeTag[StartDate] <= TODAY(), NodeTag[EndDate] >= TODAY(),NodeTag[ElementId] = SegmentId",
              "       )",
              "VAR NodeDestination = CALCULATE (",
              "        SELECTEDVALUE (NodeTag[NodeId]),",
              "        ALL (Movement),",
              "       NodeTag[NodeId] = DestinationNodeId, NodeTag[StartDate] <= TODAY(), NodeTag[EndDate] >= TODAY(), NodeTag[ElementId] = SegmentId",
              "       )",
              "RETURN",
              "IF(ISBLANK(NodeSource), NodeDestination, NodeSource)"
            ]
          },
          {
            "type": "calculated",
            "name": "NodeName",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " VAR NodeId = Movement[NodeId]",
              "RETURN",
              "    CALCULATE (",
              "        SELECTEDVALUE (Node[Name]),",
              "        ALL (Movement),",
              "        Node[NodeId] = NodeId",
              "        )"
            ]
          },
          {
            "type": "calculated",
            "name": "StartDateShort",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "FORMAT(Movement[StartDate], \"MM/d/yyyy\")"
          },
          {
            "type": "calculated",
            "name": "EndDateShort",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "FORMAT(Movement[EndDate], \"MM/d/yyyy\")"
          },
          {
            "type": "calculated",
            "name": "CreatedDateShort",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "FORMAT(Movement[CreatedDate], \"MM/d/yyyy\")"
          },
          {
            "type": "calculated",
            "name": "FirstInsert",
            "dataType": "dateTime",
            "isDataTypeInferred": true,
            "expression": "CALCULATE(MIN(Movement[CreatedDateSource]), FILTER(Movement, Movement[MovementId] = EARLIER(Movement[MovementId]) && UPPER( Movement[Action]) = \"INSERT\"))"
          },
          {
            "type": "calculated",
            "name": "Delete",
            "dataType": "dateTime",
            "isDataTypeInferred": true,
            "expression": "CALCULATE(MAX(Movement[CreatedDateSource]), FILTER(Movement, Movement[MovementId] = EARLIER(Movement[MovementId]) && UPPER(Movement[Action]) = \"DELETE\"))"
          },
          {
            "type": "calculated",
            "name": "Update",
            "dataType": "dateTime",
            "isDataTypeInferred": true,
            "expression": "CALCULATE(MAX(Movement[CreatedDateSource]), FILTER(Movement, Movement[MovementId] = EARLIER(Movement[MovementId]) && UPPER(Movement[Action]) = \"UPDATE\"))"
          },
          {
            "type": "calculated",
            "name": "ActionResult",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "IF(ISBLANK(Movement[Delete]) = FALSE(), \"Delete\", IF(ISBLANK(Movement[Update]) = FALSE(), \"Update\", BLANK()))"
          }
        ],
        "partitions": [
          {
            "name": "Movement",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": " SELECT [Offchain].[Movement].[MovementTransactionId],[Offchain].[Movement].[MessageTypeId],[Offchain].[Movement].[SystemTypeId],[Offchain].[Movement].[EventType],[Offchain].[Movement].[MovementId],[Offchain].[Movement].[MovementTypeId],[Offchain].[Movement].[TicketId],[Offchain].[Movement].[SegmentId],[Offchain].[Movement].[OperationalDate],[Offchain].[Movement].[GrossStandardVolume],[Offchain].[Movement].[NetStandardVolume],[Offchain].[Movement].[UncertaintyPercentage],[Offchain].[Movement].[MeasurementUnit],[Offchain].[Movement].[ScenarioId],[Offchain].[Movement].[Observations],[Offchain].[Movement].[Classification],[Offchain].[Movement].[IsDeleted],[Offchain].[Movement].[IsSystemGenerated],[Offchain].[Movement].[VariableTypeId],[Offchain].[Movement].[FileRegistrationTransactionId],[Offchain].[Movement].[OwnershipTicketId],[Offchain].[Movement].[ReasonId],[Offchain].[Movement].[Comment],[Offchain].[Movement].[MovementContractId],[Offchain].[Movement].[BlockchainStatus],[Offchain].[Movement].[BlockchainMovementTransactionId],[Offchain].[Movement].[PreviousBlockchainMovementTransactionId],[Offchain].[Movement].[Tolerance],[Offchain].[Movement].[OperatorId],[Offchain].[Movement].[BackupMovementId],[Offchain].[Movement].[GlobalMovementId],[Offchain].[Movement].[BalanceStatus],[Offchain].[Movement].[SAPProcessStatus],[Offchain].[Movement].[MovementEventId],[Offchain].[Movement].[SourceMovementId],[Offchain].[Movement].[TransactionHash],[Offchain].[Movement].[BlockNumber],[Offchain].[Movement].[RetryCount],[Offchain].[Movement].[IsOfficial],[Offchain].[Movement].[Version],[Offchain].[Movement].[BatchId],[Offchain].[Movement].[SystemId],[Offchain].[Movement].[SourceSystemId],[Offchain].[Movement].[IsTransferPoint],[Offchain].[Movement].[SourceMovementTransactionId],[Offchain].[Movement].[SourceInventoryProductId],[Offchain].[Movement].[DeltaTicketId],[Offchain].[Movement].[OfficialDeltaTicketId],[Offchain].[Movement].[CreatedBy],[Offchain].[Movement].[CreatedDate],[Offchain].[Movement].[LastModifiedBy],[Offchain].[Movement].[LastModifiedDate] FROM [Offchain].[Movement] ",
              "dataSource": "mi-asc-ecp-dev-mainsqlmidev.public.c105ff79c574.database.windows.net"
            },
            "annotations": [
              {
                "name": "TableWidgetSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"TableWidgetSerialization\"><AnnotationContent><![CDATA[<?xml version=\"1.0\"?>",
                  "<TableWidgetGridSerialization xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">",
                  "  <ColumnSuggestedType />",
                  "  <ColumnFormat />",
                  "  <ColumnAccuracy />",
                  "  <ColumnCurrencySymbol />",
                  "  <ColumnPositivePattern />",
                  "  <ColumnNegativePattern />",
                  "  <ColumnWidths>",
                  "    <item>",
                  "      <key>",
                  "        <string>MovementTransactionId</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>146</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>MessageTypeId</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>106</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>SystemTypeId</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>99</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>SourceSystem</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>98</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>EventType</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>82</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>MovementId</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>90</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>MovementTypeId</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>114</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>TicketId</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>68</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>SegmentId</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>82</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>OperationalDate</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>109</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>GrossStandardVolume</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>135</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>NetStandardVolume</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>125</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>UncertaintyPercentage</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>141</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>MeasurementUnit</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>114</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>ScenarioId</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>81</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>Observations</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>94</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>Classification</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>92</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>IsDeleted</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>76</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>IsSystemGenerated</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>125</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>VariableTypeId</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>102</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>FileRegistrationTransactionId</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>170</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>OwnershipTicketId</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>119</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>SystemName</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>92</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>ReasonId</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>76</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>Comment</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>75</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>MovementContractId</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>132</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>BlockchainStatus</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>110</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>BlockchainMovementTransactionId</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>195</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>PreviousBlockchainMovementTransactionId</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>236</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>Tolerance</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>77</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>OperatorId</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>84</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>BackupMovementId</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>124</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>GlobalMovementId</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>119</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>BalanceStatus</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>98</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>SAPProcessStatus</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>117</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>MovementEventId</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>118</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>SourceMovementId</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>123</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>TransactionHash</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>110</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>BlockNumber</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>91</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>RetryCount</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>86</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>IsOfficial</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>72</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>Version</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>65</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>BatchId</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>67</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>SystemId</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>75</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>SourceSystemId</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>108</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>IsTransferPoint</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>104</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>SourceMovementTransactionId</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>179</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>SourceInventoryProductId</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>158</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>DeltaTicketId</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>93</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>OfficialDeltaTicketId</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>126</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>PendingApproval</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>111</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>OfficialDeltaMessageTypeId</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>164</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>CreatedBy</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>81</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>CreatedDate</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>92</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>LastModifiedBy</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>102</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>LastModifiedDate</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>113</int>",
                  "      </value>",
                  "    </item>",
                  "  </ColumnWidths>",
                  "  <ColumnDisplayIndex>",
                  "    <item>",
                  "      <key>",
                  "        <string>MovementTransactionId</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>0</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>MessageTypeId</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>1</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>SystemTypeId</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>2</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>SourceSystem</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>3</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>EventType</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>4</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>MovementId</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>5</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>MovementTypeId</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>6</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>TicketId</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>7</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>SegmentId</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>8</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>OperationalDate</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>9</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>GrossStandardVolume</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>10</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>NetStandardVolume</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>11</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>UncertaintyPercentage</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>12</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>MeasurementUnit</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>13</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>ScenarioId</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>14</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>Observations</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>15</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>Classification</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>16</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>IsDeleted</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>17</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>IsSystemGenerated</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>18</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>VariableTypeId</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>19</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>FileRegistrationTransactionId</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>20</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>OwnershipTicketId</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>21</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>SystemName</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>22</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>ReasonId</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>23</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>Comment</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>24</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>MovementContractId</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>25</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>BlockchainStatus</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>26</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>BlockchainMovementTransactionId</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>27</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>PreviousBlockchainMovementTransactionId</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>28</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>Tolerance</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>29</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>OperatorId</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>30</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>BackupMovementId</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>31</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>GlobalMovementId</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>32</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>BalanceStatus</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>33</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>SAPProcessStatus</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>34</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>MovementEventId</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>35</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>SourceMovementId</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>36</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>TransactionHash</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>37</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>BlockNumber</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>38</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>RetryCount</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>39</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>IsOfficial</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>40</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>Version</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>41</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>BatchId</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>42</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>SystemId</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>43</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>SourceSystemId</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>44</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>IsTransferPoint</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>45</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>SourceMovementTransactionId</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>46</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>SourceInventoryProductId</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>47</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>DeltaTicketId</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>48</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>OfficialDeltaTicketId</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>49</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>PendingApproval</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>50</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>OfficialDeltaMessageTypeId</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>51</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>CreatedBy</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>52</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>CreatedDate</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>53</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>LastModifiedBy</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>54</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>LastModifiedDate</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>55</int>",
                  "      </value>",
                  "    </item>",
                  "  </ColumnDisplayIndex>",
                  "  <ColumnFrozen />",
                  "  <ColumnChecked>",
                  "    <item>",
                  "      <key>",
                  "        <string>OfficialDeltaTicketId</string>",
                  "      </key>",
                  "      <value>",
                  "        <boolean>true</boolean>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>PendingApproval</string>",
                  "      </key>",
                  "      <value>",
                  "        <boolean>false</boolean>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>OfficialDeltaMessageTypeId</string>",
                  "      </key>",
                  "      <value>",
                  "        <boolean>false</boolean>",
                  "      </value>",
                  "    </item>",
                  "  </ColumnChecked>",
                  "  <ColumnFilter />",
                  "  <SelectionFilter />",
                  "  <FilterParameters />",
                  "  <IsSortDescending>false</IsSortDescending>",
                  "</TableWidgetGridSerialization>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "MovementTypeName",
            "expression": "IF(HASONEVALUE(Movement[MovementtypeIdElementIdCategoryId]),CALCULATE(CALCULATE(VALUES(CategoryElement[Name]),Movement),USERELATIONSHIP(Movement[MovementtypeIdElementIdCategoryId],CategoryElement[ElementIdCategoryId]),ALL(CategoryElement)))"
          },
          {
            "name": "Reason",
            "expression": "IF(HASONEVALUE(Movement[ReasonIdElementIdCategoryId]),CALCULATE(CALCULATE(VALUES(CategoryElement[Name]),Movement),USERELATIONSHIP(Movement[ReasonIdElementIdCategoryId],CategoryElement[ElementIdCategoryId]),ALL(CategoryElement)))"
          },
          {
            "name": "Units",
            "expression": "IF(HASONEVALUE(Movement[MeasurementUnitElementIdCategoryId]),CALCULATE(CALCULATE(VALUES(CategoryElement[Name]),Movement),USERELATIONSHIP(Movement[MeasurementUnitElementIdCategoryId],CategoryElement[ElementIdCategoryId]),ALL(CategoryElement)))"
          },
          {
            "name": "%Updates",
            "expression": " DIVIDE(CALCULATE(DISTINCTCOUNT(Movement[MovementId]), UPPER(Movement[Action])=\"UPDATE\"),DISTINCTCOUNT(Movement[MovementId]))",
            "formatString": "0.00 %;-0.00 %;0.00 %"
          },
          {
            "name": "MovDeletes",
            "expression": " CALCULATE(DISTINCTCOUNT(Movement[MovementId]),FILTER(Movement,UPPER(Movement[Action])=\"DELETE\"))"
          },
          {
            "name": "MovUpdates",
            "expression": " DISTINCTCOUNT(Movement[MovementId])-[MovDeletes]"
          },
          {
            "name": "CountOp",
            "expression": " CALCULATE(DISTINCTCOUNT(Movement[MovementIdModifiedDate]), ALLSELECTED(Movement[OperatorId]))"
          },
          {
            "name": "IsUpdate",
            "expression": " CALCULATE(MAX(Movement[Action]),ALLEXCEPT(Movement,Movement[MovementId]))"
          },
          {
            "name": "RankOp",
            "expression": " RANKX(ALLSELECTED(Movement[OperatorId]),[CountOp])"
          },
          {
            "name": "SumNSV",
            "expression": " CALCULATE(SUM(Movement[NetQuantity]),ALLEXCEPT(Movement,Movement[MovementId]))"
          },
          {
            "name": "SegmentName",
            "expression": "IF(HASONEVALUE(Movement[SegmentIdElementIdCategoryId]),CALCULATE(CALCULATE(VALUES(CategoryElement[Name]),Movement),USERELATIONSHIP(Movement[SegmentIdElementIdCategoryId],CategoryElement[ElementIdCategoryId]),ALL(CategoryElement)))"
          },
          {
            "name": "OperatorName",
            "expression": "IF(HASONEVALUE(Movement[OperatorIdElementIdCategoryId]),CALCULATE(CALCULATE(VALUES(CategoryElement[Name]),Movement),USERELATIONSHIP(Movement[OperatorIdElementIdCategoryId],CategoryElement[ElementIdCategoryId]),ALL(CategoryElement)))"
          },
          {
            "name": "CausalChangeMov",
            "expression": "IF(HASONEVALUE(Movement[ReasonIdElementIdCategoryId]),CALCULATE(CALCULATE(VALUES(CategoryElement[Name]),Movement),USERELATIONSHIP(Movement[ReasonIdElementIdCategoryId],CategoryElement[ElementIdCategoryId]),ALL(CategoryElement)))"
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": " SELECT [Offchain].[Movement].[MovementTransactionId],[Offchain].[Movement].[MessageTypeId],[Offchain].[Movement].[SystemTypeId],[Offchain].[Movement].[SourceSystem],[Offchain].[Movement].[EventType],[Offchain].[Movement].[MovementId],[Offchain].[Movement].[MovementTypeId],[Offchain].[Movement].[TicketId],[Offchain].[Movement].[SegmentId],[Offchain].[Movement].[OperationalDate],[Offchain].[Movement].[GrossStandardVolume],[Offchain].[Movement].[NetStandardVolume],[Offchain].[Movement].[UncertaintyPercentage],[Offchain].[Movement].[MeasurementUnit],[Offchain].[Movement].[ScenarioId],[Offchain].[Movement].[Observations],[Offchain].[Movement].[Classification],[Offchain].[Movement].[IsDeleted],[Offchain].[Movement].[IsSystemGenerated],[Offchain].[Movement].[VariableTypeId],[Offchain].[Movement].[FileRegistrationTransactionId],[Offchain].[Movement].[OwnershipTicketId],[Offchain].[Movement].[ReasonId],[Offchain].[Movement].[Comment],[Offchain].[Movement].[MovementContractId],[Offchain].[Movement].[BlockchainStatus],[Offchain].[Movement].[BlockchainMovementTransactionId],[Offchain].[Movement].[PreviousBlockchainMovementTransactionId],[Offchain].[Movement].[Tolerance],[Offchain].[Movement].[OperatorId],[Offchain].[Movement].[BackupMovementId],[Offchain].[Movement].[GlobalMovementId],[Offchain].[Movement].[BalanceStatus],[Offchain].[Movement].[SAPProcessStatus],[Offchain].[Movement].[MovementEventId],[Offchain].[Movement].[SourceMovementId],[Offchain].[Movement].[TransactionHash],[Offchain].[Movement].[BlockNumber],[Offchain].[Movement].[RetryCount],[Offchain].[Movement].[IsOfficial],[Offchain].[Movement].[Version],[Offchain].[Movement].[BatchId],[Offchain].[Movement].[SystemId],[Offchain].[Movement].[SourceSystemId],[Offchain].[Movement].[IsTransferPoint],[Offchain].[Movement].[SourceMovementTransactionId],[Offchain].[Movement].[SourceInventoryProductId],[Offchain].[Movement].[DeltaTicketId],[Offchain].[Movement].[OfficialDeltaTicketId],[Offchain].[Movement].[CreatedBy],[Offchain].[Movement].[CreatedDate],[Offchain].[Movement].[LastModifiedBy],[Offchain].[Movement].[LastModifiedDate] FROM [Offchain].[Movement] "
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "Movement"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "Offchain"
          },
          {
            "name": "TableWidgetSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"TableWidgetSerialization\"><AnnotationContent><![CDATA[<?xml version=\"1.0\"?>",
              "<TableWidgetGridSerialization xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">",
              "  <ColumnSuggestedType />",
              "  <ColumnFormat />",
              "  <ColumnAccuracy />",
              "  <ColumnCurrencySymbol />",
              "  <ColumnPositivePattern />",
              "  <ColumnNegativePattern />",
              "  <ColumnWidths>",
              "    <item>",
              "      <key>",
              "        <string>MovementTransactionId</string>",
              "      </key>",
              "      <value>",
              "        <int>146</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>MessageTypeId</string>",
              "      </key>",
              "      <value>",
              "        <int>106</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>SystemTypeId</string>",
              "      </key>",
              "      <value>",
              "        <int>99</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>SourceSystem</string>",
              "      </key>",
              "      <value>",
              "        <int>98</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>EventType</string>",
              "      </key>",
              "      <value>",
              "        <int>82</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>MovementId</string>",
              "      </key>",
              "      <value>",
              "        <int>90</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>MovementTypeId</string>",
              "      </key>",
              "      <value>",
              "        <int>114</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>TicketId</string>",
              "      </key>",
              "      <value>",
              "        <int>68</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>SegmentId</string>",
              "      </key>",
              "      <value>",
              "        <int>82</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>OperationalDate</string>",
              "      </key>",
              "      <value>",
              "        <int>109</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>GrossStandardVolume</string>",
              "      </key>",
              "      <value>",
              "        <int>135</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>NetStandardVolume</string>",
              "      </key>",
              "      <value>",
              "        <int>125</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>UncertaintyPercentage</string>",
              "      </key>",
              "      <value>",
              "        <int>141</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>MeasurementUnit</string>",
              "      </key>",
              "      <value>",
              "        <int>114</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>ScenarioId</string>",
              "      </key>",
              "      <value>",
              "        <int>81</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>Observations</string>",
              "      </key>",
              "      <value>",
              "        <int>94</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>Classification</string>",
              "      </key>",
              "      <value>",
              "        <int>92</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>IsDeleted</string>",
              "      </key>",
              "      <value>",
              "        <int>76</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>IsSystemGenerated</string>",
              "      </key>",
              "      <value>",
              "        <int>125</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>VariableTypeId</string>",
              "      </key>",
              "      <value>",
              "        <int>102</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>FileRegistrationTransactionId</string>",
              "      </key>",
              "      <value>",
              "        <int>170</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>OwnershipTicketId</string>",
              "      </key>",
              "      <value>",
              "        <int>119</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>SystemName</string>",
              "      </key>",
              "      <value>",
              "        <int>92</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>ReasonId</string>",
              "      </key>",
              "      <value>",
              "        <int>76</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>Comment</string>",
              "      </key>",
              "      <value>",
              "        <int>75</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>MovementContractId</string>",
              "      </key>",
              "      <value>",
              "        <int>132</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>BlockchainStatus</string>",
              "      </key>",
              "      <value>",
              "        <int>110</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>BlockchainMovementTransactionId</string>",
              "      </key>",
              "      <value>",
              "        <int>195</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>PreviousBlockchainMovementTransactionId</string>",
              "      </key>",
              "      <value>",
              "        <int>236</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>Tolerance</string>",
              "      </key>",
              "      <value>",
              "        <int>77</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>OperatorId</string>",
              "      </key>",
              "      <value>",
              "        <int>84</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>BackupMovementId</string>",
              "      </key>",
              "      <value>",
              "        <int>124</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>GlobalMovementId</string>",
              "      </key>",
              "      <value>",
              "        <int>119</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>BalanceStatus</string>",
              "      </key>",
              "      <value>",
              "        <int>98</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>SAPProcessStatus</string>",
              "      </key>",
              "      <value>",
              "        <int>117</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>MovementEventId</string>",
              "      </key>",
              "      <value>",
              "        <int>118</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>SourceMovementId</string>",
              "      </key>",
              "      <value>",
              "        <int>123</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>TransactionHash</string>",
              "      </key>",
              "      <value>",
              "        <int>110</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>BlockNumber</string>",
              "      </key>",
              "      <value>",
              "        <int>91</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>RetryCount</string>",
              "      </key>",
              "      <value>",
              "        <int>86</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>IsOfficial</string>",
              "      </key>",
              "      <value>",
              "        <int>72</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>Version</string>",
              "      </key>",
              "      <value>",
              "        <int>65</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>BatchId</string>",
              "      </key>",
              "      <value>",
              "        <int>67</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>SystemId</string>",
              "      </key>",
              "      <value>",
              "        <int>75</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>SourceSystemId</string>",
              "      </key>",
              "      <value>",
              "        <int>108</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>IsTransferPoint</string>",
              "      </key>",
              "      <value>",
              "        <int>104</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>SourceMovementTransactionId</string>",
              "      </key>",
              "      <value>",
              "        <int>179</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>SourceInventoryProductId</string>",
              "      </key>",
              "      <value>",
              "        <int>158</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>DeltaTicketId</string>",
              "      </key>",
              "      <value>",
              "        <int>93</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>OfficialDeltaTicketId</string>",
              "      </key>",
              "      <value>",
              "        <int>126</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>PendingApproval</string>",
              "      </key>",
              "      <value>",
              "        <int>111</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>OfficialDeltaMessageTypeId</string>",
              "      </key>",
              "      <value>",
              "        <int>164</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>CreatedBy</string>",
              "      </key>",
              "      <value>",
              "        <int>81</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>CreatedDate</string>",
              "      </key>",
              "      <value>",
              "        <int>92</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>LastModifiedBy</string>",
              "      </key>",
              "      <value>",
              "        <int>102</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>LastModifiedDate</string>",
              "      </key>",
              "      <value>",
              "        <int>113</int>",
              "      </value>",
              "    </item>",
              "  </ColumnWidths>",
              "  <ColumnDisplayIndex>",
              "    <item>",
              "      <key>",
              "        <string>MovementTransactionId</string>",
              "      </key>",
              "      <value>",
              "        <int>0</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>MessageTypeId</string>",
              "      </key>",
              "      <value>",
              "        <int>1</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>SystemTypeId</string>",
              "      </key>",
              "      <value>",
              "        <int>2</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>SourceSystem</string>",
              "      </key>",
              "      <value>",
              "        <int>3</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>EventType</string>",
              "      </key>",
              "      <value>",
              "        <int>4</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>MovementId</string>",
              "      </key>",
              "      <value>",
              "        <int>5</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>MovementTypeId</string>",
              "      </key>",
              "      <value>",
              "        <int>6</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>TicketId</string>",
              "      </key>",
              "      <value>",
              "        <int>7</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>SegmentId</string>",
              "      </key>",
              "      <value>",
              "        <int>8</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>OperationalDate</string>",
              "      </key>",
              "      <value>",
              "        <int>9</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>GrossStandardVolume</string>",
              "      </key>",
              "      <value>",
              "        <int>10</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>NetStandardVolume</string>",
              "      </key>",
              "      <value>",
              "        <int>11</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>UncertaintyPercentage</string>",
              "      </key>",
              "      <value>",
              "        <int>12</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>MeasurementUnit</string>",
              "      </key>",
              "      <value>",
              "        <int>13</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>ScenarioId</string>",
              "      </key>",
              "      <value>",
              "        <int>14</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>Observations</string>",
              "      </key>",
              "      <value>",
              "        <int>15</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>Classification</string>",
              "      </key>",
              "      <value>",
              "        <int>16</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>IsDeleted</string>",
              "      </key>",
              "      <value>",
              "        <int>17</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>IsSystemGenerated</string>",
              "      </key>",
              "      <value>",
              "        <int>18</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>VariableTypeId</string>",
              "      </key>",
              "      <value>",
              "        <int>19</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>FileRegistrationTransactionId</string>",
              "      </key>",
              "      <value>",
              "        <int>20</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>OwnershipTicketId</string>",
              "      </key>",
              "      <value>",
              "        <int>21</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>SystemName</string>",
              "      </key>",
              "      <value>",
              "        <int>22</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>ReasonId</string>",
              "      </key>",
              "      <value>",
              "        <int>23</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>Comment</string>",
              "      </key>",
              "      <value>",
              "        <int>24</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>MovementContractId</string>",
              "      </key>",
              "      <value>",
              "        <int>25</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>BlockchainStatus</string>",
              "      </key>",
              "      <value>",
              "        <int>26</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>BlockchainMovementTransactionId</string>",
              "      </key>",
              "      <value>",
              "        <int>27</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>PreviousBlockchainMovementTransactionId</string>",
              "      </key>",
              "      <value>",
              "        <int>28</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>Tolerance</string>",
              "      </key>",
              "      <value>",
              "        <int>29</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>OperatorId</string>",
              "      </key>",
              "      <value>",
              "        <int>30</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>BackupMovementId</string>",
              "      </key>",
              "      <value>",
              "        <int>31</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>GlobalMovementId</string>",
              "      </key>",
              "      <value>",
              "        <int>32</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>BalanceStatus</string>",
              "      </key>",
              "      <value>",
              "        <int>33</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>SAPProcessStatus</string>",
              "      </key>",
              "      <value>",
              "        <int>34</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>MovementEventId</string>",
              "      </key>",
              "      <value>",
              "        <int>35</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>SourceMovementId</string>",
              "      </key>",
              "      <value>",
              "        <int>36</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>TransactionHash</string>",
              "      </key>",
              "      <value>",
              "        <int>37</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>BlockNumber</string>",
              "      </key>",
              "      <value>",
              "        <int>38</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>RetryCount</string>",
              "      </key>",
              "      <value>",
              "        <int>39</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>IsOfficial</string>",
              "      </key>",
              "      <value>",
              "        <int>40</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>Version</string>",
              "      </key>",
              "      <value>",
              "        <int>41</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>BatchId</string>",
              "      </key>",
              "      <value>",
              "        <int>42</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>SystemId</string>",
              "      </key>",
              "      <value>",
              "        <int>43</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>SourceSystemId</string>",
              "      </key>",
              "      <value>",
              "        <int>44</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>IsTransferPoint</string>",
              "      </key>",
              "      <value>",
              "        <int>45</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>SourceMovementTransactionId</string>",
              "      </key>",
              "      <value>",
              "        <int>46</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>SourceInventoryProductId</string>",
              "      </key>",
              "      <value>",
              "        <int>47</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>DeltaTicketId</string>",
              "      </key>",
              "      <value>",
              "        <int>48</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>OfficialDeltaTicketId</string>",
              "      </key>",
              "      <value>",
              "        <int>49</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>PendingApproval</string>",
              "      </key>",
              "      <value>",
              "        <int>50</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>OfficialDeltaMessageTypeId</string>",
              "      </key>",
              "      <value>",
              "        <int>51</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>CreatedBy</string>",
              "      </key>",
              "      <value>",
              "        <int>52</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>CreatedDate</string>",
              "      </key>",
              "      <value>",
              "        <int>53</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>LastModifiedBy</string>",
              "      </key>",
              "      <value>",
              "        <int>54</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>LastModifiedDate</string>",
              "      </key>",
              "      <value>",
              "        <int>55</int>",
              "      </value>",
              "    </item>",
              "  </ColumnDisplayIndex>",
              "  <ColumnFrozen />",
              "  <ColumnChecked>",
              "    <item>",
              "      <key>",
              "        <string>OfficialDeltaTicketId</string>",
              "      </key>",
              "      <value>",
              "        <boolean>true</boolean>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>PendingApproval</string>",
              "      </key>",
              "      <value>",
              "        <boolean>false</boolean>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>OfficialDeltaMessageTypeId</string>",
              "      </key>",
              "      <value>",
              "        <boolean>false</boolean>",
              "      </value>",
              "    </item>",
              "  </ColumnChecked>",
              "  <ColumnFilter />",
              "  <SelectionFilter />",
              "  <FilterParameters />",
              "  <IsSortDescending>false</IsSortDescending>",
              "</TableWidgetGridSerialization>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "CategoryElement",
        "columns": [
          {
            "name": "ElementId",
            "dataType": "int64",
            "sourceColumn": "ElementId",
            "sourceProviderType": "int"
          },
          {
            "name": "Name",
            "dataType": "string",
            "sourceColumn": "Name",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "Description",
            "dataType": "string",
            "sourceColumn": "Description",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "CategoryId",
            "dataType": "int64",
            "sourceColumn": "CategoryId",
            "sourceProviderType": "int"
          },
          {
            "name": "IsActive",
            "dataType": "boolean",
            "sourceColumn": "IsActive",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "sourceProviderType": "bit"
          },
          {
            "name": "IconId",
            "dataType": "int64",
            "sourceColumn": "IconId",
            "sourceProviderType": "int"
          },
          {
            "name": "Color",
            "dataType": "string",
            "sourceColumn": "Color",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "IsOperationalSegment",
            "dataType": "boolean",
            "sourceColumn": "IsOperationalSegment",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "sourceProviderType": "bit"
          },
          {
            "name": "RowVersion",
            "dataType": "string",
            "sourceColumn": "RowVersion",
            "sourceProviderType": "timestamp"
          },
          {
            "name": "CreatedBy",
            "dataType": "string",
            "sourceColumn": "CreatedBy",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "CreatedDate",
            "dataType": "dateTime",
            "sourceColumn": "CreatedDate",
            "formatString": "General Date",
            "sourceProviderType": "datetime"
          },
          {
            "name": "LastModifiedBy",
            "dataType": "string",
            "sourceColumn": "LastModifiedBy",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "LastModifiedDate",
            "dataType": "dateTime",
            "sourceColumn": "LastModifiedDate",
            "formatString": "General Date",
            "sourceProviderType": "datetime"
          },
          {
            "type": "calculated",
            "name": "ElementIdCategoryId",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "CategoryElement[ElementId] & \"_\" & CategoryElement[CategoryId]"
          },
          {
            "type": "calculated",
            "name": "Id",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "CONCATENATE(CategoryElement[ElementId],\"Admin.CategoryElement\")"
          },
          {
            "type": "calculated",
            "name": "CategoryCategoryElementName",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "[CategoryElementCategoryName]"
          }
        ],
        "partitions": [
          {
            "name": "CategoryElement",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": " SELECT [Admin].[CategoryElement].* FROM [Admin].[CategoryElement] ",
              "dataSource": "mi-asc-ecp-dev-mainsqlmidev.public.c105ff79c574.database.windows.net"
            }
          }
        ],
        "measures": [
          {
            "name": "CategoryElementCategoryName",
            "expression": "IF(HASONEVALUE(CategoryElement[CategoryId]),CALCULATE(CALCULATE(VALUES(Category[Name]),CategoryElement),USERELATIONSHIP(CategoryElement[CategoryId],Category[CategoryId]),ALL(Category)))"
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": " SELECT [Admin].[CategoryElement].* FROM [Admin].[CategoryElement] "
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "CategoryElement"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "Admin"
          }
        ]
      },
      {
        "name": "Product",
        "columns": [
          {
            "name": "ProductId",
            "dataType": "string",
            "sourceColumn": "ProductId",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "Name",
            "dataType": "string",
            "sourceColumn": "Name",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "IsActive",
            "dataType": "boolean",
            "sourceColumn": "IsActive",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "sourceProviderType": "bit"
          },
          {
            "name": "CreatedBy",
            "dataType": "string",
            "sourceColumn": "CreatedBy",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "CreatedDate",
            "dataType": "dateTime",
            "sourceColumn": "CreatedDate",
            "formatString": "General Date",
            "sourceProviderType": "datetime"
          },
          {
            "name": "LastModifiedBy",
            "dataType": "string",
            "sourceColumn": "LastModifiedBy",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "LastModifiedDate",
            "dataType": "dateTime",
            "sourceColumn": "LastModifiedDate",
            "formatString": "General Date",
            "sourceProviderType": "datetime"
          }
        ],
        "partitions": [
          {
            "name": "Product",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": " SELECT [Admin].[Product].* FROM [Admin].[Product] ",
              "dataSource": "mi-asc-ecp-dev-mainsqlmidev.public.c105ff79c574.database.windows.net"
            }
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": " SELECT [Admin].[Product].* FROM [Admin].[Product] "
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "Product"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "Admin"
          }
        ]
      },
      {
        "name": "Node",
        "columns": [
          {
            "name": "NodeId",
            "dataType": "int64",
            "sourceColumn": "NodeId",
            "sourceProviderType": "int"
          },
          {
            "name": "Name",
            "dataType": "string",
            "sourceColumn": "Name",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "Description",
            "dataType": "string",
            "sourceColumn": "Description",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "LogisticCenterId",
            "dataType": "string",
            "sourceColumn": "LogisticCenterId",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "IsActive",
            "dataType": "boolean",
            "sourceColumn": "IsActive",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "sourceProviderType": "bit"
          },
          {
            "name": "SendToSAP",
            "dataType": "boolean",
            "sourceColumn": "SendToSAP",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "sourceProviderType": "bit"
          },
          {
            "name": "ControlLimit",
            "dataType": "double",
            "sourceColumn": "ControlLimit",
            "sourceProviderType": "decimal"
          },
          {
            "name": "AcceptableBalancePercentage",
            "dataType": "double",
            "sourceColumn": "AcceptableBalancePercentage",
            "sourceProviderType": "decimal"
          },
          {
            "name": "Order",
            "dataType": "int64",
            "sourceColumn": "Order",
            "sourceProviderType": "int"
          },
          {
            "name": "UnitId",
            "dataType": "int64",
            "sourceColumn": "UnitId",
            "sourceProviderType": "int"
          },
          {
            "name": "Capacity",
            "dataType": "double",
            "sourceColumn": "Capacity",
            "sourceProviderType": "decimal"
          },
          {
            "name": "NodeOwnershipRuleId",
            "dataType": "int64",
            "sourceColumn": "NodeOwnershipRuleId",
            "sourceProviderType": "int"
          },
          {
            "name": "RowVersion",
            "dataType": "string",
            "sourceColumn": "RowVersion",
            "sourceProviderType": "timestamp"
          },
          {
            "name": "CreatedBy",
            "dataType": "string",
            "sourceColumn": "CreatedBy",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "CreatedDate",
            "dataType": "dateTime",
            "sourceColumn": "CreatedDate",
            "formatString": "General Date",
            "sourceProviderType": "datetime"
          },
          {
            "name": "LastModifiedBy",
            "dataType": "string",
            "sourceColumn": "LastModifiedBy",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "LastModifiedDate",
            "dataType": "dateTime",
            "sourceColumn": "LastModifiedDate",
            "formatString": "General Date",
            "sourceProviderType": "datetime"
          },
          {
            "type": "calculated",
            "name": "Id",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "CONCATENATE(Node[NodeId],\"Admin.Node\")"
          }
        ],
        "partitions": [
          {
            "name": "Node",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": " SELECT [Admin].[Node].* FROM [Admin].[Node] ",
              "dataSource": "mi-asc-ecp-dev-mainsqlmidev.public.c105ff79c574.database.windows.net"
            }
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": " SELECT [Admin].[Node].* FROM [Admin].[Node] "
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "Node"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "Admin"
          }
        ]
      },
      {
        "name": "MovementDestination",
        "columns": [
          {
            "name": "MovementDestinationId",
            "dataType": "int64",
            "sourceColumn": "MovementDestinationId",
            "sourceProviderType": "int"
          },
          {
            "name": "MovementTransactionId",
            "dataType": "int64",
            "sourceColumn": "MovementTransactionId",
            "sourceProviderType": "int"
          },
          {
            "name": "DestinationNodeId",
            "dataType": "int64",
            "sourceColumn": "DestinationNodeId",
            "sourceProviderType": "int"
          },
          {
            "name": "DestinationStorageLocationId",
            "dataType": "int64",
            "sourceColumn": "DestinationStorageLocationId",
            "sourceProviderType": "int"
          },
          {
            "name": "DestinationProductId",
            "dataType": "string",
            "sourceColumn": "DestinationProductId",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "DestinationProductTypeId",
            "dataType": "string",
            "sourceColumn": "DestinationProductTypeId",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "CreatedBy",
            "dataType": "string",
            "sourceColumn": "CreatedBy",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "CreatedDate",
            "dataType": "dateTime",
            "sourceColumn": "CreatedDate",
            "formatString": "General Date",
            "sourceProviderType": "datetime"
          },
          {
            "name": "LastModifiedBy",
            "dataType": "string",
            "sourceColumn": "LastModifiedBy",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "LastModifiedDate",
            "dataType": "dateTime",
            "sourceColumn": "LastModifiedDate",
            "formatString": "General Date",
            "sourceProviderType": "datetime"
          },
          {
            "type": "calculated",
            "name": "ProductTypeElementIdCategoryId",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "MovementDestination[DestinationProductTypeId] & \"_11\""
          },
          {
            "type": "calculated",
            "name": "DestinationNodeNameFilter",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " VAR DestinationNodeName = MovementDestination[DestinationNodeId]",
              "RETURN",
              "    CALCULATE (",
              "        SELECTEDVALUE (Node[Name] ),",
              "        ALL (MovementDestination),",
              "        Node[NodeId] = DestinationNodeName",
              "    )"
            ]
          }
        ],
        "partitions": [
          {
            "name": "MovementDestination",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": " SELECT [Offchain].[MovementDestination].* FROM [Offchain].[MovementDestination] ",
              "dataSource": "mi-asc-ecp-dev-mainsqlmidev.public.c105ff79c574.database.windows.net"
            }
          }
        ],
        "measures": [
          {
            "name": "ProductTypeDestinationName",
            "expression": "IF(HASONEVALUE(MovementDestination[ProductTypeElementIdCategoryId]),CALCULATE(CALCULATE(VALUES(CategoryElement[Name]),MovementDestination),USERELATIONSHIP(MovementDestination[ProductTypeElementIdCategoryId],CategoryElement[ElementIdCategoryId]),ALL(CategoryElement)))"
          },
          {
            "name": "DestinationProductName",
            "expression": "IF(HASONEVALUE(MovementDestination[DestinationProductId]),CALCULATE(CALCULATE(VALUES('Product'[Name]),MovementDestination),USERELATIONSHIP(MovementDestination[DestinationProductId],'Product'[ProductId]),ALL('Product')))"
          },
          {
            "name": "DestinationNodeName",
            "expression": "IF(HASONEVALUE(MovementDestination[DestinationNodeId]),CALCULATE(CALCULATE(VALUES(Node[Name]),MovementDestination),USERELATIONSHIP(MovementDestination[DestinationNodeId],Node[NodeId]),ALL(Node)))"
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": " SELECT [Offchain].[MovementDestination].* FROM [Offchain].[MovementDestination] "
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "MovementDestination"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "Offchain"
          }
        ]
      },
      {
        "name": "InventoryProduct",
        "columns": [
          {
            "name": "InventoryProductId",
            "dataType": "int64",
            "sourceColumn": "InventoryProductId",
            "sourceProviderType": "int"
          },
          {
            "name": "ProductId",
            "dataType": "string",
            "sourceColumn": "ProductId",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "ProductType",
            "dataType": "string",
            "sourceColumn": "ProductType",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "NetQuantity",
            "dataType": "double",
            "sourceColumn": "ProductVolume",
            "sourceProviderType": "decimal"
          },
          {
            "name": "GrossAmount",
            "dataType": "double",
            "sourceColumn": "GrossStandardQuantity",
            "sourceProviderType": "decimal"
          },
          {
            "name": "MeasurementUnit",
            "dataType": "string",
            "sourceColumn": "MeasurementUnit",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "UncertaintyPercentage",
            "dataType": "double",
            "sourceColumn": "UncertaintyPercentage",
            "sourceProviderType": "decimal"
          },
          {
            "name": "OwnershipTicketId",
            "dataType": "int64",
            "sourceColumn": "OwnershipTicketId",
            "sourceProviderType": "int"
          },
          {
            "name": "ReasonId",
            "dataType": "int64",
            "sourceColumn": "ReasonId",
            "sourceProviderType": "int"
          },
          {
            "name": "CommentChange",
            "dataType": "string",
            "sourceColumn": "Comment",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "BlockchainStatus",
            "dataType": "boolean",
            "sourceColumn": "BlockchainStatus",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "sourceProviderType": "bit"
          },
          {
            "name": "BlockchainInventoryProductTransactionId",
            "dataType": "string",
            "sourceColumn": "BlockchainInventoryProductTransactionId",
            "sourceProviderType": "uniqueidentifier"
          },
          {
            "name": "PreviousBlockchainInventoryProductTransactionId",
            "dataType": "string",
            "sourceColumn": "PreviousBlockchainInventoryProductTransactionId",
            "sourceProviderType": "uniqueidentifier"
          },
          {
            "name": "TransactionHash",
            "dataType": "string",
            "sourceColumn": "TransactionHash",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "BlockNumber",
            "dataType": "string",
            "sourceColumn": "BlockNumber",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "RetryCount",
            "dataType": "int64",
            "sourceColumn": "RetryCount",
            "sourceProviderType": "int"
          },
          {
            "name": "SystemTypeId",
            "dataType": "int64",
            "sourceColumn": "SystemTypeId",
            "sourceProviderType": "int"
          },
          {
            "name": "DestinationSystem",
            "dataType": "string",
            "sourceColumn": "DestinationSystem",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "Action",
            "dataType": "string",
            "sourceColumn": "EventType",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "TankName",
            "dataType": "string",
            "sourceColumn": "TankName",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "InventoryId",
            "dataType": "string",
            "sourceColumn": "InventoryId",
            "sourceProviderType": "varchar"
          },
          {
            "name": "TicketId",
            "dataType": "int64",
            "sourceColumn": "TicketId",
            "sourceProviderType": "int"
          },
          {
            "name": "InventoryDate",
            "dataType": "dateTime",
            "sourceColumn": "InventoryDate",
            "formatString": "dd-MMM-yy",
            "sourceProviderType": "datetime",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"1033\" Group=\"ShortDate\" FormatString=\"dd-MMM-yy\" /></DateTimes></Format>"
              }
            ]
          },
          {
            "name": "NodeId",
            "dataType": "int64",
            "sourceColumn": "NodeId",
            "sourceProviderType": "int"
          },
          {
            "name": "SegmentId",
            "dataType": "int64",
            "sourceColumn": "SegmentId",
            "sourceProviderType": "int"
          },
          {
            "name": "Observations",
            "dataType": "string",
            "sourceColumn": "Observations",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "ScenarioId",
            "dataType": "int64",
            "sourceColumn": "ScenarioId",
            "sourceProviderType": "int"
          },
          {
            "name": "IsDeleted",
            "dataType": "boolean",
            "sourceColumn": "IsDeleted",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "sourceProviderType": "bit"
          },
          {
            "name": "FileRegistrationTransactionId",
            "dataType": "int64",
            "sourceColumn": "FileRegistrationTransactionId",
            "sourceProviderType": "int"
          },
          {
            "name": "OperatorId",
            "dataType": "int64",
            "sourceColumn": "OperatorId",
            "sourceProviderType": "int"
          },
          {
            "name": "BatchId",
            "dataType": "string",
            "sourceColumn": "BatchId",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "InventoryProductUniqueId",
            "dataType": "string",
            "sourceColumn": "InventoryProductUniqueId",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "SystemId",
            "dataType": "int64",
            "sourceColumn": "SystemId",
            "sourceProviderType": "int"
          },
          {
            "name": "Version",
            "dataType": "string",
            "sourceColumn": "Version",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "SourceSystemId",
            "dataType": "int64",
            "sourceColumn": "SourceSystemId",
            "sourceProviderType": "int"
          },
          {
            "name": "DeltaTicketId",
            "dataType": "int64",
            "sourceColumn": "DeltaTicketId",
            "sourceProviderType": "int"
          },
          {
            "name": "CreatedBy",
            "dataType": "string",
            "sourceColumn": "CreatedBy",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "CreatedDateSource",
            "dataType": "dateTime",
            "sourceColumn": "CreatedDate",
            "formatString": "dd-MMM-yy",
            "sourceProviderType": "datetime",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"1033\" Group=\"ShortDate\" FormatString=\"dd-MMM-yy\" /></DateTimes></Format>"
              }
            ]
          },
          {
            "name": "LastModifiedBy",
            "dataType": "string",
            "sourceColumn": "LastModifiedBy",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "ModifiedDate",
            "dataType": "dateTime",
            "sourceColumn": "LastModifiedDate",
            "formatString": "dd-MMM-yy",
            "sourceProviderType": "datetime",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"1033\" Group=\"ShortDate\" FormatString=\"dd-MMM-yy\" /></DateTimes></Format>"
              }
            ]
          },
          {
            "type": "calculated",
            "name": "User",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "IF(UPPER(InventoryProduct[Action]) = \"INSERT\", InventoryProduct[CreatedBy],IF(UPPER(InventoryProduct[Action]) = \"UPDATE\", InventoryProduct[ModifiedBy], IF(UPPER(InventoryProduct[Action]) = \"DELETE\",  InventoryProduct[ModifiedBy])))"
          },
          {
            "type": "calculated",
            "name": "NodeName",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "CALCULATE(VALUES(Node[Name]),USERELATIONSHIP(InventoryProduct[NodeId],Node[NodeId]))"
          },
          {
            "type": "calculated",
            "name": "ScenarioName",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "CALCULATE(VALUES(ScenarioType[Name]),USERELATIONSHIP(InventoryProduct[ScenarioId],ScenarioType[ScenarioTypeId]))"
          },
          {
            "type": "calculated",
            "name": "ProductName",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "CALCULATE(VALUES('Product'[Name]),USERELATIONSHIP(InventoryProduct[ProductId],'Product'[ProductId]))"
          },
          {
            "type": "calculated",
            "name": "ProducTypeIdElementIdCategoryId",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "InventoryProduct[ProductType] & \"_11\""
          },
          {
            "type": "calculated",
            "name": "OperatorNameFilter",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " VAR OperatorName =  InventoryProduct[OperatorIdElementIdCategoryId]",
              " RETURN",
              "    CALCULATE (",
              "        SELECTEDVALUE (CategoryElement[Name]),",
              "        ALL (InventoryProduct),",
              "        CategoryElement[ElementIdCategoryId] = OperatorName",
              "    )"
            ]
          },
          {
            "type": "calculated",
            "name": "OperatorIdElementIdCategoryId",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "InventoryProduct[OperatorId] & \"_3\""
          },
          {
            "type": "calculated",
            "name": "SegmentIdElementIdCategoryId",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "InventoryProduct[SegmentId] & \"_2\""
          },
          {
            "type": "calculated",
            "name": "SegmentNameFilter",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "LOOKUPVALUE(CategoryElement[Name], CategoryElement[ElementIdCategoryId], InventoryProduct[SegmentIdElementIdCategoryId])"
          },
          {
            "type": "calculated",
            "name": "ReasonIdElementIdCategoryId",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "InventoryProduct[ReasonId] & \"_16\""
          },
          {
            "type": "calculated",
            "name": "CausalChange",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "LOOKUPVALUE(CategoryElement[Name], CategoryElement[ElementIdCategoryId], InventoryProduct[ReasonIdElementIdCategoryId])"
          },
          {
            "type": "calculated",
            "name": "MeasurementUnitElementIdCategoryId",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "InventoryProduct[MeasurementUnit] & \"_6\""
          },
          {
            "type": "calculated",
            "name": "UnitsInventory",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "LOOKUPVALUE(CategoryElement[Name], CategoryElement[ElementIdCategoryId], InventoryProduct[MeasurementUnitElementIdCategoryId])"
          },
          {
            "type": "calculated",
            "name": "InventoryIdModifiedDate",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "InventoryProduct[InventoryId] & \"_\" & FORMAT(InventoryProduct[CreatedDateSource], \"dMMyyyy\")"
          },
          {
            "type": "calculated",
            "name": "%NSV",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": " IF(UPPER(InventoryProduct[Action])=\"INSERT\",IFERROR(ABS(InventoryProduct[NetQuantity]-[SumNSVInv])/InventoryProduct[NetQuantity],BLANK()),BLANK())"
          },
          {
            "type": "calculated",
            "name": "Categories%NSV",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "IF(ISBLANK(InventoryProduct[%NSV]),BLANK(), IF(InventoryProduct[%NSV]=0,0,IF(InventoryProduct[%NSV]<=0.01,1,IF(InventoryProduct[%NSV]<=0.02,2,IF(InventoryProduct[%NSV]<=0.05,3,IF(InventoryProduct[%NSV]>0.05,4,BLANK()))))))"
          },
          {
            "type": "calculated",
            "name": "IsUpdateColumnInv",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "IF(UPPER([IsUpdateInv])=\"Update\",1,0)"
          },
          {
            "type": "calculated",
            "name": "Rank%NSV",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "SWITCH(InventoryProduct[Categories%NSV],0,\"0%\",1,\"0%-1%\",2,\"1%-2%\",3,\"2%-5%\",4,\">5%\",\"NA\")"
          },
          {
            "type": "calculated",
            "name": "OpTop5Inv",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "IF([RankInv]<=4,InventoryProduct[OperatorNameFilter],\"Otros\")"
          },
          {
            "type": "calculated",
            "name": "DaysInvUpdate",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "DATEDIFF(InventoryProduct[InventoryDate],InventoryProduct[CreatedDateSource],DAY)"
          },
          {
            "type": "calculated",
            "name": "RankDaysInvUpdate",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "IF(InventoryProduct[DaysInvUpdate]<=3,\"1-3\",IF(InventoryProduct[DaysInvUpdate]<=7,\"4-7\",IF(InventoryProduct[DaysInvUpdate]<=14,\"8-14\",IF(InventoryProduct[DaysInvUpdate]<=21,\"15-21\",IF(InventoryProduct[DaysInvUpdate]<=28,\"22-28\",IF(InventoryProduct[DaysInvUpdate]>28,\"29+\",\"NA\"))))))"
          },
          {
            "type": "calculated",
            "name": "SorterDaysInvUpdate",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "SWITCH(InventoryProduct[RankDaysInvUpdate],\"1-3\",1,\"4-7\",2,\"8-14\",3,\"15-21\",4,\"22-28\",5,\"29+\",6,7)"
          },
          {
            "type": "calculated",
            "name": "DaysCreateUpdate",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "DATEDIFF(InventoryProduct[FirstInsert],InventoryProduct[CreatedDateSource],DAY)"
          },
          {
            "type": "calculated",
            "name": "RankDaysCreateUpdate",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "IF(InventoryProduct[DaysCreateUpdate]<=3,\"1-3\",IF(InventoryProduct[DaysCreateUpdate]<=7,\"4-7\",IF(InventoryProduct[DaysCreateUpdate]<=14,\"8-14\",IF(InventoryProduct[DaysCreateUpdate]<=21,\"15-21\",IF(InventoryProduct[DaysCreateUpdate]<=28,\"22-28\",IF(InventoryProduct[DaysCreateUpdate]>28,\"29+\",\"NA\"))))))"
          },
          {
            "type": "calculated",
            "name": "SorterDaysCreateUpdate",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "SWITCH(InventoryProduct[RankDaysCreateUpdate],\"1-3\",1,\"4-7\",2,\"8-14\",3,\"15-21\",4,\"22-28\",5,\"29+\",6,7)"
          },
          {
            "type": "calculated",
            "name": "InventoryDateKey",
            "dataType": "int64",
            "isDataTypeInferred": false,
            "expression": "VALUE(FORMAT(InventoryProduct[InventoryDate],\"yyyymmdd\"))"
          },
          {
            "type": "calculated",
            "name": "ModifiedDateWithoutHours",
            "dataType": "dateTime",
            "isDataTypeInferred": true,
            "expression": "IF(UPPER(InventoryProduct[Action]) == \"UPDATE\" || UPPER(InventoryProduct[Action]) == \"DELETE\", DATE(YEAR(InventoryProduct[CreatedDateSource]),MONTH(InventoryProduct[CreatedDateSource]),DAY(InventoryProduct[CreatedDateSource])), BLANK())",
            "formatString": "dd-MMM-yy",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"1033\" Group=\"ShortDate\" FormatString=\"dd-MMM-yy\" /></DateTimes></Format>"
              }
            ]
          },
          {
            "type": "calculated",
            "name": "Source",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " VAR Sources = InventoryProduct[SourceSystemIdElementIdCategoryId22]",
              "RETURN",
              "    CALCULATE (",
              "        SELECTEDVALUE (CategoryElement[Name]),",
              "        ALL (InventoryProduct),",
              "        CategoryElement[ElementIdCategoryId] = Sources",
              "    )"
            ]
          },
          {
            "type": "calculated",
            "name": "System",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " VAR System = InventoryProduct[SystemIdElementIdCategoryId8]",
              "RETURN",
              "    CALCULATE (",
              "        SELECTEDVALUE (CategoryElement[Name]),",
              "        ALL (InventoryProduct),",
              "        CategoryElement[ElementIdCategoryId] = System",
              "    )"
            ]
          },
          {
            "type": "calculated",
            "name": "SourceSystemIdElementIdCategoryId22",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "InventoryProduct[SourceSystemId] & \"_22\""
          },
          {
            "type": "calculated",
            "name": "SystemIdElementIdCategoryId8",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "InventoryProduct[SystemId] & \"_8\""
          },
          {
            "type": "calculated",
            "name": "ModifiedBy",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "VAR LastModifiedBy = InventoryProduct[LastModifiedBy]",
              "              VAR FileRegistrationTrasactionId = InventoryProduct[FileRegistrationTransactionId]",
              "              RETURN",
              "              IF(ISBLANK(LastModifiedBy) || UPPER(LastModifiedBy) = \"SYSTEM\",",
              "              CALCULATE (",
              "                      SELECTEDVALUE (FileRegistrationTransaction[FileRegistrationCreatedBy]),",
              "                      ALL (InventoryProduct),",
              "                      FileRegistrationTransaction[FileRegistrationTransactionId] =  FileRegistrationTrasactionId",
              "                       )",
              "              ,LastModifiedBy)"
            ]
          },
          {
            "type": "calculated",
            "name": "CreatedDate",
            "dataType": "dateTime",
            "isDataTypeInferred": true,
            "expression": "InventoryProduct[CreatedDateSource]",
            "formatString": "dd-MMM-yy HH:mm:ss"
          },
          {
            "type": "calculated",
            "name": "FirstInsert",
            "dataType": "dateTime",
            "isDataTypeInferred": true,
            "expression": "CALCULATE(MIN(InventoryProduct[CreatedDateSource]), FILTER(InventoryProduct, InventoryProduct[InventoryId] = EARLIER(InventoryProduct[InventoryId]) && UPPER( InventoryProduct[Action]) = \"INSERT\"))"
          },
          {
            "type": "calculated",
            "name": "Delete",
            "dataType": "dateTime",
            "isDataTypeInferred": true,
            "expression": "CALCULATE(MAX(InventoryProduct[CreatedDateSource]), FILTER(InventoryProduct, InventoryProduct[InventoryId] = EARLIER(InventoryProduct[InventoryId]) && UPPER(InventoryProduct[Action]) = \"DELETE\"))"
          },
          {
            "type": "calculated",
            "name": "Update",
            "dataType": "dateTime",
            "isDataTypeInferred": true,
            "expression": "CALCULATE(MAX(InventoryProduct[CreatedDateSource]), FILTER(InventoryProduct, InventoryProduct[InventoryId] = EARLIER(InventoryProduct[InventoryId]) && UPPER(InventoryProduct[Action]) = \"UPDATE\"))"
          },
          {
            "type": "calculated",
            "name": "ActionResult",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "IF(ISBLANK(InventoryProduct[Delete]) = FALSE(), \"Delete\", IF(ISBLANK(InventoryProduct[Update]) = FALSE(), \"Update\", BLANK()))"
          }
        ],
        "partitions": [
          {
            "name": "InventoryProduct",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": " SELECT [Offchain].[InventoryProduct].* FROM [Offchain].[InventoryProduct] ",
              "dataSource": "mi-asc-ecp-dev-mainsqlmidev.public.c105ff79c574.database.windows.net"
            }
          }
        ],
        "measures": [
          {
            "name": "ProductTypeNameInventory",
            "expression": "IF(HASONEVALUE(InventoryProduct[ProducTypeIdElementIdCategoryId]),CALCULATE(CALCULATE(VALUES(CategoryElement[Name]),InventoryProduct),USERELATIONSHIP(InventoryProduct[ProducTypeIdElementIdCategoryId],CategoryElement[ElementIdCategoryId]),ALL(CategoryElement)))"
          },
          {
            "name": "OperatorNameInventory",
            "expression": "IF(HASONEVALUE(InventoryProduct[OperatorIdElementIdCategoryId]),CALCULATE(CALCULATE(VALUES(CategoryElement[Name]),InventoryProduct),USERELATIONSHIP(InventoryProduct[OperatorIdElementIdCategoryId],CategoryElement[ElementIdCategoryId]),ALL(CategoryElement)))"
          },
          {
            "name": "SegmentNameInventory",
            "expression": "IF(HASONEVALUE(InventoryProduct[SegmentIdElementIdCategoryId]),CALCULATE(CALCULATE(VALUES(CategoryElement[Name]),InventoryProduct),USERELATIONSHIP(InventoryProduct[SegmentIdElementIdCategoryId],CategoryElement[ElementIdCategoryId]),ALL(CategoryElement)))"
          },
          {
            "name": "%UpdatesInv",
            "expression": " DIVIDE(CALCULATE(DISTINCTCOUNT(InventoryProduct[InventoryId]), (InventoryProduct[Action])=\"UPDATE\"),DISTINCTCOUNT(InventoryProduct[InventoryId]))",
            "formatString": "0.00 %;-0.00 %;0.00 %"
          },
          {
            "name": "CountInv",
            "expression": " CALCULATE(DISTINCTCOUNT(InventoryProduct[InventoryIdModifiedDate]), ALLSELECTED(InventoryProduct[OperatorId]))"
          },
          {
            "name": "InvDeletes",
            "expression": " CALCULATE(DISTINCTCOUNT(InventoryProduct[InventoryId]),FILTER(InventoryProduct, (InventoryProduct[Action])=\"DELETE\"))"
          },
          {
            "name": "InvUpdates",
            "expression": " DISTINCTCOUNT(InventoryProduct[InventoryId])-[InvDeletes]"
          },
          {
            "name": "IsUpdateInv",
            "expression": " CALCULATE(MAX(InventoryProduct[Action]),ALLEXCEPT(InventoryProduct,InventoryProduct[InventoryId]))"
          },
          {
            "name": "RankInv",
            "expression": " RANKX(ALLSELECTED(InventoryProduct[OperatorId]),[CountInv])"
          },
          {
            "name": "SumNSVInv",
            "expression": " CALCULATE(SUM(InventoryProduct[NetQuantity]),ALLEXCEPT(InventoryProduct,InventoryProduct[InventoryId]))"
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": " SELECT [Offchain].[InventoryProduct].* FROM [Offchain].[InventoryProduct] "
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "InventoryProduct"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "Offchain"
          }
        ]
      },
      {
        "name": "Event",
        "columns": [
          {
            "name": "EventId",
            "dataType": "int64",
            "sourceColumn": "EventId",
            "sourceProviderType": "int"
          },
          {
            "name": "EventTypeId",
            "dataType": "int64",
            "sourceColumn": "EventTypeId",
            "sourceProviderType": "int"
          },
          {
            "name": "SourceNodeId",
            "dataType": "int64",
            "sourceColumn": "SourceNodeId",
            "sourceProviderType": "int"
          },
          {
            "name": "DestinationNodeId",
            "dataType": "int64",
            "sourceColumn": "DestinationNodeId",
            "sourceProviderType": "int"
          },
          {
            "name": "SourceProductId",
            "dataType": "string",
            "sourceColumn": "SourceProductId",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "DestinationProductId",
            "dataType": "string",
            "sourceColumn": "DestinationProductId",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "StartDate",
            "dataType": "dateTime",
            "sourceColumn": "StartDate",
            "formatString": "General Date",
            "sourceProviderType": "datetime"
          },
          {
            "name": "EndDate",
            "dataType": "dateTime",
            "sourceColumn": "EndDate",
            "formatString": "General Date",
            "sourceProviderType": "datetime"
          },
          {
            "name": "Owner1Id",
            "dataType": "int64",
            "sourceColumn": "Owner1Id",
            "sourceProviderType": "int"
          },
          {
            "name": "Owner2Id",
            "dataType": "int64",
            "sourceColumn": "Owner2Id",
            "sourceProviderType": "int"
          },
          {
            "name": "Volume",
            "dataType": "double",
            "sourceColumn": "Volume",
            "sourceProviderType": "decimal"
          },
          {
            "name": "MeasurementUnit",
            "dataType": "string",
            "sourceColumn": "MeasurementUnit",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "IsDeleted",
            "dataType": "boolean",
            "sourceColumn": "IsDeleted",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "sourceProviderType": "bit"
          },
          {
            "name": "CreatedBy",
            "dataType": "string",
            "sourceColumn": "CreatedBy",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "CreatedDate",
            "dataType": "dateTime",
            "sourceColumn": "CreatedDate",
            "formatString": "General Date",
            "sourceProviderType": "datetime"
          },
          {
            "name": "LastModifiedBy",
            "dataType": "string",
            "sourceColumn": "LastModifiedBy",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "LastModifiedDate",
            "dataType": "dateTime",
            "sourceColumn": "LastModifiedDate",
            "formatString": "General Date",
            "sourceProviderType": "datetime"
          },
          {
            "type": "calculated",
            "name": "Id",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "CONCATENATE(Event[EventId],\"Admin.Event\")"
          },
          {
            "type": "calculated",
            "name": "Name",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "[CategoryElementEventName]&\":\"&[SourceNodeEventName]&\"-\"&[DestinationNodeEventName]"
          }
        ],
        "partitions": [
          {
            "name": "Event",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": " SELECT [Admin].[Event].* FROM [Admin].[Event] ",
              "dataSource": "mi-asc-ecp-dev-mainsqlmidev.public.c105ff79c574.database.windows.net"
            }
          }
        ],
        "measures": [
          {
            "name": "SourceNodeEventName",
            "expression": "IF(HASONEVALUE(Event[SourceNodeId]),CALCULATE(CALCULATE(VALUES(Node[Name]),Event),USERELATIONSHIP(Event[SourceNodeId],Node[NodeId]),ALL(Node)))"
          },
          {
            "name": "DestinationNodeEventName",
            "expression": "IF(HASONEVALUE(Event[DestinationNodeId]),CALCULATE(CALCULATE(VALUES(Node[Name]),Event),USERELATIONSHIP(Event[DestinationNodeId],Node[NodeId]),ALL(Node)))"
          },
          {
            "name": "CategoryElementEventName",
            "expression": "IF(HASONEVALUE(Event[EventTypeId]),CALCULATE(CALCULATE(VALUES(CategoryElement[Name]),Event),USERELATIONSHIP(Event[EventTypeId],CategoryElement[ElementId]),ALL(CategoryElement)))"
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": " SELECT [Admin].[Event].* FROM [Admin].[Event] "
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "Event"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "Admin"
          }
        ]
      },
      {
        "name": "AuditLog",
        "columns": [
          {
            "name": "AuditLogId",
            "dataType": "int64",
            "sourceColumn": "AuditLogId",
            "sourceProviderType": "int"
          },
          {
            "name": "LogDate",
            "dataType": "dateTime",
            "sourceColumn": "LogDate",
            "formatString": "General Date",
            "sourceProviderType": "datetime"
          },
          {
            "name": "LogType",
            "dataType": "string",
            "sourceColumn": "LogType",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "User",
            "dataType": "string",
            "sourceColumn": "User",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "OldValue",
            "dataType": "string",
            "sourceColumn": "OldValue",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "NewValue",
            "dataType": "string",
            "sourceColumn": "NewValue",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "Field",
            "dataType": "string",
            "sourceColumn": "Field",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "EntitySource",
            "dataType": "string",
            "sourceColumn": "Entity",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "Identity",
            "dataType": "string",
            "sourceColumn": "Identity",
            "sourceProviderType": "nvarchar"
          },
          {
            "type": "calculated",
            "name": "Id",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "CONCATENATE(AuditLog[Identity],AuditLog[EntitySource])"
          },
          {
            "type": "calculated",
            "name": "Name",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "VAR CategoryVar= RELATED(Category[Name])",
              "VAR CategoryElementVar= RELATED(CategoryElement[Name])",
              "VAR ContractVar= RELATED(Contract[Name])",
              "VAR EventVar= RELATED(Event[Name])",
              "VAR HomologationDataMappingVar= RELATED(HomologationDataMapping[Name])",
              "VAR NodeVar= RELATED(Node[Name])",
              "VAR NodeConnectionVar= RELATED(NodeConnection[Description])",
              "VAR NodeConnectionProductVar= RELATED(NodeConnectionProduct[Name])",
              "VAR NodeConnectionProductOwnerVar= RELATED(NodeConnectionProductOwner[Name])",
              "VAR NodeStorageLocationVar= RELATED(NodeStorageLocation[Name])",
              "VAR NodeTagVar= RELATED(NodeTag[Name])",
              "VAR StorageLocationProductVar= RELATED(StorageLocationProduct[Name])",
              "VAR StorageLocationProductOwnerVar= RELATED(StorageLocationProductOwner[Name])",
              "VAR StorageLocationProductVariableVar= RELATED(StorageLocationProductVariable[Name])",
              "VAR OperativeNodeRelationshipVar= RELATED(OperativeNodeRelationship[TransferPoint])",
              "VAR OperativeNodeRelationshipWithOwnershipVar= RELATED(OperativeNodeRelationshipWithOwnership[TransferPoint])",
              "",
              "Return ",
              "",
              "CategoryVar&\"\"&CategoryElementVar&\"\"&ContractVar&\"\"&EventVar&\"\"&HomologationDataMappingVar&\"\"&NodeVar&\"\"&NodeConnectionVar&\"\"&NodeConnectionProductVar&\"\"&NodeConnectionProductOwnerVar&\"\"&NodeStorageLocationVar&\"\"&NodeTagVar&\"\"&StorageLocationProductVar&\"\"&StorageLocationProductOwnerVar&\"\"&StorageLocationProductVariableVar&\"\"&OperativeNodeRelationshipVar&\"\"&OperativeNodeRelationshipWithOwnershipVar"
            ]
          },
          {
            "type": "calculated",
            "name": "Day",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "DAY(AuditLog[LogDate])"
          },
          {
            "type": "calculated",
            "name": "DayGroup",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "IF(AuditLog[day]<8,\"1 a 7\",IF(AuditLog[day]<15,\"8 a 14\",IF(AuditLog[day]<22,\"15 a 21\",\"Fin de mes\")))"
          },
          {
            "type": "calculated",
            "name": "Month_DayGroup",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "MONTH(AuditLog[LogDate])&\"-\"&AuditLog[dayGroup]"
          },
          {
            "type": "calculated",
            "name": "Month_DayGroup_Id",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "MONTH(AuditLog[LogDate]) &\"-\"& AuditLog[dayGroup] &\"-\"& AuditLog[Identity]"
          },
          {
            "type": "calculated",
            "name": "Date_ChangeId",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": " AuditLog[LogDateNumeric] & \"-\" & AuditLog[Identity] & \"-\"  & AuditLog[Entity] "
          },
          {
            "type": "calculated",
            "name": "LogDateKey",
            "dataType": "int64",
            "isDataTypeInferred": false,
            "expression": "VALUE(FORMAT(AuditLog[LogDate],\"yyyymmdd\"))"
          },
          {
            "type": "calculated",
            "name": "SortDayGroup",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "SWITCH(AuditLog[DayGroup],\"1 a 7\",1,\"8 a 14\",2,\"15 a 21\",3,\"Fin de mes\",4)"
          },
          {
            "type": "calculated",
            "name": "Entity",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "IF(ISBLANK(AuditLog[EntitySource]) || AuditLog[EntitySource] = \"\", \"-\",UPPER(LEFT(AuditLog[EntitySource]))&+MID(AuditLog[EntitySource],2,LEN(AuditLog[EntitySource])))"
          },
          {
            "type": "calculated",
            "name": "SettingsNumber",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": " AuditLog[Identity] & \"-\" & AuditLog[Entity]"
          },
          {
            "type": "calculated",
            "name": "LogDateNumeric",
            "dataType": "double",
            "isDataTypeInferred": false,
            "expression": "AuditLog[LogDate]"
          }
        ],
        "partitions": [
          {
            "name": "AuditLog",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": " SELECT [Audit].[AuditLog].* FROM [Audit].[AuditLog] ",
              "dataSource": "mi-asc-ecp-dev-mainsqlmidev.public.c105ff79c574.database.windows.net"
            }
          }
        ],
        "measures": [
          {
            "name": "DayAverageUpdateRate",
            "expression": " CALCULATE(COUNT(AuditLog[LogDate]),AuditLog[LogType]=\"Update\")/IF(CALCULATE(DATEDIFF(MIN(AuditLog[LogDate]),MAX(AuditLog[LogDate]),DAY),ALLSELECTED(AuditLog[EntitySource]))=0,1,CALCULATE(DATEDIFF(MIN(AuditLog[LogDate]),MAX(AuditLog[LogDate]),DAY),ALLSELECTED(AuditLog[EntitySource])))"
          },
          {
            "name": "UpdatesAverage_bydayofmonth",
            "expression": "IFERROR(DISTINCTCOUNT(AuditLog[Month_dayGroup_id]) / DISTINCTCOUNT(AuditLog[Month_DayGroup]),BLANK())"
          },
          {
            "name": "updatesRate",
            "expression": " DIVIDE(CALCULATE(DISTINCTCOUNT(AuditLog[Identity]),FILTER(AuditLog, [LogType]=\"Update\")),DISTINCTCOUNT(AuditLog[Identity]))",
            "formatString": "0.00 %;-0.00 %;0.00 %"
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": " SELECT [Audit].[AuditLog].* FROM [Audit].[AuditLog] "
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "AuditLog"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "Audit"
          }
        ]
      },
      {
        "name": "Category",
        "columns": [
          {
            "name": "CategoryId",
            "dataType": "int64",
            "sourceColumn": "CategoryId",
            "sourceProviderType": "int"
          },
          {
            "name": "Name",
            "dataType": "string",
            "sourceColumn": "Name",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "Description",
            "dataType": "string",
            "sourceColumn": "Description",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "IsActive",
            "dataType": "boolean",
            "sourceColumn": "IsActive",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "sourceProviderType": "bit"
          },
          {
            "name": "IsGrouper",
            "dataType": "boolean",
            "sourceColumn": "IsGrouper",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "sourceProviderType": "bit"
          },
          {
            "name": "IsReadOnly",
            "dataType": "boolean",
            "sourceColumn": "IsReadOnly",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "sourceProviderType": "bit"
          },
          {
            "name": "IsHomologation",
            "dataType": "boolean",
            "sourceColumn": "IsHomologation",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "sourceProviderType": "bit"
          },
          {
            "name": "RowVersion",
            "dataType": "string",
            "sourceColumn": "RowVersion",
            "sourceProviderType": "timestamp"
          },
          {
            "name": "CreatedBy",
            "dataType": "string",
            "sourceColumn": "CreatedBy",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "CreatedDate",
            "dataType": "dateTime",
            "sourceColumn": "CreatedDate",
            "formatString": "General Date",
            "sourceProviderType": "datetime"
          },
          {
            "name": "LastModifiedBy",
            "dataType": "string",
            "sourceColumn": "LastModifiedBy",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "LastModifiedDate",
            "dataType": "dateTime",
            "sourceColumn": "LastModifiedDate",
            "formatString": "General Date",
            "sourceProviderType": "datetime"
          },
          {
            "type": "calculated",
            "name": "Id",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "CONCATENATE(Category[CategoryId],\"Admin.Category\")"
          }
        ],
        "partitions": [
          {
            "name": "Category",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": " SELECT [Admin].[Category].* FROM [Admin].[Category] ",
              "dataSource": "mi-asc-ecp-dev-mainsqlmidev.public.c105ff79c574.database.windows.net"
            }
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": " SELECT [Admin].[Category].* FROM [Admin].[Category] "
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "Category"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "Admin"
          }
        ]
      },
      {
        "name": "Contract",
        "columns": [
          {
            "name": "ContractId",
            "dataType": "int64",
            "sourceColumn": "ContractId",
            "sourceProviderType": "int"
          },
          {
            "name": "DocumentNumber",
            "dataType": "int64",
            "sourceColumn": "DocumentNumber",
            "sourceProviderType": "int"
          },
          {
            "name": "Position",
            "dataType": "int64",
            "sourceColumn": "Position",
            "sourceProviderType": "int"
          },
          {
            "name": "MovementTypeId",
            "dataType": "int64",
            "sourceColumn": "MovementTypeId",
            "sourceProviderType": "int"
          },
          {
            "name": "SourceNodeId",
            "dataType": "int64",
            "sourceColumn": "SourceNodeId",
            "sourceProviderType": "int"
          },
          {
            "name": "DestinationNodeId",
            "dataType": "int64",
            "sourceColumn": "DestinationNodeId",
            "sourceProviderType": "int"
          },
          {
            "name": "ProductId",
            "dataType": "string",
            "sourceColumn": "ProductId",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "StartDate",
            "dataType": "dateTime",
            "sourceColumn": "StartDate",
            "formatString": "General Date",
            "sourceProviderType": "datetime"
          },
          {
            "name": "EndDate",
            "dataType": "dateTime",
            "sourceColumn": "EndDate",
            "formatString": "General Date",
            "sourceProviderType": "datetime"
          },
          {
            "name": "Owner1Id",
            "dataType": "int64",
            "sourceColumn": "Owner1Id",
            "sourceProviderType": "int"
          },
          {
            "name": "Owner2Id",
            "dataType": "int64",
            "sourceColumn": "Owner2Id",
            "sourceProviderType": "int"
          },
          {
            "name": "Volume",
            "dataType": "double",
            "sourceColumn": "Volume",
            "sourceProviderType": "decimal"
          },
          {
            "name": "MeasurementUnit",
            "dataType": "int64",
            "sourceColumn": "MeasurementUnit",
            "sourceProviderType": "int"
          },
          {
            "name": "IsDeleted",
            "dataType": "boolean",
            "sourceColumn": "IsDeleted",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "sourceProviderType": "bit"
          },
          {
            "name": "CreatedBy",
            "dataType": "string",
            "sourceColumn": "CreatedBy",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "CreatedDate",
            "dataType": "dateTime",
            "sourceColumn": "CreatedDate",
            "formatString": "General Date",
            "sourceProviderType": "datetime"
          },
          {
            "name": "LastModifiedBy",
            "dataType": "string",
            "sourceColumn": "LastModifiedBy",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "LastModifiedDate",
            "dataType": "dateTime",
            "sourceColumn": "LastModifiedDate",
            "formatString": "General Date",
            "sourceProviderType": "datetime"
          },
          {
            "type": "calculated",
            "name": "Id",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "CONCATENATE(Contract[ContractId],\"Admin.Contract\")"
          },
          {
            "type": "calculated",
            "name": "Name",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "CONVERT(Contract[DocumentNumber], STRING) &\"-\"& CONVERT(Contract[Position], STRING)"
          }
        ],
        "partitions": [
          {
            "name": "Contract",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": " SELECT [Admin].[Contract].* FROM [Admin].[Contract] ",
              "dataSource": "mi-asc-ecp-dev-mainsqlmidev.public.c105ff79c574.database.windows.net"
            }
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": " SELECT [Admin].[Contract].* FROM [Admin].[Contract] "
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "Contract"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "Admin"
          }
        ]
      },
      {
        "name": "Homologation",
        "columns": [
          {
            "name": "HomologationId",
            "dataType": "int64",
            "sourceColumn": "HomologationId",
            "sourceProviderType": "int"
          },
          {
            "name": "SourceSystemId",
            "dataType": "int64",
            "sourceColumn": "SourceSystemId",
            "sourceProviderType": "int"
          },
          {
            "name": "DestinationSystemId",
            "dataType": "int64",
            "sourceColumn": "DestinationSystemId",
            "sourceProviderType": "int"
          },
          {
            "name": "CreatedBy",
            "dataType": "string",
            "sourceColumn": "CreatedBy",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "CreatedDate",
            "dataType": "dateTime",
            "sourceColumn": "CreatedDate",
            "formatString": "General Date",
            "sourceProviderType": "datetime"
          },
          {
            "name": "LastModifiedBy",
            "dataType": "string",
            "sourceColumn": "LastModifiedBy",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "LastModifiedDate",
            "dataType": "dateTime",
            "sourceColumn": "LastModifiedDate",
            "formatString": "General Date",
            "sourceProviderType": "datetime"
          }
        ],
        "partitions": [
          {
            "name": "Homologation",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": " SELECT [Admin].[Homologation].* FROM [Admin].[Homologation] ",
              "dataSource": "mi-asc-ecp-dev-mainsqlmidev.public.c105ff79c574.database.windows.net"
            }
          }
        ],
        "measures": [
          {
            "name": "SourceSystemtypeName",
            "expression": "IF(HASONEVALUE(Homologation[SourceSystemId]),CALCULATE(CALCULATE(VALUES(SystemType[Name]),Homologation),USERELATIONSHIP(Homologation[SourceSystemId],SystemType[SystemTypeId]),ALL(SystemType)))"
          },
          {
            "name": "DestinationSystemtypeName",
            "expression": "IF(HASONEVALUE(Homologation[DestinationSystemId]),CALCULATE(CALCULATE(VALUES(SystemType[Name]),Homologation),USERELATIONSHIP(Homologation[DestinationSystemId],SystemType[SystemTypeId]),ALL(SystemType)))"
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": " SELECT [Admin].[Homologation].* FROM [Admin].[Homologation] "
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "Homologation"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "Admin"
          }
        ]
      },
      {
        "name": "HomologationDataMapping",
        "columns": [
          {
            "name": "HomologationDataMappingId",
            "dataType": "int64",
            "sourceColumn": "HomologationDataMappingId",
            "sourceProviderType": "int"
          },
          {
            "name": "SourceValue",
            "dataType": "string",
            "sourceColumn": "SourceValue",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "DestinationValue",
            "dataType": "string",
            "sourceColumn": "DestinationValue",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "HomologationGroupId",
            "dataType": "int64",
            "sourceColumn": "HomologationGroupId",
            "sourceProviderType": "int"
          },
          {
            "name": "CreatedBy",
            "dataType": "string",
            "sourceColumn": "CreatedBy",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "CreatedDate",
            "dataType": "dateTime",
            "sourceColumn": "CreatedDate",
            "formatString": "General Date",
            "sourceProviderType": "datetime"
          },
          {
            "name": "LastModifiedBy",
            "dataType": "string",
            "sourceColumn": "LastModifiedBy",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "LastModifiedDate",
            "dataType": "dateTime",
            "sourceColumn": "LastModifiedDate",
            "formatString": "General Date",
            "sourceProviderType": "datetime"
          },
          {
            "type": "calculated",
            "name": "Id",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "CONCATENATE(HomologationDataMapping[HomologationDataMappingId],\"Admin.HomologationDataMapping\")"
          },
          {
            "type": "calculated",
            "name": "Name",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "[HomologationGroupSourceName]&\" -> \"&[HomologationGroupDestinationName]&\" [\"&HomologationGroup[CategoryName]&\"]\""
          }
        ],
        "partitions": [
          {
            "name": "HomologationDataMapping",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": " SELECT [Admin].[HomologationDataMapping].* FROM [Admin].[HomologationDataMapping] ",
              "dataSource": "mi-asc-ecp-dev-mainsqlmidev.public.c105ff79c574.database.windows.net"
            }
          }
        ],
        "measures": [
          {
            "name": "HomologationGroupSourceName",
            "expression": "[HomologationSourceSystemtypeName]"
          },
          {
            "name": "HomologationGroupDestinationName",
            "expression": "[HomologationDestinationSystemtypeName]"
          },
          {
            "name": "HomologationGroupCategoryName",
            "expression": "[CategoryName]"
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": " SELECT [Admin].[HomologationDataMapping].* FROM [Admin].[HomologationDataMapping] "
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "HomologationDataMapping"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "Admin"
          }
        ]
      },
      {
        "name": "HomologationGroup",
        "columns": [
          {
            "name": "HomologationGroupId",
            "dataType": "int64",
            "sourceColumn": "HomologationGroupId",
            "sourceProviderType": "int"
          },
          {
            "name": "GroupTypeId",
            "dataType": "int64",
            "sourceColumn": "GroupTypeId",
            "sourceProviderType": "int"
          },
          {
            "name": "HomologationId",
            "dataType": "int64",
            "sourceColumn": "HomologationId",
            "sourceProviderType": "int"
          },
          {
            "name": "RowVersion",
            "dataType": "string",
            "sourceColumn": "RowVersion",
            "sourceProviderType": "timestamp"
          },
          {
            "name": "CreatedBy",
            "dataType": "string",
            "sourceColumn": "CreatedBy",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "CreatedDate",
            "dataType": "dateTime",
            "sourceColumn": "CreatedDate",
            "formatString": "General Date",
            "sourceProviderType": "datetime"
          },
          {
            "name": "LastModifiedBy",
            "dataType": "string",
            "sourceColumn": "LastModifiedBy",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "LastModifiedDate",
            "dataType": "dateTime",
            "sourceColumn": "LastModifiedDate",
            "formatString": "General Date",
            "sourceProviderType": "datetime"
          }
        ],
        "partitions": [
          {
            "name": "HomologationGroup",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": " SELECT [Admin].[HomologationGroup].* FROM [Admin].[HomologationGroup] ",
              "dataSource": "mi-asc-ecp-dev-mainsqlmidev.public.c105ff79c574.database.windows.net"
            }
          }
        ],
        "measures": [
          {
            "name": "HomologationDestinationSystemtypeName",
            "expression": "[DestinationSystemtypeName]"
          },
          {
            "name": "HomologationSourceSystemtypeName",
            "expression": "[SourceSystemtypeName]"
          },
          {
            "name": "CategoryName",
            "expression": "IF(HASONEVALUE(HomologationGroup[GroupTypeId]),CALCULATE(CALCULATE(VALUES(Category[Name]),Event),USERELATIONSHIP(HomologationGroup[GroupTypeId],Category[CategoryId]),ALL(Category)))"
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": " SELECT [Admin].[HomologationGroup].* FROM [Admin].[HomologationGroup] "
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "HomologationGroup"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "Admin"
          }
        ]
      },
      {
        "name": "SystemType",
        "columns": [
          {
            "name": "SystemTypeId",
            "dataType": "int64",
            "sourceColumn": "SystemTypeId",
            "sourceProviderType": "int"
          },
          {
            "name": "Name",
            "dataType": "string",
            "sourceColumn": "Name",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "CreatedBy",
            "dataType": "string",
            "sourceColumn": "CreatedBy",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "CreatedDate",
            "dataType": "dateTime",
            "sourceColumn": "CreatedDate",
            "formatString": "General Date",
            "sourceProviderType": "datetime"
          },
          {
            "name": "LastModifiedBy",
            "dataType": "string",
            "sourceColumn": "LastModifiedBy",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "LastModifiedDate",
            "dataType": "dateTime",
            "sourceColumn": "LastModifiedDate",
            "formatString": "General Date",
            "sourceProviderType": "datetime"
          }
        ],
        "partitions": [
          {
            "name": "SystemType",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": " SELECT [Admin].[SystemType].* FROM [Admin].[SystemType] ",
              "dataSource": "mi-asc-ecp-dev-mainsqlmidev.public.c105ff79c574.database.windows.net"
            }
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": " SELECT [Admin].[SystemType].* FROM [Admin].[SystemType] "
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "SystemType"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "Admin"
          }
        ]
      },
      {
        "name": "NodeConnection",
        "columns": [
          {
            "name": "NodeConnectionId",
            "dataType": "int64",
            "sourceColumn": "NodeConnectionId",
            "sourceProviderType": "int"
          },
          {
            "name": "SourceNodeId",
            "dataType": "int64",
            "sourceColumn": "SourceNodeId",
            "sourceProviderType": "int"
          },
          {
            "name": "DestinationNodeId",
            "dataType": "int64",
            "sourceColumn": "DestinationNodeId",
            "sourceProviderType": "int"
          },
          {
            "name": "Description",
            "dataType": "string",
            "sourceColumn": "Description",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "ControlLimit",
            "dataType": "double",
            "sourceColumn": "ControlLimit",
            "sourceProviderType": "decimal"
          },
          {
            "name": "AlgorithmId",
            "dataType": "int64",
            "sourceColumn": "AlgorithmId",
            "sourceProviderType": "int"
          },
          {
            "name": "IsActive",
            "dataType": "boolean",
            "sourceColumn": "IsActive",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "sourceProviderType": "bit"
          },
          {
            "name": "IsDeleted",
            "dataType": "boolean",
            "sourceColumn": "IsDeleted",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "sourceProviderType": "bit"
          },
          {
            "name": "IsTransfer",
            "dataType": "boolean",
            "sourceColumn": "IsTransfer",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "sourceProviderType": "bit"
          },
          {
            "name": "RowVersion",
            "dataType": "string",
            "sourceColumn": "RowVersion",
            "sourceProviderType": "timestamp"
          },
          {
            "name": "CreatedBy",
            "dataType": "string",
            "sourceColumn": "CreatedBy",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "CreatedDate",
            "dataType": "dateTime",
            "sourceColumn": "CreatedDate",
            "formatString": "General Date",
            "sourceProviderType": "datetime"
          },
          {
            "name": "LastModifiedBy",
            "dataType": "string",
            "sourceColumn": "LastModifiedBy",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "LastModifiedDate",
            "dataType": "dateTime",
            "sourceColumn": "LastModifiedDate",
            "formatString": "General Date",
            "sourceProviderType": "datetime"
          },
          {
            "type": "calculated",
            "name": "Id",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "CONCATENATE(NodeConnection[NodeConnectionId],\"Admin.NodeConnection\")"
          }
        ],
        "partitions": [
          {
            "name": "NodeConnection",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": " SELECT [Admin].[NodeConnection].* FROM [Admin].[NodeConnection] ",
              "dataSource": "mi-asc-ecp-dev-mainsqlmidev.public.c105ff79c574.database.windows.net"
            }
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": " SELECT [Admin].[NodeConnection].* FROM [Admin].[NodeConnection] "
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "NodeConnection"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "Admin"
          }
        ]
      },
      {
        "name": "NodeConnectionProduct",
        "columns": [
          {
            "name": "NodeConnectionProductId",
            "dataType": "int64",
            "sourceColumn": "NodeConnectionProductId",
            "sourceProviderType": "int"
          },
          {
            "name": "NodeConnectionId",
            "dataType": "int64",
            "sourceColumn": "NodeConnectionId",
            "sourceProviderType": "int"
          },
          {
            "name": "ProductId",
            "dataType": "string",
            "sourceColumn": "ProductId",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "UncertaintyPercentage",
            "dataType": "double",
            "sourceColumn": "UncertaintyPercentage",
            "sourceProviderType": "decimal"
          },
          {
            "name": "IsDeleted",
            "dataType": "boolean",
            "sourceColumn": "IsDeleted",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "sourceProviderType": "bit"
          },
          {
            "name": "Priority",
            "dataType": "int64",
            "sourceColumn": "Priority",
            "sourceProviderType": "int"
          },
          {
            "name": "NodeConnectionProductRuleId",
            "dataType": "int64",
            "sourceColumn": "NodeConnectionProductRuleId",
            "sourceProviderType": "int"
          },
          {
            "name": "RowVersion",
            "dataType": "string",
            "sourceColumn": "RowVersion",
            "sourceProviderType": "timestamp"
          },
          {
            "name": "CreatedBy",
            "dataType": "string",
            "sourceColumn": "CreatedBy",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "CreatedDate",
            "dataType": "dateTime",
            "sourceColumn": "CreatedDate",
            "formatString": "General Date",
            "sourceProviderType": "datetime"
          },
          {
            "name": "LastModifiedBy",
            "dataType": "string",
            "sourceColumn": "LastModifiedBy",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "LastModifiedDate",
            "dataType": "dateTime",
            "sourceColumn": "LastModifiedDate",
            "formatString": "General Date",
            "sourceProviderType": "datetime"
          },
          {
            "type": "calculated",
            "name": "Id",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "CONCATENATE(NodeConnectionProduct[NodeConnectionProductId],\"Admin.NodeConnectionProduct\")"
          },
          {
            "type": "calculated",
            "name": "Name",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "NodeConnectionProduct[NodeConnectionDescription]&\":\"&NodeConnectionProduct[NodeConnectionProductName]"
          }
        ],
        "partitions": [
          {
            "name": "NodeConnectionProduct",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": " SELECT [Admin].[NodeConnectionProduct].* FROM [Admin].[NodeConnectionProduct] ",
              "dataSource": "mi-asc-ecp-dev-mainsqlmidev.public.c105ff79c574.database.windows.net"
            }
          }
        ],
        "measures": [
          {
            "name": "NodeConnectionDescription",
            "expression": "IF(HASONEVALUE(NodeConnectionProduct[NodeConnectionId]),CALCULATE(CALCULATE(VALUES(NodeConnection[Description]),NodeConnectionProduct),USERELATIONSHIP(NodeConnectionProduct[NodeConnectionId],NodeConnection[NodeConnectionId]),ALL(NodeConnection)))"
          },
          {
            "name": "NodeConnectionProductName",
            "expression": "IF(HASONEVALUE(NodeConnectionProduct[ProductId]),CALCULATE(CALCULATE(VALUES('Product'[Name]),NodeConnectionProduct),USERELATIONSHIP(NodeConnectionProduct[ProductId],'Product'[ProductId]),ALL('Product')))"
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": " SELECT [Admin].[NodeConnectionProduct].* FROM [Admin].[NodeConnectionProduct] "
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "NodeConnectionProduct"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "Admin"
          }
        ]
      },
      {
        "name": "NodeConnectionProductOwner",
        "columns": [
          {
            "name": "NodeConnectionProductOwnerId",
            "dataType": "int64",
            "sourceColumn": "NodeConnectionProductOwnerId",
            "sourceProviderType": "int"
          },
          {
            "name": "OwnerId",
            "dataType": "int64",
            "sourceColumn": "OwnerId",
            "sourceProviderType": "int"
          },
          {
            "name": "OwnershipPercentage",
            "dataType": "double",
            "sourceColumn": "OwnershipPercentage",
            "sourceProviderType": "decimal"
          },
          {
            "name": "NodeConnectionProductId",
            "dataType": "int64",
            "sourceColumn": "NodeConnectionProductId",
            "sourceProviderType": "int"
          },
          {
            "name": "IsDeleted",
            "dataType": "boolean",
            "sourceColumn": "IsDeleted",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "sourceProviderType": "bit"
          },
          {
            "name": "CreatedBy",
            "dataType": "string",
            "sourceColumn": "CreatedBy",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "CreatedDate",
            "dataType": "dateTime",
            "sourceColumn": "CreatedDate",
            "formatString": "General Date",
            "sourceProviderType": "datetime"
          },
          {
            "name": "LastModifiedBy",
            "dataType": "string",
            "sourceColumn": "LastModifiedBy",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "LastModifiedDate",
            "dataType": "dateTime",
            "sourceColumn": "LastModifiedDate",
            "formatString": "General Date",
            "sourceProviderType": "datetime"
          },
          {
            "type": "calculated",
            "name": "Id",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "CONCATENATE(NodeConnectionProductOwner[NodeConnectionProductOwnerId],\"Admin.NodeConnectionProductOwner\")"
          },
          {
            "type": "calculated",
            "name": "Name",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "[NodeConnectionProductOwnerDescriptionName]&\" [\"&[NodeConnectionProductOwnerCategotyName]&\"]\""
          }
        ],
        "partitions": [
          {
            "name": "NodeConnectionProductOwner",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": " SELECT [Admin].[NodeConnectionProductOwner].* FROM [Admin].[NodeConnectionProductOwner] ",
              "dataSource": "mi-asc-ecp-dev-mainsqlmidev.public.c105ff79c574.database.windows.net"
            }
          }
        ],
        "measures": [
          {
            "name": "NodeConnectionProductOwnerCategotyName",
            "expression": "IF(HASONEVALUE(NodeConnectionProductOwner[OwnerId]),CALCULATE(CALCULATE(VALUES(CategoryElement[Name]),NodeConnectionProductOwner),USERELATIONSHIP(NodeConnectionProductOwner[OwnerId],CategoryElement[ElementId]),ALL(CategoryElement)))"
          },
          {
            "name": "NodeConnectionProductOwnerDescriptionName",
            "expression": "IF(HASONEVALUE(NodeConnectionProductOwner[NodeConnectionProductId]),CALCULATE(CALCULATE(VALUES(NodeConnectionProduct[Name]),NodeConnectionProductOwner),USERELATIONSHIP(NodeConnectionProductOwner[NodeConnectionProductId],NodeConnectionProduct[NodeConnectionProductId]),ALL(NodeConnectionProduct)))"
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": " SELECT [Admin].[NodeConnectionProductOwner].* FROM [Admin].[NodeConnectionProductOwner] "
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "NodeConnectionProductOwner"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "Admin"
          }
        ]
      },
      {
        "name": "NodeStorageLocation",
        "columns": [
          {
            "name": "NodeStorageLocationId",
            "dataType": "int64",
            "sourceColumn": "NodeStorageLocationId",
            "sourceProviderType": "int"
          },
          {
            "name": "Name",
            "dataType": "string",
            "sourceColumn": "Name",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "Description",
            "dataType": "string",
            "sourceColumn": "Description",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "StorageLocationTypeId",
            "dataType": "int64",
            "sourceColumn": "StorageLocationTypeId",
            "sourceProviderType": "int"
          },
          {
            "name": "IsActive",
            "dataType": "boolean",
            "sourceColumn": "IsActive",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "sourceProviderType": "bit"
          },
          {
            "name": "NodeId",
            "dataType": "int64",
            "sourceColumn": "NodeId",
            "sourceProviderType": "int"
          },
          {
            "name": "SendToSAP",
            "dataType": "boolean",
            "sourceColumn": "SendToSAP",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "sourceProviderType": "bit"
          },
          {
            "name": "StorageLocationId",
            "dataType": "string",
            "sourceColumn": "StorageLocationId",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "CreatedBy",
            "dataType": "string",
            "sourceColumn": "CreatedBy",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "CreatedDate",
            "dataType": "dateTime",
            "sourceColumn": "CreatedDate",
            "formatString": "General Date",
            "sourceProviderType": "datetime"
          },
          {
            "name": "LastModifiedBy",
            "dataType": "string",
            "sourceColumn": "LastModifiedBy",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "LastModifiedDate",
            "dataType": "dateTime",
            "sourceColumn": "LastModifiedDate",
            "formatString": "General Date",
            "sourceProviderType": "datetime"
          },
          {
            "type": "calculated",
            "name": "Id",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "CONCATENATE(NodeStorageLocation[NodeStorageLocationId],\"Admin.NodeStorageLocation\")"
          }
        ],
        "partitions": [
          {
            "name": "NodeStorageLocation",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": " SELECT [Admin].[NodeStorageLocation].* FROM [Admin].[NodeStorageLocation] ",
              "dataSource": "mi-asc-ecp-dev-mainsqlmidev.public.c105ff79c574.database.windows.net"
            }
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": " SELECT [Admin].[NodeStorageLocation].* FROM [Admin].[NodeStorageLocation] "
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "NodeStorageLocation"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "Admin"
          }
        ]
      },
      {
        "name": "NodeTag",
        "columns": [
          {
            "name": "NodeTagId",
            "dataType": "int64",
            "sourceColumn": "NodeTagId",
            "sourceProviderType": "int"
          },
          {
            "name": "NodeId",
            "dataType": "int64",
            "sourceColumn": "NodeId",
            "sourceProviderType": "int"
          },
          {
            "name": "ElementId",
            "dataType": "int64",
            "sourceColumn": "ElementId",
            "sourceProviderType": "int"
          },
          {
            "name": "StartDate",
            "dataType": "dateTime",
            "sourceColumn": "StartDate",
            "formatString": "General Date",
            "sourceProviderType": "datetime"
          },
          {
            "name": "EndDate",
            "dataType": "dateTime",
            "sourceColumn": "EndDate",
            "formatString": "General Date",
            "sourceProviderType": "datetime"
          },
          {
            "name": "CreatedBy",
            "dataType": "string",
            "sourceColumn": "CreatedBy",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "CreatedDate",
            "dataType": "dateTime",
            "sourceColumn": "CreatedDate",
            "formatString": "General Date",
            "sourceProviderType": "datetime"
          },
          {
            "name": "LastModifiedBy",
            "dataType": "string",
            "sourceColumn": "LastModifiedBy",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "LastModifiedDate",
            "dataType": "dateTime",
            "sourceColumn": "LastModifiedDate",
            "formatString": "General Date",
            "sourceProviderType": "datetime"
          },
          {
            "type": "calculated",
            "name": "Id",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "CONCATENATE(NodeTag[NodeTagId],\"Admin.NodeTag\")"
          },
          {
            "type": "calculated",
            "name": "Name",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "[NodeTagNodeName]&\":\"&[NodeTagcategoryCategoryElementName]&\" {\"&[NodeTagCategoryElementName]&\"}\""
          },
          {
            "type": "calculated",
            "name": "NodeName",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "VAR NodeTagName=  NodeTag[NodeId]",
              " RETURN",
              "    CALCULATE (",
              "        SELECTEDVALUE (Node[Name]),",
              "        ALL (NodeTag[NodeId]),",
              "        Node[NodeId] = NodeTagName",
              "    )"
            ]
          },
          {
            "type": "calculated",
            "name": "ElementIdCategoryId2",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "NodeTag[ElementId] & \"_2\""
          },
          {
            "type": "calculated",
            "name": "NodeTagSegment",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " VAR Segment = NodeTag[ElementId]",
              "RETURN",
              "    CALCULATE (",
              "        SELECTEDVALUE (CategoryElement[Name] ),",
              "        ALL (Movement),",
              "        CategoryElement[ElementId] = Segment",
              "    )"
            ]
          }
        ],
        "partitions": [
          {
            "name": "NodeTag",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": " SELECT [Admin].[NodeTag].* FROM [Admin].[NodeTag] ",
              "dataSource": "mi-asc-ecp-dev-mainsqlmidev.public.c105ff79c574.database.windows.net"
            }
          }
        ],
        "measures": [
          {
            "name": "NodeTagNodeName",
            "expression": "IF(HASONEVALUE(NodeTag[NodeId]),CALCULATE(CALCULATE(VALUES(Node[Name]),NodeTag),USERELATIONSHIP(NodeTag[NodeId],Node[NodeId]),ALL(Node)))"
          },
          {
            "name": "NodeTagCategoryElementName",
            "expression": "IF(HASONEVALUE(NodeTag[ElementId]),CALCULATE(CALCULATE(VALUES(CategoryElement[Name]),NodeTag),USERELATIONSHIP(NodeTag[ElementId],CategoryElement[ElementId]),ALL(CategoryElement)))"
          },
          {
            "name": "NodeTagcategoryCategoryElementName",
            "expression": "IF(HASONEVALUE(NodeTag[ElementId]),CALCULATE(CALCULATE(VALUES(CategoryElement[CategoryCategoryElementName]),NodeTag),USERELATIONSHIP(NodeTag[ElementId],CategoryElement[ElementId]),ALL(CategoryElement)))"
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": " SELECT [Admin].[NodeTag].* FROM [Admin].[NodeTag] "
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "NodeTag"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "Admin"
          }
        ]
      },
      {
        "name": "StorageLocationProduct",
        "columns": [
          {
            "name": "StorageLocationProductId",
            "dataType": "int64",
            "sourceColumn": "StorageLocationProductId",
            "sourceProviderType": "int"
          },
          {
            "name": "IsActive",
            "dataType": "boolean",
            "sourceColumn": "IsActive",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "sourceProviderType": "bit"
          },
          {
            "name": "ProductId",
            "dataType": "string",
            "sourceColumn": "ProductId",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "NodeStorageLocationId",
            "dataType": "int64",
            "sourceColumn": "NodeStorageLocationId",
            "sourceProviderType": "int"
          },
          {
            "name": "OwnershipRuleId",
            "dataType": "int64",
            "sourceColumn": "OwnershipRuleId",
            "sourceProviderType": "int"
          },
          {
            "name": "UncertaintyPercentage",
            "dataType": "double",
            "sourceColumn": "UncertaintyPercentage",
            "sourceProviderType": "decimal"
          },
          {
            "name": "NodeProductRuleId",
            "dataType": "int64",
            "sourceColumn": "NodeProductRuleId",
            "sourceProviderType": "int"
          },
          {
            "name": "RowVersion",
            "dataType": "string",
            "sourceColumn": "RowVersion",
            "sourceProviderType": "timestamp"
          },
          {
            "name": "CreatedBy",
            "dataType": "string",
            "sourceColumn": "CreatedBy",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "CreatedDate",
            "dataType": "dateTime",
            "sourceColumn": "CreatedDate",
            "formatString": "General Date",
            "sourceProviderType": "datetime"
          },
          {
            "name": "LastModifiedBy",
            "dataType": "string",
            "sourceColumn": "LastModifiedBy",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "LastModifiedDate",
            "dataType": "dateTime",
            "sourceColumn": "LastModifiedDate",
            "formatString": "General Date",
            "sourceProviderType": "datetime"
          },
          {
            "type": "calculated",
            "name": "Id",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "CONCATENATE(StorageLocationProduct[StorageLocationProductId],\"Admin.StorageLocationProduct\")"
          },
          {
            "type": "calculated",
            "name": "Name",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "[StorageLocationProductNodeStorageLocationName]&\"-\"&[StorageLocationProductProductName]"
          }
        ],
        "partitions": [
          {
            "name": "StorageLocationProduct",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": " SELECT [Admin].[StorageLocationProduct].* FROM [Admin].[StorageLocationProduct] ",
              "dataSource": "mi-asc-ecp-dev-mainsqlmidev.public.c105ff79c574.database.windows.net"
            }
          }
        ],
        "measures": [
          {
            "name": "StorageLocationProductProductName",
            "expression": "IF(HASONEVALUE(StorageLocationProduct[ProductId]),CALCULATE(CALCULATE(VALUES('Product'[Name]),StorageLocationProduct),USERELATIONSHIP(StorageLocationProduct[ProductId],'Product'[ProductId]),ALL('Product')))"
          },
          {
            "name": "StorageLocationProductNodeStorageLocationName",
            "expression": "IF(HASONEVALUE(StorageLocationProduct[NodeStorageLocationId]),CALCULATE(CALCULATE(VALUES(NodeStorageLocation[Name]),StorageLocationProduct),USERELATIONSHIP(StorageLocationProduct[NodeStorageLocationId],NodeStorageLocation[NodeStorageLocationId]),ALL(NodeStorageLocation)))"
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": " SELECT [Admin].[StorageLocationProduct].* FROM [Admin].[StorageLocationProduct] "
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "StorageLocationProduct"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "Admin"
          }
        ]
      },
      {
        "name": "StorageLocationProductOwner",
        "columns": [
          {
            "name": "StorageLocationProductOwnerId",
            "dataType": "int64",
            "sourceColumn": "StorageLocationProductOwnerId",
            "sourceProviderType": "int"
          },
          {
            "name": "OwnerId",
            "dataType": "int64",
            "sourceColumn": "OwnerId",
            "sourceProviderType": "int"
          },
          {
            "name": "OwnershipPercentage",
            "dataType": "double",
            "sourceColumn": "OwnershipPercentage",
            "sourceProviderType": "decimal"
          },
          {
            "name": "StorageLocationProductId",
            "dataType": "int64",
            "sourceColumn": "StorageLocationProductId",
            "sourceProviderType": "int"
          },
          {
            "name": "IsDeleted",
            "dataType": "boolean",
            "sourceColumn": "IsDeleted",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "sourceProviderType": "bit"
          },
          {
            "name": "CreatedBy",
            "dataType": "string",
            "sourceColumn": "CreatedBy",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "CreatedDate",
            "dataType": "dateTime",
            "sourceColumn": "CreatedDate",
            "formatString": "General Date",
            "sourceProviderType": "datetime"
          },
          {
            "name": "LastModifiedBy",
            "dataType": "string",
            "sourceColumn": "LastModifiedBy",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "LastModifiedDate",
            "dataType": "dateTime",
            "sourceColumn": "LastModifiedDate",
            "formatString": "General Date",
            "sourceProviderType": "datetime"
          },
          {
            "type": "calculated",
            "name": "Id",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "CONCATENATE(StorageLocationProductOwner[StorageLocationProductOwnerId],\"Admin.StorageLocationProductOwner\")"
          },
          {
            "type": "calculated",
            "name": "OwnerIdCategoryId",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "[OwnerId]&\"_\"&\"7\""
          },
          {
            "type": "calculated",
            "name": "Name",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "[StorageLocationProductName]&\" [\"&[StorageLocationProductOwnerCategoryElementName]&\"]\""
          }
        ],
        "partitions": [
          {
            "name": "StorageLocationProductOwner",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": " SELECT [Admin].[StorageLocationProductOwner].* FROM [Admin].[StorageLocationProductOwner] ",
              "dataSource": "mi-asc-ecp-dev-mainsqlmidev.public.c105ff79c574.database.windows.net"
            }
          }
        ],
        "measures": [
          {
            "name": "StorageLocationProductName",
            "expression": "IF(HASONEVALUE(StorageLocationProductOwner[StorageLocationProductId]),CALCULATE(CALCULATE(VALUES(StorageLocationProduct[Name]),StorageLocationProductOwner),USERELATIONSHIP(StorageLocationProductOwner[StorageLocationProductId],StorageLocationProduct[StorageLocationProductId]),ALL(StorageLocationProduct)))"
          },
          {
            "name": "StorageLocationProductOwnerCategoryElementName",
            "expression": "IF(HASONEVALUE(StorageLocationProductOwner[OwnerIdCategoryId]),CALCULATE(CALCULATE(VALUES(CategoryElement[Name]),StorageLocationProductOwner),USERELATIONSHIP(StorageLocationProductOwner[OwnerIdCategoryId],CategoryElement[ElementIdCategoryId]),ALL(CategoryElement)))"
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": " SELECT [Admin].[StorageLocationProductOwner].* FROM [Admin].[StorageLocationProductOwner] "
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "StorageLocationProductOwner"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "Admin"
          }
        ]
      },
      {
        "name": "StorageLocationProductVariable",
        "columns": [
          {
            "name": "StorageLocationProductVariableId",
            "dataType": "int64",
            "sourceColumn": "StorageLocationProductVariableId",
            "sourceProviderType": "int"
          },
          {
            "name": "StorageLocationProductId",
            "dataType": "int64",
            "sourceColumn": "StorageLocationProductId",
            "sourceProviderType": "int"
          },
          {
            "name": "VariableTypeId",
            "dataType": "int64",
            "sourceColumn": "VariableTypeId",
            "sourceProviderType": "int"
          },
          {
            "name": "RowVersion",
            "dataType": "string",
            "sourceColumn": "RowVersion",
            "sourceProviderType": "timestamp"
          },
          {
            "name": "CreatedBy",
            "dataType": "string",
            "sourceColumn": "CreatedBy",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "CreatedDate",
            "dataType": "dateTime",
            "sourceColumn": "CreatedDate",
            "formatString": "General Date",
            "sourceProviderType": "datetime"
          },
          {
            "name": "LastModifiedBy",
            "dataType": "string",
            "sourceColumn": "LastModifiedBy",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "LastModifiedDate",
            "dataType": "dateTime",
            "sourceColumn": "LastModifiedDate",
            "formatString": "General Date",
            "sourceProviderType": "datetime"
          },
          {
            "type": "calculated",
            "name": "Id",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "CONCATENATE(StorageLocationProductVariable[StorageLocationProductVariableId],\"Admin.StorageLocationProductVariable\")"
          },
          {
            "type": "calculated",
            "name": "VariableTypeName",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "CALCULATE(VALUES(VariableType[Name]),USERELATIONSHIP(StorageLocationProductVariable[VariableTypeId],VariableType[VariableTypeId]))"
          },
          {
            "type": "calculated",
            "name": "Name",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "[StorageLocationVariableProductName]&\" [\"&StorageLocationProductVariable[VariableTypeName]&\"]\""
          }
        ],
        "partitions": [
          {
            "name": "StorageLocationProductVariable",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": " SELECT [Admin].[StorageLocationProductVariable].* FROM [Admin].[StorageLocationProductVariable] ",
              "dataSource": "mi-asc-ecp-dev-mainsqlmidev.public.c105ff79c574.database.windows.net"
            }
          }
        ],
        "measures": [
          {
            "name": "StorageLocationVariableProductName",
            "expression": "IF(HASONEVALUE(StorageLocationProductVariable[StorageLocationProductId]),CALCULATE(CALCULATE(VALUES(StorageLocationProduct[Name]),StorageLocationProductVariable),USERELATIONSHIP(StorageLocationProductVariable[StorageLocationProductId],StorageLocationProduct[StorageLocationProductId]),ALL(StorageLocationProduct)))"
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": " SELECT [Admin].[StorageLocationProductVariable].* FROM [Admin].[StorageLocationProductVariable] "
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "StorageLocationProductVariable"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "Admin"
          }
        ]
      },
      {
        "name": "VariableType",
        "columns": [
          {
            "name": "VariableTypeId",
            "dataType": "int64",
            "sourceColumn": "VariableTypeId",
            "sourceProviderType": "int"
          },
          {
            "name": "Name",
            "dataType": "string",
            "sourceColumn": "Name",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "ShortName",
            "dataType": "string",
            "sourceColumn": "ShortName",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "FicoName",
            "dataType": "string",
            "sourceColumn": "FicoName",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "IsConfigurable",
            "dataType": "boolean",
            "sourceColumn": "IsConfigurable",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "sourceProviderType": "bit"
          },
          {
            "name": "CreatedBy",
            "dataType": "string",
            "sourceColumn": "CreatedBy",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "CreatedDate",
            "dataType": "dateTime",
            "sourceColumn": "CreatedDate",
            "formatString": "General Date",
            "sourceProviderType": "datetime"
          }
        ],
        "partitions": [
          {
            "name": "VariableType",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": " SELECT [Admin].[VariableType].* FROM [Admin].[VariableType] ",
              "dataSource": "mi-asc-ecp-dev-mainsqlmidev.public.c105ff79c574.database.windows.net"
            }
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": " SELECT [Admin].[VariableType].* FROM [Admin].[VariableType] "
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "VariableType"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "Admin"
          }
        ]
      },
      {
        "name": "OperativeNodeRelationship",
        "columns": [
          {
            "name": "OperativeNodeRelationshipId",
            "dataType": "int64",
            "sourceColumn": "OperativeNodeRelationshipId",
            "sourceProviderType": "int"
          },
          {
            "name": "TransferPoint",
            "dataType": "string",
            "sourceColumn": "TransferPoint",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "SourceField",
            "dataType": "string",
            "sourceColumn": "SourceField",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "FieldWaterProduction",
            "dataType": "string",
            "sourceColumn": "FieldWaterProduction",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "RelatedSourceField",
            "dataType": "string",
            "sourceColumn": "RelatedSourceField",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "DestinationNode",
            "dataType": "string",
            "sourceColumn": "DestinationNode",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "DestinationNodeType",
            "dataType": "string",
            "sourceColumn": "DestinationNodeType",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "MovementType",
            "dataType": "string",
            "sourceColumn": "MovementType",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "SourceNode",
            "dataType": "string",
            "sourceColumn": "SourceNode",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "SourceNodeType",
            "dataType": "string",
            "sourceColumn": "SourceNodeType",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "SourceProduct",
            "dataType": "string",
            "sourceColumn": "SourceProduct",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "SourceProductType",
            "dataType": "string",
            "sourceColumn": "SourceProductType",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "SourceSystem",
            "dataType": "string",
            "sourceColumn": "SourceSystem",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "LoadDate",
            "dataType": "dateTime",
            "sourceColumn": "LoadDate",
            "formatString": "General Date",
            "sourceProviderType": "datetime"
          },
          {
            "name": "ExecutionID",
            "dataType": "string",
            "sourceColumn": "ExecutionID",
            "sourceProviderType": "uniqueidentifier"
          },
          {
            "name": "Notes",
            "dataType": "string",
            "sourceColumn": "Notes",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "IsDeleted",
            "dataType": "boolean",
            "sourceColumn": "IsDeleted",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "sourceProviderType": "bit"
          },
          {
            "name": "RowVersion",
            "dataType": "string",
            "sourceColumn": "RowVersion",
            "sourceProviderType": "timestamp"
          },
          {
            "name": "CreatedBy",
            "dataType": "string",
            "sourceColumn": "CreatedBy",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "CreatedDate",
            "dataType": "dateTime",
            "sourceColumn": "CreatedDate",
            "formatString": "General Date",
            "sourceProviderType": "datetime"
          },
          {
            "name": "LastModifiedBy",
            "dataType": "string",
            "sourceColumn": "LastModifiedBy",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "LastModifiedDate",
            "dataType": "dateTime",
            "sourceColumn": "LastModifiedDate",
            "formatString": "General Date",
            "sourceProviderType": "datetime"
          },
          {
            "type": "calculated",
            "name": "Id",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "CONCATENATE(OperativeNodeRelationship[OperativeNodeRelationshipId],\"Analytics.OperativeNodeRelationship\")"
          }
        ],
        "partitions": [
          {
            "name": "OperativeNodeRelationship",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": " SELECT [Analytics].[OperativeNodeRelationship].* FROM [Analytics].[OperativeNodeRelationship] ",
              "dataSource": "mi-asc-ecp-dev-mainsqlmidev.public.c105ff79c574.database.windows.net"
            }
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": " SELECT [Analytics].[OperativeNodeRelationship].* FROM [Analytics].[OperativeNodeRelationship] "
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "OperativeNodeRelationship"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "Analytics"
          }
        ]
      },
      {
        "name": "OperativeNodeRelationshipWithOwnership",
        "columns": [
          {
            "name": "OperativeNodeRelationshipWithOwnershipId",
            "dataType": "int64",
            "sourceColumn": "OperativeNodeRelationshipWithOwnershipId",
            "sourceProviderType": "int"
          },
          {
            "name": "SourceProduct",
            "dataType": "string",
            "sourceColumn": "SourceProduct",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "LogisticSourceCenter",
            "dataType": "string",
            "sourceColumn": "LogisticSourceCenter",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "DestinationProduct",
            "dataType": "string",
            "sourceColumn": "DestinationProduct",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "LogisticDestinationCenter",
            "dataType": "string",
            "sourceColumn": "LogisticDestinationCenter",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "TransferPoint",
            "dataType": "string",
            "sourceColumn": "TransferPoint",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "IsDeleted",
            "dataType": "boolean",
            "sourceColumn": "IsDeleted",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "sourceProviderType": "bit"
          },
          {
            "name": "Notes",
            "dataType": "string",
            "sourceColumn": "Notes",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "SourceSystem",
            "dataType": "string",
            "sourceColumn": "SourceSystem",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "LoadDate",
            "dataType": "dateTime",
            "sourceColumn": "LoadDate",
            "formatString": "General Date",
            "sourceProviderType": "datetime"
          },
          {
            "name": "ExecutionID",
            "dataType": "string",
            "sourceColumn": "ExecutionID",
            "sourceProviderType": "uniqueidentifier"
          },
          {
            "name": "RowVersion",
            "dataType": "string",
            "sourceColumn": "RowVersion",
            "sourceProviderType": "timestamp"
          },
          {
            "name": "CreatedBy",
            "dataType": "string",
            "sourceColumn": "CreatedBy",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "CreatedDate",
            "dataType": "dateTime",
            "sourceColumn": "CreatedDate",
            "formatString": "General Date",
            "sourceProviderType": "datetime"
          },
          {
            "name": "LastModifiedBy",
            "dataType": "string",
            "sourceColumn": "LastModifiedBy",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "LastModifiedDate",
            "dataType": "dateTime",
            "sourceColumn": "LastModifiedDate",
            "formatString": "General Date",
            "sourceProviderType": "datetime"
          },
          {
            "type": "calculated",
            "name": "Id",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "CONCATENATE(OperativeNodeRelationshipWithOwnership[OperativeNodeRelationshipWithOwnershipId],\"Analytics.OperativeNodeRelationshipWithOwnership\")"
          }
        ],
        "partitions": [
          {
            "name": "OperativeNodeRelationshipWithOwnership",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": " SELECT [Analytics].[OperativeNodeRelationshipWithOwnership].* FROM [Analytics].[OperativeNodeRelationshipWithOwnership] ",
              "dataSource": "mi-asc-ecp-dev-mainsqlmidev.public.c105ff79c574.database.windows.net"
            }
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": " SELECT [Analytics].[OperativeNodeRelationshipWithOwnership].* FROM [Analytics].[OperativeNodeRelationshipWithOwnership] "
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "OperativeNodeRelationshipWithOwnership"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "Analytics"
          }
        ]
      },
      {
        "name": "Ticket",
        "columns": [
          {
            "name": "TicketId",
            "dataType": "int64",
            "sourceColumn": "TicketId",
            "sourceProviderType": "int"
          },
          {
            "name": "CategoryElementId",
            "dataType": "int64",
            "sourceColumn": "CategoryElementId",
            "sourceProviderType": "int"
          },
          {
            "name": "StartDate",
            "dataType": "dateTime",
            "sourceColumn": "StartDate",
            "formatString": "General Date",
            "sourceProviderType": "datetime"
          },
          {
            "name": "EndDate",
            "dataType": "dateTime",
            "sourceColumn": "EndDate",
            "formatString": "General Date",
            "sourceProviderType": "datetime"
          },
          {
            "name": "Status",
            "dataType": "int64",
            "sourceColumn": "Status",
            "sourceProviderType": "int"
          },
          {
            "name": "TicketTypeId",
            "dataType": "int64",
            "sourceColumn": "TicketTypeId",
            "sourceProviderType": "int"
          },
          {
            "name": "TicketGroupId",
            "dataType": "string",
            "sourceColumn": "TicketGroupId",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "ErrorMessage",
            "dataType": "string",
            "sourceColumn": "ErrorMessage",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "OwnerId",
            "dataType": "int64",
            "sourceColumn": "OwnerId",
            "sourceProviderType": "int"
          },
          {
            "name": "NodeId",
            "dataType": "int64",
            "sourceColumn": "NodeId",
            "sourceProviderType": "int"
          },
          {
            "name": "BlobPath",
            "dataType": "string",
            "sourceColumn": "BlobPath",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "AnalyticsStatus",
            "dataType": "int64",
            "sourceColumn": "AnalyticsStatus",
            "sourceProviderType": "int"
          },
          {
            "name": "AnalyticsErrorMessage",
            "dataType": "string",
            "sourceColumn": "AnalyticsErrorMessage",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "CreatedBy",
            "dataType": "string",
            "sourceColumn": "CreatedBy",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "CreatedDate",
            "dataType": "dateTime",
            "sourceColumn": "CreatedDate",
            "formatString": "General Date",
            "sourceProviderType": "datetime"
          },
          {
            "name": "LastModifiedBy",
            "dataType": "string",
            "sourceColumn": "LastModifiedBy",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "LastModifiedDate",
            "dataType": "dateTime",
            "sourceColumn": "LastModifiedDate",
            "formatString": "General Date",
            "sourceProviderType": "datetime"
          }
        ],
        "partitions": [
          {
            "name": "Ticket",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": " SELECT [Admin].[Ticket].* FROM [Admin].[Ticket] ",
              "dataSource": "mi-asc-ecp-dev-mainsqlmidev.public.c105ff79c574.database.windows.net"
            }
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": " SELECT [Admin].[Ticket].* FROM [Admin].[Ticket] "
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "Ticket"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "Admin"
          }
        ]
      },
      {
        "name": "MovementPeriod",
        "columns": [
          {
            "name": "MovementPeriodId",
            "dataType": "int64",
            "sourceColumn": "MovementPeriodId",
            "sourceProviderType": "int"
          },
          {
            "name": "MovementTransactionId",
            "dataType": "int64",
            "sourceColumn": "MovementTransactionId",
            "sourceProviderType": "int"
          },
          {
            "name": "StartTime",
            "dataType": "dateTime",
            "sourceColumn": "StartTime",
            "formatString": "General Date",
            "sourceProviderType": "datetime"
          },
          {
            "name": "EndTime",
            "dataType": "dateTime",
            "sourceColumn": "EndTime",
            "formatString": "General Date",
            "sourceProviderType": "datetime"
          },
          {
            "name": "CreatedBy",
            "dataType": "string",
            "sourceColumn": "CreatedBy",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "CreatedDate",
            "dataType": "dateTime",
            "sourceColumn": "CreatedDate",
            "formatString": "General Date",
            "sourceProviderType": "datetime"
          },
          {
            "name": "LastModifiedBy",
            "dataType": "string",
            "sourceColumn": "LastModifiedBy",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "LastModifiedDate",
            "dataType": "dateTime",
            "sourceColumn": "LastModifiedDate",
            "formatString": "General Date",
            "sourceProviderType": "datetime"
          }
        ],
        "partitions": [
          {
            "name": "MovementPeriod",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": " SELECT [Offchain].[MovementPeriod].* FROM [Offchain].[MovementPeriod] ",
              "dataSource": "mi-asc-ecp-dev-mainsqlmidev.public.c105ff79c574.database.windows.net"
            }
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": " SELECT [Offchain].[MovementPeriod].* FROM [Offchain].[MovementPeriod] "
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "MovementPeriod"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "Offchain"
          }
        ]
      },
      {
        "name": "ScenarioType",
        "columns": [
          {
            "name": "ScenarioTypeId",
            "dataType": "int64",
            "sourceColumn": "ScenarioTypeId",
            "sourceProviderType": "int"
          },
          {
            "name": "Name",
            "dataType": "string",
            "sourceColumn": "Name",
            "sourceProviderType": "varchar"
          },
          {
            "name": "CreatedBy",
            "dataType": "string",
            "sourceColumn": "CreatedBy",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "CreatedDate",
            "dataType": "dateTime",
            "sourceColumn": "CreatedDate",
            "formatString": "General Date",
            "sourceProviderType": "datetime"
          }
        ],
        "partitions": [
          {
            "name": "ScenarioType",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": " SELECT [Admin].[ScenarioType].* FROM [Admin].[ScenarioType] ",
              "dataSource": "mi-asc-ecp-dev-mainsqlmidev.public.c105ff79c574.database.windows.net"
            }
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": " SELECT [Admin].[ScenarioType].* FROM [Admin].[ScenarioType] "
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "ScenarioType"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "Admin"
          }
        ]
      },
      {
        "name": "DeltaNode",
        "columns": [
          {
            "name": "DeltaNodeId",
            "dataType": "int64",
            "sourceColumn": "DeltaNodeId",
            "sourceProviderType": "int"
          },
          {
            "name": "TicketId",
            "dataType": "int64",
            "sourceColumn": "TicketId",
            "sourceProviderType": "int"
          },
          {
            "name": "NodeId",
            "dataType": "int64",
            "sourceColumn": "NodeId",
            "sourceProviderType": "int"
          },
          {
            "name": "Status",
            "dataType": "int64",
            "sourceColumn": "Status",
            "sourceProviderType": "int"
          },
          {
            "name": "CreatedBy",
            "dataType": "string",
            "sourceColumn": "CreatedBy",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "CreatedDate",
            "dataType": "dateTime",
            "sourceColumn": "CreatedDate",
            "formatString": "General Date",
            "sourceProviderType": "datetime"
          },
          {
            "name": "LastModifiedBy",
            "dataType": "string",
            "sourceColumn": "LastModifiedBy",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "LastModifiedDate",
            "dataType": "dateTime",
            "sourceColumn": "LastModifiedDate",
            "formatString": "General Date",
            "sourceProviderType": "datetime"
          },
          {
            "type": "calculated",
            "name": "Node",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "VAR NodeId = DeltaNode[NodeId]",
              "RETURN",
              "    CALCULATE (",
              "        SELECTEDVALUE (Node[Name]),",
              "        ALL (Node),",
              "        Node[NodeId] = NodeId",
              "    )"
            ]
          },
          {
            "type": "calculated",
            "name": "Ticket",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "VAR TicketId = DeltaNode[TicketId]",
              "RETURN",
              "    CALCULATE (",
              "        SELECTEDVALUE (Ticket[TicketId]),",
              "        ALL (DeltaNode),",
              "        Ticket[TicketId] = TicketId",
              "    )"
            ]
          },
          {
            "type": "calculated",
            "name": "StartDate",
            "dataType": "dateTime",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "VAR TicketId = DeltaNode[TicketId]",
              "RETURN",
              "    CALCULATE (",
              "        SELECTEDVALUE (Ticket[StartDate]),",
              "        ALL (DeltaNode),",
              "        Ticket[TicketId] = TicketId",
              "    )"
            ],
            "formatString": "General Date"
          },
          {
            "type": "calculated",
            "name": "EndDate",
            "dataType": "dateTime",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "VAR TicketId = DeltaNode[TicketId]",
              "RETURN",
              "    CALCULATE (",
              "        SELECTEDVALUE (Ticket[EndDate]),",
              "        ALL (DeltaNode),",
              "        Ticket[TicketId] = TicketId",
              "    )"
            ],
            "formatString": "General Date"
          },
          {
            "type": "calculated",
            "name": "RegistrationDate",
            "dataType": "dateTime",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "VAR TicketId = DeltaNode[TicketId]",
              "RETURN",
              "    CALCULATE (",
              "        SELECTEDVALUE (Ticket[CreatedDate]),",
              "        ALL (DeltaNode),",
              "        Ticket[TicketId] = TicketId",
              "    )"
            ],
            "formatString": "General Date"
          },
          {
            "type": "calculated",
            "name": "SegmentId",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "VAR TicketId = DeltaNode[TicketId]",
              "RETURN",
              "    CALCULATE (",
              "        SELECTEDVALUE (Ticket[CategoryElementId]),",
              "        ALL (DeltaNode),",
              "        Ticket[TicketId] = TicketId",
              "    )"
            ]
          },
          {
            "type": "calculated",
            "name": "ElementIdCategoryId",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "DeltaNode[SegmentId] & \"_2\""
          },
          {
            "type": "calculated",
            "name": "Segment",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "VAR ElementIdCategoryId = DeltaNode[ElementIdCategoryId]",
              "RETURN",
              "    CALCULATE (",
              "        SELECTEDVALUE (CategoryElement[Name]),",
              "        ALL (DeltaNode),",
              "        CategoryElement[ElementIdCategoryId] = ElementIdCategoryId",
              "    )"
            ]
          },
          {
            "type": "calculated",
            "name": "System",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "\"\""
          },
          {
            "type": "calculated",
            "name": "Version",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "\"\""
          },
          {
            "type": "calculated",
            "name": "TicketCreatedDate",
            "dataType": "dateTime",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "VAR TicketId = DeltaNode[TicketId]",
              "RETURN",
              "    CALCULATE (",
              "        SELECTEDVALUE (Ticket[CreatedDate]),",
              "        ALL (DeltaNode),",
              "        Ticket[TicketId] = TicketId",
              "    )"
            ]
          },
          {
            "type": "calculated",
            "name": "StartDateShort",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "FORMAT(DeltaNode[StartDate], \"MM/d/yyyy\")"
          },
          {
            "type": "calculated",
            "name": "EndDateShort",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "FORMAT(DeltaNode[EndDate], \"MM/d/yyyy\")"
          },
          {
            "type": "calculated",
            "name": "RegistrationDateShort",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "FORMAT(DeltaNode[RegistrationDate], \"MM/d/yyyy\")"
          }
        ],
        "partitions": [
          {
            "name": "DeltaNode",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": " SELECT [Admin].[DeltaNode].* FROM [Admin].[DeltaNode] ",
              "dataSource": "mi-asc-ecp-dev-mainsqlmidev.public.c105ff79c574.database.windows.net"
            }
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": " SELECT [Admin].[DeltaNode].* FROM [Admin].[DeltaNode] "
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "DeltaNode"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "Admin"
          }
        ]
      },
      {
        "name": "FileRegistration",
        "columns": [
          {
            "name": "FileRegistrationId",
            "dataType": "int64",
            "sourceColumn": "FileRegistrationId",
            "sourceProviderType": "int"
          },
          {
            "name": "UploadId",
            "dataType": "string",
            "sourceColumn": "UploadId",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "UploadDate",
            "dataType": "dateTime",
            "sourceColumn": "UploadDate",
            "formatString": "General Date",
            "sourceProviderType": "datetime"
          },
          {
            "name": "Name",
            "dataType": "string",
            "sourceColumn": "Name",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "Action",
            "dataType": "int64",
            "sourceColumn": "Action",
            "sourceProviderType": "int"
          },
          {
            "name": "Status",
            "dataType": "int64",
            "sourceColumn": "Status",
            "sourceProviderType": "int"
          },
          {
            "name": "SystemTypeId",
            "dataType": "int64",
            "sourceColumn": "SystemTypeId",
            "sourceProviderType": "int"
          },
          {
            "name": "SegmentId",
            "dataType": "int64",
            "sourceColumn": "SegmentId",
            "sourceProviderType": "int"
          },
          {
            "name": "BlobPath",
            "dataType": "string",
            "sourceColumn": "BlobPath",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "HomologationInventoryBlobPath",
            "dataType": "string",
            "sourceColumn": "HomologationInventoryBlobPath",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "HomologationMovementBlobPath",
            "dataType": "string",
            "sourceColumn": "HomologationMovementBlobPath",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "PreviousUploadId",
            "dataType": "string",
            "sourceColumn": "PreviousUploadId",
            "sourceProviderType": "uniqueidentifier"
          },
          {
            "name": "IsParsed",
            "dataType": "boolean",
            "sourceColumn": "IsParsed",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "sourceProviderType": "bit"
          },
          {
            "name": "CreatedBy",
            "dataType": "string",
            "sourceColumn": "CreatedBy",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "CreatedDate",
            "dataType": "dateTime",
            "sourceColumn": "CreatedDate",
            "formatString": "General Date",
            "sourceProviderType": "datetime"
          },
          {
            "name": "LastModifiedBy",
            "dataType": "string",
            "sourceColumn": "LastModifiedBy",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "LastModifiedDate",
            "dataType": "dateTime",
            "sourceColumn": "LastModifiedDate",
            "formatString": "General Date",
            "sourceProviderType": "datetime"
          }
        ],
        "partitions": [
          {
            "name": "FileRegistration",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": " SELECT [Admin].[FileRegistration].* FROM [Admin].[FileRegistration] ",
              "dataSource": "mi-asc-ecp-dev-mainsqlmidev.public.c105ff79c574.database.windows.net"
            }
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": " SELECT [Admin].[FileRegistration].* FROM [Admin].[FileRegistration] "
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "FileRegistration"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "Admin"
          }
        ]
      },
      {
        "name": "FileRegistrationTransaction",
        "columns": [
          {
            "name": "FileRegistrationTransactionId",
            "dataType": "int64",
            "sourceColumn": "FileRegistrationTransactionId",
            "sourceProviderType": "int"
          },
          {
            "name": "FileRegistrationId",
            "dataType": "int64",
            "sourceColumn": "FileRegistrationId",
            "sourceProviderType": "int"
          },
          {
            "name": "BlobPath",
            "dataType": "string",
            "sourceColumn": "BlobPath",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "SessionId",
            "dataType": "string",
            "sourceColumn": "SessionId",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "StatusTypeId",
            "dataType": "int64",
            "sourceColumn": "StatusTypeId",
            "sourceProviderType": "int"
          },
          {
            "name": "RecordID",
            "dataType": "string",
            "sourceColumn": "RecordID",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "CreatedBy",
            "dataType": "string",
            "sourceColumn": "CreatedBy",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "CreatedDate",
            "dataType": "dateTime",
            "sourceColumn": "CreatedDate",
            "formatString": "General Date",
            "sourceProviderType": "datetime"
          },
          {
            "name": "LastModifiedBy",
            "dataType": "string",
            "sourceColumn": "LastModifiedBy",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "LastModifiedDate",
            "dataType": "dateTime",
            "sourceColumn": "LastModifiedDate",
            "formatString": "General Date",
            "sourceProviderType": "datetime"
          },
          {
            "type": "calculated",
            "name": "FileRegistrationCreatedBy",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "VAR FileRegistrationId = FileRegistrationTransaction[FileRegistrationId]",
              "              RETURN",
              "                  CALCULATE (",
              "                      SELECTEDVALUE (FileRegistration[CreatedBy]),",
              "                      ALL (FileRegistrationTransaction),",
              "                      FileRegistration[FileRegistrationId] = FileRegistrationId",
              "                       )"
            ]
          }
        ],
        "partitions": [
          {
            "name": "FileRegistrationTransaction",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": " SELECT [Admin].[FileRegistrationTransaction].* FROM [Admin].[FileRegistrationTransaction] ",
              "dataSource": "mi-asc-ecp-dev-mainsqlmidev.public.c105ff79c574.database.windows.net"
            }
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": " SELECT [Admin].[FileRegistrationTransaction].* FROM [Admin].[FileRegistrationTransaction] "
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "FileRegistrationTransaction"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "Admin"
          }
        ]
      },
      {
        "name": "DeltaNodeCalculate",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Segment",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Segment]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "System",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[System]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "Node",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Node]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "StartDate",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[StartDate]",
            "formatString": "Short Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "type": "calculatedTableColumn",
            "name": "EndDate",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[EndDate]",
            "formatString": "Short Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "type": "calculatedTableColumn",
            "name": "RegistrationDate",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[RegistrationDate]",
            "formatString": "Short Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "type": "calculatedTableColumn",
            "name": "Version",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Version]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "Ticket",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Ticket]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "TicketCreatedDate",
            "dataType": "dateTime",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[TicketCreatedDate]",
            "formatString": "General Date"
          },
          {
            "type": "calculatedTableColumn",
            "name": "NodeId",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[NodeId]"
          },
          {
            "type": "calculated",
            "name": "Key",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "DeltaNodeCalculate[NodeId] & \"_\" & FORMAT(DeltaNodeCalculate[StartDate], \"d/MM/yyyy\") & \"_\" & FORMAT(DeltaNodeCalculate[EndDate], \"d/MM/yyyy\")"
          },
          {
            "type": "calculated",
            "name": "Fount",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "VAR Llave = DeltaNodeCalculate[Key]",
              "RETURN",
              "CALCULATE (",
              "        SELECTEDVALUE (MovementCalculate[Key]),",
              "        ALL (MovementCalculate),",
              "        MovementCalculate[Key] = Llave",
              "       )"
            ]
          },
          {
            "type": "calculatedTableColumn",
            "name": "SegmentId",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[SegmentId]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": [
                "SELECTCOLUMNS(",
                "FILTER(",
                "\tDeltaNode, DeltaNode[Status] <> 3 ",
                "\t&& DeltaNode[StartDate] >= CONVERT(\"01-\" &  MONTH(TODAY()) & \"-\" & (YEAR(TODAY()) -1), DATETIME)  && DeltaNode[EndDate] < TODAY()), ",
                "\"SegmentId\", DeltaNode[SegmentId],",
                "\"Segment\",DeltaNode[Segment], ",
                "\"System\", DeltaNode[System], ",
                "\"NodeId\", DeltaNode[NodeId], ",
                "\"Node\", DeltaNode[Node], ",
                "\"StartDate\", DeltaNode[StartDateShort], ",
                "\"EndDate\", DeltaNode[EndDateShort], ",
                "\"RegistrationDate\", DeltaNode[RegistrationDateShort], ",
                "\"Version\", DeltaNode[Version], ",
                "\"Ticket\", DeltaNode[Ticket], ",
                "\"TicketCreatedDate\", DeltaNode[TicketCreatedDate])"
              ]
            }
          }
        ]
      },
      {
        "name": "MovementCalculate",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Segment",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Segment]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "System",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[System]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "Node",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Node]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "StartDate",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[StartDate]",
            "formatString": "Short Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "type": "calculatedTableColumn",
            "name": "EndDate",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[EndDate]",
            "formatString": "Short Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "type": "calculatedTableColumn",
            "name": "RegistrationDate",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[RegistrationDate]",
            "formatString": "General Date"
          },
          {
            "type": "calculatedTableColumn",
            "name": "Version",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Version]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "NodeId",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[NodeId]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "SegmentId",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[SegmentId]"
          },
          {
            "type": "calculated",
            "name": "Ticket",
            "dataType": "int64",
            "isDataTypeInferred": true
          },
          {
            "type": "calculated",
            "name": "Key",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "MovementCalculate[NodeId] & \"_\" & MovementCalculate[StartDate] & \"_\" & MovementCalculate[EndDate]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": [
                "",
                "GROUPBY(",
                "\tSELECTCOLUMNS(",
                "\tFILTER(",
                "\t\tMovement,",
                "\t\tISBLANK(Movement[OfficialDeltaTicketId])",
                "\t\t&& Movement[ScenarioId] = 2",
                "\t\t&& ISBLANK(Movement[SystemId]) = FALSE()",
                "\t\t&& (ISBLANK(Movement[Version]) = FALSE() && TRIM(Movement[Version]) <> \"\")",
                "\t\t&& Movement[OperationalDate] >= CONVERT(\"01-\" &  MONTH(TODAY()) & \"-\" & (YEAR(TODAY()) -1), DATETIME)  && Movement[OperationalDate] < TODAY()",
                "\t\t&& (Movement[CreatedDate] > Movement[DeltaNodeCreatedDate] || ISBLANK(Movement[DeltaNodeCreatedDate]))",
                "\t\t&& ISBLANK(Movement[NodeId]) = FALSE()",
                "\t\t&& (Movement[SourceSystemId] <> 189 && Movement[SourceSystemId] <> 190)",
                "\t),",
                "\t\"SegmentId\",Movement[SegmentId],",
                "\t\"Segment\", Movement[SegmentNameFilter],",
                "\t\"System\", Movement[System],",
                "\t\"NodeId\", Movement[NodeId],",
                "\t\"Node\", Movement[NodeName],",
                "\t\"StartDate\", Movement[StartDateShort],",
                "\t\"EndDate\", Movement[EndDateShort],",
                "\t\"RegistrationDate\", Movement[CreatedDateShort], ",
                "\t\"Version\", Movement[Version]),",
                "\t[SegmentId],",
                "\t[Segment],",
                "\t[System],",
                "\t[NodeId],",
                "\t[Node],",
                "\t[StartDate],",
                "\t[EndDate],",
                "\t[RegistrationDate],",
                "\t[Version]",
                ")"
              ]
            }
          }
        ]
      },
      {
        "name": "MovementGroup",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "MovementGroupSegmentName",
            "dataType": "string",
            "isNameInferred": false,
            "isDataTypeInferred": true,
            "sourceColumn": "[Segment]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "System",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[System]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "SegmentNodeName",
            "dataType": "string",
            "isNameInferred": false,
            "isDataTypeInferred": true,
            "sourceColumn": "[Node]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "Version",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Version]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "DeltaTicket",
            "dataType": "int64",
            "isNameInferred": false,
            "isDataTypeInferred": true,
            "sourceColumn": "[Ticket]"
          },
          {
            "type": "calculated",
            "name": "CuttingPeriod",
            "dataType": "string",
            "isDataTypeInferred": false,
            "expression": "FORMAT(MovementGroup[StartDateFormat], \"dd-MMM-yy\") & \" - \" & FORMAT(MovementGroup[EndDateFormat], \"dd-MMM-yy\")"
          },
          {
            "type": "calculated",
            "name": "MonthPeriodDate",
            "dataType": "dateTime",
            "isDataTypeInferred": false,
            "expression": "MovementGroup[MonthPeriodString]",
            "formatString": "Short Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "type": "calculated",
            "name": "MonthsUntilReport",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "DATEDIFF(MovementGroup[StartDate], MovementGroup[RegistrationDate], MONTH)"
          },
          {
            "type": "calculated",
            "name": "BalanceState",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "IF(ISBLANK(MovementGroup[DeltaTicket]), \"No procesados\", \"Procesados\")"
          },
          {
            "type": "calculated",
            "name": "RawNodeSystem",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "IF(ISBLANK(MovementGroup[DeltaTicket]), 1, 0)"
          },
          {
            "type": "calculatedTableColumn",
            "name": "SegmentId",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[SegmentId]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "Start",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Start]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "End",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[End]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "Registration",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Registration]"
          },
          {
            "type": "calculated",
            "name": "StartDate",
            "dataType": "dateTime",
            "isDataTypeInferred": true,
            "expression": "DATEVALUE(MovementGroup[Start])",
            "formatString": "Short Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "type": "calculated",
            "name": "EndDate",
            "dataType": "dateTime",
            "isDataTypeInferred": true,
            "expression": "DATEVALUE(MovementGroup[End])",
            "formatString": "Short Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "type": "calculated",
            "name": "RegistrationDate",
            "dataType": "dateTime",
            "isDataTypeInferred": true,
            "expression": "DATEVALUE(MovementGroup[Registration])",
            "formatString": "Short Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "type": "calculated",
            "name": "MonthPeriodString",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "FORMAT(MovementGroup[StartDate], \"MM\") & \"/1/\" & FORMAT(MovementGroup[StartDate], \"yyyy\")"
          },
          {
            "type": "calculated",
            "name": "MonthPeriod",
            "dataType": "dateTime",
            "isDataTypeInferred": true,
            "expression": "MovementGroup[MonthPeriodDate]",
            "formatString": "MMM-yy"
          },
          {
            "type": "calculated",
            "name": "RegistrationDateFormat",
            "dataType": "dateTime",
            "isDataTypeInferred": true,
            "expression": "MovementGroup[RegistrationDate]",
            "formatString": "dd-MMM-yy"
          },
          {
            "type": "calculated",
            "name": "StartDateFormat",
            "dataType": "dateTime",
            "isDataTypeInferred": true,
            "expression": "MovementGroup[StartDate]",
            "formatString": "dd-MMM-yy"
          },
          {
            "type": "calculated",
            "name": "EndDateFormat",
            "dataType": "dateTime",
            "isDataTypeInferred": true,
            "expression": "MovementGroup[EndDate]",
            "formatString": "dd-MMM-yy"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": [
                "UNION(",
                "\tSELECTCOLUMNS(",
                "\t\t\tFILTER(DeltaNodeCalculate, ISBLANK(DeltaNodeCalculate[Fount]) == TRUE()),",
                "\t\t\"SegmentId\", DeltaNodeCalculate[SegmentId],",
                "\t\t\"Segment\", DeltaNodeCalculate[Segment],",
                "\t \t\"System\", DeltaNodeCalculate[System],",
                "\t \t\"Node\", DeltaNodeCalculate[Node],",
                "\t \t\"Start\", DeltaNodeCalculate[StartDate],",
                "\t \t\"End\", DeltaNodeCalculate[EndDate],",
                "\t \t\"Registration\", DeltaNodeCalculate[RegistrationDate],",
                "\t \t\"Version\", DeltaNodeCalculate[Version],",
                "\t \t\"Ticket\", DeltaNodeCalculate[Ticket]",
                "\t ),",
                "\tSELECTCOLUMNS(",
                "\t\t\tMovementCalculate, ",
                "\t\t\"SegmentId\", MovementCalculate[SegmentId],",
                "\t\t\"Segment\", MovementCalculate[Segment],",
                "\t\t\"System\", MovementCalculate[System],",
                "\t \t\"Node\", MovementCalculate[Node],",
                "\t \t\"Start\", MovementCalculate[StartDate],",
                "\t \t\"End\", MovementCalculate[EndDate],",
                "\t \t\"Registration\", MovementCalculate[RegistrationDate],",
                "\t \t\"Version\", MovementCalculate[Version],",
                "\t \t\"Ticket\", MovementCalculate[Ticket])",
                ")"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "NumberOfPendingReports",
            "expression": [
              " ",
              "VAR Val = SUM(MovementGroup[RawNodeSystem])",
              "RETURN",
              "IF(ISBLANK(Val),\"-\",Val)"
            ]
          }
        ]
      }
    ],
    "relationships": [
      {
        "name": "6e030ad9-03f7-4009-bd30-0d1767036b83",
        "fromTable": "Movement",
        "fromColumn": "ReasonIdElementIdCategoryId",
        "toTable": "CategoryElement",
        "toColumn": "ElementIdCategoryId",
        "isActive": false,
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "52b86b9f-d2cd-4f13-8fb9-27f715d7a65a",
        "fromTable": "Movement",
        "fromColumn": "MovementTypeIdElementIdCategoryId",
        "toTable": "CategoryElement",
        "toColumn": "ElementIdCategoryId",
        "isActive": false,
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "f1972989-92c6-4ba6-990c-f578f36b0ee0",
        "fromTable": "Movement",
        "fromColumn": "MeasurementUnitElementIdCategoryId",
        "toTable": "CategoryElement",
        "toColumn": "ElementIdCategoryId",
        "isActive": false,
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "54648754-fb58-4d57-9174-c58f3b61a4c6",
        "fromCardinality": "one",
        "fromTable": "MovementSource",
        "fromColumn": "MovementTransactionId",
        "toTable": "Movement",
        "toColumn": "MovementTransactionId",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "99281482-2399-4f6b-84b6-01a146f4d1a7",
        "fromCardinality": "one",
        "fromTable": "MovementDestination",
        "fromColumn": "MovementTransactionId",
        "toTable": "Movement",
        "toColumn": "MovementTransactionId",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "8a4b64d8-4396-4df0-b071-3a7e261e9d00",
        "fromTable": "MovementSource",
        "fromColumn": "SourceProductId",
        "toTable": "Product",
        "toColumn": "ProductId",
        "isActive": false,
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "bcf1a758-e610-4a88-9c47-0256a1e50ab8",
        "fromTable": "MovementDestination",
        "fromColumn": "DestinationProductId",
        "toTable": "Product",
        "toColumn": "ProductId",
        "isActive": false,
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "a271e835-2460-411c-ab06-df3136f5ad85",
        "fromTable": "MovementDestination",
        "fromColumn": "ProductTypeElementIdCategoryId",
        "toTable": "CategoryElement",
        "toColumn": "ElementIdCategoryId",
        "isActive": false,
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "e2b7f6df-6730-4130-bf4b-24c82b44d3d5",
        "fromTable": "MovementSource",
        "fromColumn": "ProductTypeIdElementIdCategoryId",
        "toTable": "CategoryElement",
        "toColumn": "ElementIdCategoryId",
        "isActive": false,
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "41802d41-b96a-4b9a-b310-86d47365df4e",
        "fromTable": "Movement",
        "fromColumn": "SegmentIdElementIdCategoryId",
        "toTable": "CategoryElement",
        "toColumn": "ElementIdCategoryId",
        "isActive": false,
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "a238c3ba-9a56-462a-b648-b3343029bf88",
        "fromTable": "Movement",
        "fromColumn": "OperatorIdElementIdCategoryId",
        "toTable": "CategoryElement",
        "toColumn": "ElementIdCategoryId",
        "isActive": false,
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "ec826c3e-ffe2-4e54-9df6-1a99d1316b50",
        "fromTable": "InventoryProduct",
        "fromColumn": "NodeId",
        "toTable": "Node",
        "toColumn": "NodeId",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "1a1ab69e-c2f7-46c8-a841-6dc84443049a",
        "fromTable": "InventoryProduct",
        "fromColumn": "ProductId",
        "toTable": "Product",
        "toColumn": "ProductId",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "0627e809-ce96-4dbe-a4da-3eb15815924c",
        "fromTable": "InventoryProduct",
        "fromColumn": "ProducTypeIdElementIdCategoryId",
        "toTable": "CategoryElement",
        "toColumn": "ElementIdCategoryId",
        "isActive": false,
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "83f68601-d403-4f97-8713-ea5ee5652b27",
        "fromTable": "InventoryProduct",
        "fromColumn": "OperatorIdElementIdCategoryId",
        "toTable": "CategoryElement",
        "toColumn": "ElementIdCategoryId",
        "isActive": false,
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "dec8291a-6046-4769-90bf-236f4facfcee",
        "fromTable": "InventoryProduct",
        "fromColumn": "SegmentIdElementIdCategoryId",
        "toTable": "CategoryElement",
        "toColumn": "ElementIdCategoryId",
        "isActive": false,
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "63bac6a9-e1a7-48dc-af6c-dd42c7c91b04",
        "fromTable": "AuditLog",
        "fromColumn": "Id",
        "toTable": "Event",
        "toColumn": "Id"
      },
      {
        "name": "5fa7a06d-f22f-4d6b-9d5c-09033b464337",
        "fromTable": "AuditLog",
        "fromColumn": "Id",
        "toTable": "Contract",
        "toColumn": "Id"
      },
      {
        "name": "8aa72361-1fcb-4a8a-a964-c48311fe2218",
        "fromTable": "AuditLog",
        "fromColumn": "Id",
        "toTable": "Category",
        "toColumn": "Id"
      },
      {
        "name": "b0e13df9-e4f0-49fc-95fa-ed4fcce26b36",
        "fromTable": "Event",
        "fromColumn": "SourceNodeId",
        "toTable": "Node",
        "toColumn": "NodeId",
        "isActive": false,
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "150aa61d-dc09-4374-9cf6-4362fe61ac47",
        "fromTable": "Event",
        "fromColumn": "DestinationNodeId",
        "toTable": "Node",
        "toColumn": "NodeId",
        "isActive": false,
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "3c73f367-da13-4b70-9ca8-54c56cad0c57",
        "fromTable": "Event",
        "fromColumn": "EventTypeId",
        "toTable": "CategoryElement",
        "toColumn": "ElementId",
        "isActive": false,
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "f4b45bde-c958-44c5-9208-867403c1648a",
        "fromTable": "Homologation",
        "fromColumn": "SourceSystemId",
        "toTable": "SystemType",
        "toColumn": "SystemTypeId",
        "isActive": false,
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "1a78b93d-9618-4abc-912e-4f0e8afa0620",
        "fromTable": "Homologation",
        "fromColumn": "DestinationSystemId",
        "toTable": "SystemType",
        "toColumn": "SystemTypeId",
        "isActive": false,
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "4b302ab8-1197-4340-8d30-8b51fbbc0779",
        "fromTable": "HomologationGroup",
        "fromColumn": "HomologationId",
        "toTable": "Homologation",
        "toColumn": "HomologationId",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "16d2a0be-b96d-4b4f-bd43-0746bbfc17ff",
        "fromTable": "HomologationDataMapping",
        "fromColumn": "HomologationGroupId",
        "toTable": "HomologationGroup",
        "toColumn": "HomologationGroupId"
      },
      {
        "name": "31572b06-cda5-49ec-86d7-afea3958dc83",
        "fromTable": "AuditLog",
        "fromColumn": "Id",
        "toTable": "HomologationDataMapping",
        "toColumn": "Id"
      },
      {
        "name": "f278f21c-d06b-4938-9352-06620898f95a",
        "fromTable": "HomologationGroup",
        "fromColumn": "GroupTypeId",
        "toTable": "Category",
        "toColumn": "CategoryId",
        "isActive": false,
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "f703750f-4283-4860-a9d8-494f02c3bf4c",
        "fromTable": "AuditLog",
        "fromColumn": "Id",
        "toTable": "Node",
        "toColumn": "Id"
      },
      {
        "name": "b1cb73f1-3f61-48c3-85be-d33b36dfdff5",
        "fromTable": "AuditLog",
        "fromColumn": "Id",
        "toTable": "NodeConnection",
        "toColumn": "Id"
      },
      {
        "name": "8ac9695d-7a52-4615-bed3-5020807e8680",
        "fromTable": "AuditLog",
        "fromColumn": "Id",
        "toTable": "NodeConnectionProduct",
        "toColumn": "Id"
      },
      {
        "name": "bdec9878-e78e-411d-928c-ff656e7a6bcc",
        "fromTable": "NodeConnectionProduct",
        "fromColumn": "NodeConnectionId",
        "toTable": "NodeConnection",
        "toColumn": "NodeConnectionId",
        "isActive": false,
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "d8bc237a-44fd-4737-a489-2f08aa77dc9e",
        "fromTable": "NodeConnectionProduct",
        "fromColumn": "ProductId",
        "toTable": "Product",
        "toColumn": "ProductId",
        "isActive": false,
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "d1169e5e-53d7-4e98-8f53-c14faf136022",
        "fromTable": "AuditLog",
        "fromColumn": "Id",
        "toTable": "NodeConnectionProductOwner",
        "toColumn": "Id"
      },
      {
        "name": "c45a3213-76ec-47e2-a37e-1728ef757912",
        "fromTable": "NodeConnectionProductOwner",
        "fromColumn": "OwnerId",
        "toTable": "CategoryElement",
        "toColumn": "ElementId",
        "isActive": false,
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "f60ef995-3a4e-48c6-87c6-aec986906ca6",
        "fromTable": "NodeConnectionProductOwner",
        "fromColumn": "NodeConnectionProductId",
        "toTable": "NodeConnectionProduct",
        "toColumn": "NodeConnectionProductId",
        "isActive": false,
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "b9b6df34-3d90-4139-b414-060f2687f28b",
        "fromTable": "AuditLog",
        "fromColumn": "Id",
        "toTable": "NodeStorageLocation",
        "toColumn": "Id"
      },
      {
        "name": "51976cdf-b263-4e7c-857d-c915326b4855",
        "fromTable": "AuditLog",
        "fromColumn": "Id",
        "toTable": "NodeTag",
        "toColumn": "Id"
      },
      {
        "name": "679ea23b-6b34-43ba-b618-26f083135127",
        "fromTable": "CategoryElement",
        "fromColumn": "CategoryId",
        "toTable": "Category",
        "toColumn": "CategoryId",
        "isActive": false,
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "c169c150-8d6d-4cbc-aaaa-aa891f26f454",
        "fromTable": "NodeTag",
        "fromColumn": "ElementId",
        "toTable": "CategoryElement",
        "toColumn": "ElementId",
        "isActive": false,
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "f26c151d-a391-48af-8b5f-7e350155b193",
        "fromTable": "NodeTag",
        "fromColumn": "NodeId",
        "toTable": "Node",
        "toColumn": "NodeId",
        "isActive": false,
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "4f1b676e-6220-4c57-badf-b81af79850c6",
        "fromTable": "AuditLog",
        "fromColumn": "Id",
        "toTable": "StorageLocationProduct",
        "toColumn": "Id"
      },
      {
        "name": "d892215b-ee25-4a09-b5f0-2bcc7c53e05c",
        "fromTable": "StorageLocationProduct",
        "fromColumn": "NodeStorageLocationId",
        "toTable": "NodeStorageLocation",
        "toColumn": "NodeStorageLocationId",
        "isActive": false,
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "478152e2-ef4e-421e-b144-951184736806",
        "fromTable": "StorageLocationProduct",
        "fromColumn": "ProductId",
        "toTable": "Product",
        "toColumn": "ProductId",
        "isActive": false,
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "2a2be6ef-3567-4512-88bd-813af43a647b",
        "fromTable": "AuditLog",
        "fromColumn": "Id",
        "toTable": "StorageLocationProductOwner",
        "toColumn": "Id"
      },
      {
        "name": "a33316f6-c967-4544-94bb-7cfcb27551f8",
        "fromTable": "StorageLocationProductOwner",
        "fromColumn": "StorageLocationProductId",
        "toTable": "StorageLocationProduct",
        "toColumn": "StorageLocationProductId",
        "isActive": false,
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "25bcbf0f-ce47-4d8e-89ea-75fe7f944d95",
        "fromTable": "StorageLocationProductOwner",
        "fromColumn": "OwnerIdCategoryId",
        "toTable": "CategoryElement",
        "toColumn": "ElementIdCategoryId",
        "isActive": false,
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "cace12a5-fbbf-4b32-bac9-4bcf6afcca61",
        "fromTable": "AuditLog",
        "fromColumn": "Id",
        "toTable": "StorageLocationProductVariable",
        "toColumn": "Id"
      },
      {
        "name": "5a249b51-e7f0-4627-89a9-1757aa5c7157",
        "fromTable": "StorageLocationProductVariable",
        "fromColumn": "VariableTypeId",
        "toTable": "VariableType",
        "toColumn": "VariableTypeId",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "f7e732e1-25bf-42a6-b000-8752f9343113",
        "fromTable": "StorageLocationProductVariable",
        "fromColumn": "StorageLocationProductId",
        "toTable": "StorageLocationProduct",
        "toColumn": "StorageLocationProductId",
        "isActive": false,
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "44352402-e2ed-488c-9bc4-97b0ea817f7b",
        "fromTable": "AuditLog",
        "fromColumn": "Id",
        "toTable": "OperativeNodeRelationship",
        "toColumn": "Id"
      },
      {
        "name": "f5a0916d-5bf2-4b26-bd7e-b0e988bcb09d",
        "fromTable": "AuditLog",
        "fromColumn": "Id",
        "toTable": "OperativeNodeRelationshipWithOwnership",
        "toColumn": "Id"
      },
      {
        "name": "43af4819-40c3-4add-a867-ff1e0e8f4758",
        "fromTable": "AuditLog",
        "fromColumn": "LogDateKey",
        "toTable": "DimDate",
        "toColumn": "DateKey"
      },
      {
        "name": "b2574015-782d-42ac-a08e-7d5429e186d2",
        "fromTable": "Movement",
        "fromColumn": "OperationalDatekey",
        "toTable": "DimDate",
        "toColumn": "DateKey"
      },
      {
        "name": "c6c817e0-9105-43a6-b2ef-a281ec242453",
        "fromTable": "InventoryProduct",
        "fromColumn": "InventoryDateKey",
        "toTable": "DimDate",
        "toColumn": "DateKey"
      },
      {
        "name": "e064a59f-1ac6-4d67-b26b-6d18f3139655",
        "fromTable": "Movement",
        "fromColumn": "ScenarioId",
        "toTable": "ScenarioType",
        "toColumn": "ScenarioTypeId",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "bf8a595d-e4a4-4507-a4c0-e7624f5fe8b5",
        "fromTable": "InventoryProduct",
        "fromColumn": "ScenarioId",
        "toTable": "ScenarioType",
        "toColumn": "ScenarioTypeId"
      },
      {
        "name": "472afbdc-9a49-43aa-90f8-9f42957df785",
        "fromCardinality": "one",
        "fromTable": "MovementPeriod",
        "fromColumn": "MovementTransactionId",
        "toTable": "Movement",
        "toColumn": "MovementTransactionId",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "03092350-d925-4112-9ffe-66804d37d5fe",
        "fromTable": "MovementDestination",
        "fromColumn": "DestinationNodeId",
        "toTable": "Node",
        "toColumn": "NodeId",
        "isActive": false,
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "740e396a-bfd4-42a8-8ee4-b33fc8fe1e56",
        "fromTable": "MovementSource",
        "fromColumn": "SourceNodeId",
        "toTable": "Node",
        "toColumn": "NodeId",
        "isActive": false,
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "3d5323cc-fafd-4c02-98da-4a2e0596b1b1",
        "fromTable": "AuditLog",
        "fromColumn": "Id",
        "toTable": "CategoryElement",
        "toColumn": "Id"
      },
      {
        "name": "25ef5bb4-0213-4e33-b132-563625d09cc3",
        "fromTable": "FileRegistrationTransaction",
        "fromColumn": "FileRegistrationId",
        "toTable": "FileRegistration",
        "toColumn": "FileRegistrationId"
      },
      {
        "name": "791d96f2-4d8a-410a-967b-7e8d6d93b2f4",
        "fromTable": "InventoryProduct",
        "fromColumn": "FileRegistrationTransactionId",
        "toTable": "FileRegistrationTransaction",
        "toColumn": "FileRegistrationTransactionId",
        "isActive": false,
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "a750c3c2-e2fd-4b1b-ac85-a2ba51273969",
        "fromTable": "Movement",
        "fromColumn": "FileRegistrationTransactionId",
        "toTable": "FileRegistrationTransaction",
        "toColumn": "FileRegistrationTransactionId",
        "isActive": false,
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "69e93f9f-5ccc-46d7-8b7d-c1c65f9b9ac9",
        "fromTable": "DeltaNode",
        "fromColumn": "TicketId",
        "toTable": "Ticket",
        "toColumn": "TicketId",
        "crossFilteringBehavior": "bothDirections"
      }
    ],
    "annotations": [
      {
        "name": "ClientCompatibilityLevel",
        "value": "600"
      }
    ]
  }
}