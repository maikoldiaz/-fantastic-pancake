// --------------------------------------------------------------------------------------------------------------------
// <copyright file="ConstantValues.cs" company="Microsoft">
//    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
//    THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
//    OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
//    ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
//    OTHER DEALINGS IN THE SOFTWARE.
// </copyright>
// --------------------------------------------------------------------------------------------------------------------

namespace Ecp.True.Bdd.Tests.Entities
{
    public static class ConstantValues
    {
        public const string LogisticCenters = "Logistic Centers";
        public const string StorageLocations = "Storage Locations";
        public const string NewStorageLocationNodeId = "NewStorageLocation NodeId";
        public const string NewStorageLocationStorageLocationTypeId = "NewStorageLocation StorageLocationTypeId";
        public const string NewStorageLocationName = "NewStorageLocation Name";
        public const string NewAuditStorageLocationName = "NewAuditStorageLocation Name";
        public const string StorageLocationId = "StorageLocation StorageLocationId";
        public const string StorageLocation = "StorageLocation";
        public const string StorageLocationTypeId = "StorageLocation StorageLocationTypeId";
        public const string NodeStorageLocationId = "StorageLocation NodeStorageLocationId";
        public const string StorageLocationNodeId = "StorageLocation NodeId";
        public const string ProductLocationNodeStorageLocationId = "Product NodeStorageLocationId";
        public const string ProductLocationStorageLocationProductId = "Product StorageLocationProductId";
        public const string StorageLocationProductId = "StorageLocationProductId";
        public const string NodeStorageLocationByNodeId = "NodeStorageLocationByNodeId";
        public const string Node = "Node";
        public const string Nodes = "Nodes";
        public const string NodeWithMutipleProducts = "CreateNodeWithMutipleProducts";
        public const string NodeWithOneProduct = "CreateNodeWithOneProduct";
        public const string UpdateNodeOwnership = "UpdateNodeOwnership";
        public const string StorageLocationStatus = "Storage Location Status";
        public const string AuditDetails = "Audit Details";
        public const string NodeDetails = "Node Details";
        public const string ProductLocationStatus = "Product Location Status";
        public const string ProductLocations = "Product Locations";
        public const string StorageLocationName = "StorageLocation Name";
        public const string ProductAuditDetails = "Product Audit Details";
        public const string Destination = "Destination";
        public const string Source = "Source";
        public const string SourceSystemId = "sourceSystemId";
        public const string DestinationSystemId = "destinationSystemId";
        public const string TrueSystemId = "TRUE System Id";
        public const string SinoperSystemId = "Sinoper System Id";
        public const string ExcelId = "Excel Id";
        public const string GroupTypeId = "Group Type Id";
        public const string Homologation = "Homologation";
        public const string SystemTypeId = "SystemTypeId";
        public const string GroupType = "GroupTypeId";
        public const string InvalidData = "-123";
        public const string Insertion = "Insert";
        public const string HomologationGroupId = "HomologationGroupId";
        public const string HomologationGroups = "HomologationGroups";
        public const string HomologationId = "HomologationId";
        public const string HomologationIdForXL = "HomologationIdForXL";
        public const string HomologationIdForSIV = "HomologationIdForSIV";
        public const string HomologationAuditDetails = "Homologation Audit Details";
        public const string AutomationNode = "AutomationNode";
        public const string ManageConnection = "node-connection";
        public const string SourceNode = "SourceNodeId";
        public const string DestinationNode = "DestinationNodeId";
        public const string Movement = "Movements";
        public const string MovementPeriod = "MovementPeriod";
        public const string MovementSource = "MovementSource";
        public const string MovementDestination = "MovementDestination";
        public const string Homologations = "Homologations";
        public const string HomologationWithTwoGroups = "HomologationWithTwoGroups";
        public const string HomologationGroupTypeId = "GroupTypeId";
        public const string HomologationGroupName = "HomologationGroupName";
        public const string GroupName = "Name";
        public const string OutFolderName = "inventory-out";
        public const string InFolderName = "inventory";
        public const string FinalOutput = "inventory";
        public const string PendingTransactions = "PendingTranasations";
        public const string ErrorJson = "ErrorJson";
        public const string LogType = "LogType";
        public const string EventType = "EventType";
        public const string HomologatedJson = "HomologatedJson";
        public const string SetupHomologation = "SetupHomologation";
        public const string SetupHomologationForXL = "SetupHomologationForXL";
        public const string MovementId = "MOVEMENTID";
        public const string MessageId = "MessageId";
        public const string NodeId = "NodeId";
        public const string TestData = "TestData";
        public const string HomePage = "Ecopetrol Logo";
        public const string CategoryElement = "Category Element";
        public const string CategoryElements = "Category Elements";
        public const string Element = "Element";
        public const string Category = "Category";
        public const string Date = "Date";
        public const string CreatedDate = "CreatedDate";
        public const string IsActive = "IsActive";
        public const string IsGrouper = "IsGrouper";
        public const string Active = "Active";
        public const string Inactive = "Inactive";
        public const string Yes = "Yes";
        public const string Name = "Name";
        public const string IsOperationalSegment = "IsOperationalSegment";
        public const string SegmentCategoryNameSuffix = "Automation";
        public const string Edit = "Edit";
        public const string Description = "Description";
        public const string CategoryId = "CategoryId";
        public const string ValidValue = "1.5";
        public const string FileRegistrationError = "FileRegistrationError";
        public const string Comment = "Comment";
        public const string State = "State";
        public const string SourceProductId = "SourceProductId";
        public const string DestinationProductId = "DestinationProductId";
        public const string CreatedInventoryId = "TK 9900";
        public const string CreatedMovementId = "420000003";
        public const string InventoryTransactionId = "InventoryTransactionId";
        public const string MovementTransactionId = "MovementTransactionId";
        public const string InventoryProductId = nameof(InventoryProductId);
        public const string ActionInsert = "Insert";
        public const string ActionUpdate = "Update";
        public const string ActionDelete = "Delete";
        public const string SetupHomologationForCutoff = "SetupHomologationForCutoff";
        public const string InventoryId1 = "DEFECT 3681221";
        public const string InventoryId2 = "DEFECT 3671221";
        public const string InventoryId3 = "DEFECT 3661221";
        public const string MovementId1 = "3999955221";
        public const string MovementId2 = "3999955222";
        public const string MovementId3 = "3999955223";
        public const string FileRegistrationId = "0bda1d82-1859-4ad1-bcad-3a0640395532";
        public const string FilterNodes = "FilterNodes";
        public const string Ticket = "Ticket";
        public const string Rules = "Rules";
        public const string Products = "Products";
        public const string Scenarios = "Scenarios";
        public const string ManageConnectionWithOneProduct = "node-connection-1Product";
        public const string ManageConnectionWithTwoProducts = "node-connection-2Products";
        public const string ManageConnectionProduct1UncertainityPercentage = "Connection_Product_1 uncertaintyPercentage";
        public const string ManageConnectionProduct2UncertainityPercentage = "Connection_Product_2 uncertaintyPercentage";
        public const string ManageConnectionProduct1ProductId = "Connection_Product_1 productId";
        public const string Product = "Product";
        public const string NodeConnectionProductOwner = "node-connection productowner";
        public const string NodeConnectionProduct = "node-connection product";
        public const string NodeConnectionProducts = "node-connection products";
        public const string OperationalCutoff = "operationalcutoff";
        public const string FileRegistration = "fileregistration";
        public const string FileRegistrationStatus = "fileregistration status";
        public const string NodeTags = "nodetags";
        public const string NodeConnectionProductId = "NodeConnectionProductId";
        public const string NodeConnectionId = "NodeConnectionId";
        public const string ProductId = "ProductId";
        public const string NodeConnectionProductIds = "NodeConnection ProductId";
        public const string NodeConnectionProductOwnerId = "NodeConnectionProductOwnerId";
        public const string NodeConnectionOwnerId = "NodeConnection OwnerId";
        public const string NodeConnectionOwnershipPercentage = "NodeConnection OwnershipPercentage";
        public const string OwnershipPercentage = "OwnershipPercentage";
        public const string OwnerId = "OwnerId";
        public const string UploadId = "UploadId";
        public const string Segment = "Segment";
        public const string StartDate = nameof(StartDate);
        public const string EndDate = "EndDate";
        public const string TicketId = "TicketId";
        public const string InProgress = "InProgress";
        public const string Error = "Error";
        public const string CategoryElementId = "CategoryElementId";
        public const string Status = "Status";
        public const string Finalized = "Finalized";
        public const string Processing = "Processing";
        public const string TicketCreatedDate = "TicketCreatedDate";
        public const string Username = "Username";
        public const string CreatedBy = "CreatedBy";
        public const string CreateNodes = "CreateNodes";
        public const string SegmentName = "txt_nodes_segment_name";
        public const string NodeName = "txt_nodes_name_name";
        public const string NodeTypeName = "txt_nodes_nodeType_name";
        public const string OperatorName = "txt_nodes_operator_name";
        public const string SpecialCharacters = "$%*()";
        public const string NoRecordsFoundMessage = "Sin registros";
        public const string Segmento = "Segmento";
        public const string Nombre = "Nombre";
        public const string Tipo = "Tipo";
        public const string Operador = "Operador";
        public const string SegmentoOfNodesGrid = "Segmento_Nodes";
        public const string NombreOfNodesGrid = "Nombre_Nodes";
        public const string TipoOfNodesGrid = "Tipo_Nodes";
        public const string OperadorOfNodesGrid = "Operador_Nodes";
        public const string OperationalCutoffTickets = "OperationalCutoffTickets";
        public const string CreatedNodeName = "NodeName";
        public const string NodeNameText = "txt_createNode_name";
        public const string StorageLocationValue = "StorageLocationValue";
        public const string StorageLocationNameValue = "txt_nodeStorageLocation_name";
        public const string OperationalCutoffs = "Operational Cutoffs";
        public const string OwnershipCalculationForSegments = "Ownership Calculation for the Segments";
        public const string OwnershipCalculationForNodes = "Ownership Calculation for the Nodes";
        public const string Submitted = "Submitted";
        public const string ExecutionDate = "ExecutionDate";
        public const string TicketOfOwnershipCalculationForSegmentsGrid = "Ticket_Ownership Calculation for the Segments";
        public const string StartDateOfOwnershipCalculationForSegmentsGrid = "StartDate_Ownership Calculation for the Segments";
        public const string EndDateOfOwnershipCalculationForSegmentsGrid = "EndDate_Ownership Calculation for the Segments";
        public const string ExecutionDateOfOwnershipCalculationForSegmentsGrid = "ExecutionDate_Ownership Calculation for the Segments";
        public const string UsernameOfOwnershipCalculationForSegmentsGrid = "Username_Ownership Calculation for the Segments";
        public const string SegmentOfOwnershipCalculationForSegmentsGrid = "Segment_Ownership Calculation for the Segments";
        public const string StatusOfOwnershipCalculationForSegmentsGrid = "Status_Ownership Calculation for the Segments";
        public const string SegmentNameOfOwnershipCalculationForSegments = "SegmentNameOfOwnershipCalculationForSegments";
        public const string StartDateOfOwnershipCalculationForSegments = "StartDateOfOwnershipCalculationForSegments";
        public const string EndDateOfOwnershipCalculationForSegments = "EndDateOfOwnershipCalculationForSegments";
        public const string CreateOwnership = "CreateOwnership";
        public const string NodeWithOwnership = "NodeWithOwnership";
        public const string OwnershipRule = "OwnershipRule";
        public const string SourceNodeProductId = "10000002049";
        public const string SourceNodeProductId2 = "10000002372";
        public const string Completed = "Completed";
        public const string TicketOfOwnershipCalculationForNodesGrid = "Ticket_Ownership Calculation for the Nodes";
        public const string StartDateOfOwnershipCalculationForNodesGrid = "StartDate_Ownership Calculation for the Nodes";
        public const string EndDateOfOwnershipCalculationForNodesGrid = "EndDate_Ownership Calculation for the Nodes";
        public const string ExecutionDateOfOwnershipCalculationForNodesGrid = "ExecutionDate_Ownership Calculation for the Nodes";
        public const string NodeOfOwnershipCalculationForNodesGrid = "Node_Ownership Calculation for the Nodes";
        public const string UsernameOfOwnershipCalculationForNodesGrid = "Username_Ownership Calculation for the Nodes";
        public const string SegmentOfOwnershipCalculationForNodesGrid = "Segment_Ownership Calculation for the Nodes";
        public const string StatusOfOwnershipCalculationForNodesGrid = "Status_Ownership Calculation for the Nodes";
        public const string ActualElementLocatorForStartDateInOwnershipCalculationForNode = "dt_ownershipNodes_startDate";
        public const string ExpectedElementLocatorForStartDateInOwnershipCalculationForNode = "dt_ownershipNodes_ticket_startDate";
        public const string ActualElementLocatorForEndDateInOwnershipCalculationForNode = "dt_ownershipNodes_endDate";
        public const string ExpectedElementLocatorForEndDateInOwnershipCalculationForNode = "dt_ownershipNodes_ticket_endDate";
        public const string ActualElementLocatorForCreatedDateInOwnershipCalculationForNode = "dt_ownershipNodes_createdDate";
        public const string ExpectedElementLocatorForCreatedDateInOwnershipCalculationForNode = "dt_ownershipNodes_ticket_createdDate";
        public const string ActualElementLocatorForNodeInOwnershipCalculationForNode = "txt_ownershipNodes_categoryElement_name";
        public const string ExpectedElementLocatorForNodeInOwnershipCalculationForNode = "txt_ownershipNodes_ticket_categoryElement_name";
        public const string TransformationProductId = "10000002318";
        public const string ProductName1 = "CRUDO CAMPO CUSUCO";
        public const string ProductName = "CRUDO CAMPO MAMBO";
        public const string MeasurementUnit = "Bbl";
        public const string MeasurementUnitId = "31";
        public const string OriginSourceProductId = "10000002318";
        public const string DestinationSourceProductId = "10000002318";
        public const string Order = "Order";
        public const string ModelName = "ModelName";
        public const string HomologationGroup = nameof(HomologationGroup);
        public const string HomologationGroupByGroupType = nameof(HomologationGroupByGroupType);
        public const string HomologationForNodes = nameof(HomologationForNodes);
        public const string HomologationForProduct = nameof(HomologationForProduct);
        public const string HomologationForUnit = nameof(HomologationForUnit);
        public const string HomologationForMovementTypeId = nameof(HomologationForMovementTypeId);
        public const string HomologationForProductTypeId = nameof(HomologationForProductTypeId);
        public const string HomologationForOwner = nameof(HomologationForOwner);
        public const string HomologationForEventType = nameof(HomologationForEventType);
        public const string HomologationForSegment = nameof(HomologationForSegment);
        public const string SuccessMessage = "Confarmacion";
        public const string Exceptions = "Exceptions";
        public const string ErrorMessage = nameof(ErrorMessage);
        public const string ValidExcel = "ValidExcel.xlsx";
        public const string SinRegistros = "Sin registros";
        public const string PlanningProgrammingAndCollaborationAgreements = "Planning, Programming And Collaboration Agreements";
        public const string ContentOnUploadFile = "Selecciona una acción y un archivo de Excel válido, para ser cargado.";
        public const string FileRegistrationIdName = "FileRegistrationId";
        public const string SearchCriteria = "Criterio de búsqueda";
        public const string LogisticReportGeneration = "Logistic Report Generation";
        public const string ValidSegment = "ValidSegment";
        public const string ValidOwner = "ValidOwner";
        public const string Transporte = "Transporte";
        public const string EcoPetrol = "EcoPetrol";
        public const string StartDateGreaterThanFinalDate = "StartDateGreaterThanFinalDate";
        public const string ValidEndDate = "ValidEndDate";
        public const string ValidStartDate = "ValidStartDate";
        public const string EndDateGreaterThanOrEqualtoCurrentDate = "EndDateGreaterThanOrEqualtoCurrentDate";
        public const string RangeBetweenStartAndEndDateGreaterThan60Days = "RangeBetweenStartAndEndDateGreaterThan60Days";
        public const string SegmentOfReportLogisticsGrid = "Segment_Logistic Report Generation";
        public const string StartDateOfReportLogisticsGrid = "StartDate_Logistic Report Generation";
        public const string EndDateOfReportLogisticsGrid = "EndDate_Logistic Report Generation";
        public const string ExecutionDateOfReportLogisticsGrid = "ExecutionDate_Logistic Report Generation";
        public const string UsernameOfReportLogisticsGrid = "Username_Logistic Report Generation";
        public const string OwnerOfReportLogisticsGrid = "Owner_Logistic Report Generation";
        public const string StatusOfReportLogisticsGrid = "Status_Logistic Report Generation";
        public const string Refinacion = "Refinación";
        public const string Owner = "Owner";
        public const string Reficar = "REFICAR";
        public const string NetStandardVolume = "NetStandardVolume";
        public const string HomologationIdForEvent = "HomologationIdForEvent";
        public const string HomologationForEventNodes = "HomologationForEventNodes";
        public const string EventValue = "2000.00";
        public const string InactiveEvent = "True";
        public const string MovementRegistration = "Registro de movimientos";
        public const string HomologationObject = "HomologationObject";
        public const string HomologationDataMapping = "HomologationDataMapping";
        public const string HomologationObjectTypeId = "HomologationObjectTypeId";
        public const string HomologationObjectId = "Object HomologationObjectId";
        public const string HomologationDataMappingId = "DataMapping HomologationDataMappingId";
        public const string GroupId = "Group HomologationGroupId";
        public const string IsRequiredMapping = "IsRequiredMapping";
        public const string ActualElementLocatorForStartDateInLogisticReport = "dt_tickets_startDate";
        public const string ExpectedElementLocatorForStartDateInLogisticReport = "dt_tickets_ticketStartDate";
        public const string ActualElementLocatorForEndDateInLogisticReport = "dt_tickets_endDate";
        public const string ExpectedElementLocatorForEndDateInLogisticReport = "dt_tickets_ticketFinalDate";
        public const string ActualElementLocatorForCreatedDateInLogisticReport = "dt_tickets_createdDate";
        public const string ExpectedElementLocatorForCreatedDateInLogisticReport = "dt_tickets_cutoffExecutionDate";
        public const string ActualElementLocatorForStatusInLogisticReport = "txt_tickets_status";
        public const string ExpectedElementLocatorForStatusInLogisticReport = "txt_tickets_state";
        public const string HomologationForEventOwner = "HomologationForEventOwner";
        public const string EventId = "EventId";
        public const string HomologationForNodesWithTank = "HomologationForNodesWithTank";
        public const string Propiedad = "Propiedad";
        public const string MaxDate = "9999-12-31 00:00:00.000";
        public const string UpdatedProductCount = "3";
        public const string DeletedProductCount = "2";
        public const string DesbalancePercentage1 = "0.20";
        public const string DesbalancePercentage2 = "0.16";
        public const string AcceptableBalancePercentage = "0.10";
        public const string Desbalance1 = "1312.17";
        public const string Desbalance2 = "1405.15";
        public const string Ownership = "Ownership";
        public const string OrderNumber = "1";
        public const string Count = "8";
        public const string HomologationIdForContracts = "HomologationIdForContracts";
        public const string HomologationForContractNodes = "HomologationForContractNodes";
        public const string HomologationForContractProduct = "HomologationForContractProduct";
        public const string HomologationForContractCommercial = "HomologationForContractCommercial";
        public const string HomologationForContractUnit = "HomologationForContractUnit";
        public const string HomologationForContractMovementTypeId = "HomologationForContractMovementTypeId";
        public const string Contract = "Contract";
        public const string Deleted = "True";
        public const string AcceptableBalancePercentageTitle = "AcceptableBalancePercentage";
        public const string Control = "Control";
        public const string EcoPetrolOwnershipPercentage = "100";
        public const string EcoPetrolId = "30";
        public const string OwnershipVersion = "1";
        public const string RuleId = "Regla 1";
        public const string OwnershipValue = "1000";
        public const string AcceptApproval = "0";
        public const string RejectApproval = "1";
        public const string NodeWithSendToSAPTrue = "NodeWithSendToSAPTrue";
        public const string HomologationForProductSAP = "HomologationForProductSAP";
        public const string HomologationForMovementTypeIdForSIV = "HomologationForMovementTypeIdForSIV";
        public const string LogisticStaticMeesage = "Información operativa con propiedad para el segmento de transporte.";
        public const string SIVMovementType = "TESTSIV";
        public const string StorageLocationSIV = "PR HCT:PR HCT : MATERIA PRIMA";
        public const string StorageLocationProduct = "CRUDO HCT";
        public const string Volume = "116000.25";
        public const string ExcelFileNameInFileRegistration = "ExcelFileName";
        public const string System = nameof(System);
        public const string CategoryIdForSystem = "8";
        public const string CategoryIdForSegment = "2";
        public const string Todos = nameof(Todos);
        public const string SystemName = nameof(SystemName);
        public const string Variable = nameof(Variable);
        public const string ReficarOwnershipPercentage = "20";
        public const string NewMovementVolume = "100";
        public const string EquionOwnershipPercentage = "12";
        public const string ReasonForChange = "Ajustes Información Oficial";
        public const string Bloqueado = nameof(Bloqueado);
        public const string OperationalDate = nameof(OperationalDate);
        public const string PeriodStartDate = "Period StartTime";
        public const string PeriodEndDate = "Period EndTime";
        public const string HomologationIdForSAP = "SAPHomologation";
        public const string LogisticsPeriod = nameof(LogisticsPeriod);
        public const string InitialDate = nameof(InitialDate);
        public const string FinalDate = nameof(FinalDate);
        public const string OwnerName = nameof(OwnerName);
        public const string StatusName = nameof(StatusName);
        public const string OwnershipSegmentName = nameof(OwnershipSegmentName);
        public const string SendToSAP = nameof(SendToSAP);
        public const string Value = nameof(Value);
        public const string NodeStatusIsNotApproved = "is not Approved";
        public const string NodeStatusIsApproved = "is Approved";
        public const string NumberOfErrorRecords = nameof(NumberOfErrorRecords);
        public const string Aceptar = nameof(Aceptar);
        public const string CreateLogisticReport = "Crear reporte logístico";
        public const string True = nameof(True);
        public const string Enviado = nameof(Enviado);
        public const string Empty = nameof(Empty);
        public const string FirstDropDown = "1";
        public const string SecondDropDown = "2";
        public const string NodeId1 = nameof(NodeId1);
        public const string NodeId2 = nameof(NodeId2);
        public const string NodeId3 = nameof(NodeId3);
        public const string NodeId4 = nameof(NodeId4);
        public const string NodeId5 = nameof(NodeId5);
        public const string Node1Name = nameof(Node1Name);
        public const string Node2Name = nameof(Node2Name);
        public const string Node3Name = nameof(Node3Name);
        public const string Node4Name = nameof(Node4Name);
        public const string Node5Name = nameof(Node5Name);
        public const string CategorySegment = nameof(CategorySegment);
        public const string InactiveConnection = "Inactive Connection";
        public const string WithoutTransferpoint = "Without Transferpoint";
        public const string AlgorithmId = nameof(AlgorithmId);
        public const string IsTransfer = nameof(IsTransfer);
        public const string ControlLimit = nameof(ControlLimit);
        public const string Color = nameof(Color);
        public const string CategoryElementName = nameof(CategoryElementName);
        public const string NameOfNodeType = "NodeTypeName";
        public const string Administration = nameof(Administration);
        public const string SubMenu = nameof(SubMenu);
        public const string RuleName = nameof(RuleName);
        public const string InventoryDate = nameof(InventoryDate);
        public const string Inventory = "Inventories";
        public const string OwnershipCalculatedForSegemnt = nameof(OwnershipCalculatedForSegemnt);
        public const string SourceNodeId = "MovementSource SourceNodeId";
        public const string DestinationNodeId = "MovementDestination DestinationNodeId";
        public const string SourceProductTypeId = "MovementSource SourceProductTypeId";
        public const string DestinationProductTypeid = "MovementDestination DestinationProductTypeid";
        public const string ProductTypeId = "ProductsType ProductType";
        public const string FicoConnection = nameof(FicoConnection);
        public const string ProductRules = "Node/Product";
        public const string ConnectionRules = "Connection/Product";
        public const string ResponseLogMessage = "Time taken (in milliseconds) to get response from ownership rule service:";
        public const string FicoConnect = nameof(FicoConnect);
        public const string Tokenid = "tokenid";
        public const string Result = nameof(Result);
        public const string Clientid = "cliendid";
        public const string Secret = "secret";
        public const string UnsavedNode = "Unsaved Node";
        public const string ActiveNode = "Active Node";
        public const string CreateNode = "Create Node";
        public const string SelectedNode = "Selected Node";
        public const string Selected = nameof(Selected);
        public const string ShadowStyle = "rgb(204, 204, 204) 0px 3px 6px 0px";
        public const string BoxShadow = "box-shadow";
        public const string StrokeStyle = "#1592e6";
        public const string Stroke = "stroke";
        public const string HoveredNode = "Hovered Node";
        public const string HoverOver = "hover over";
        public const string HoveredActiveConnection = "Hovered Active Connection";
        public const string ZoomIn = nameof(ZoomIn);
        public const string ZoomOut = nameof(ZoomOut);
        public const string FileName = nameof(FileName);
        public const string Unsaved = nameof(Unsaved);
        public const string OldOwnershipStrategyInformation = nameof(OldOwnershipStrategyInformation);
        public const string OwnershipStrategyInformation = nameof(OwnershipStrategyInformation);
        public const string RuleSynchronizerTitle = "title";
        public const string RuleSynchronizerMessage = "msg";
        public const string OwnershipRuleRefreshHistoryId = nameof(OwnershipRuleRefreshHistoryId);
        public const string Information = "information";
        public const string RecordId = nameof(RecordId);
        public const string TransactionId = nameof(TransactionId);
        public const string Capacity = nameof(Capacity);
        public const string CurrentOwnershipstrategyonPage = "currentOwnershipstrategyonPage";
        public const string RowVersion = nameof(RowVersion);
        public const string OwnershipPercentageValues = nameof(OwnershipPercentageValues);
        public const string OldOwnershipPercentageValuesRecords = nameof(OldOwnershipPercentageValuesRecords);
        public const string ADFUpdatedOwnershipPercentageValuesRecords = nameof(ADFUpdatedOwnershipPercentageValuesRecords);
        public const string TRUEDATE = nameof(TRUEDATE);
        public const string UpdateOwnershipRule = nameof(UpdateOwnershipRule);
        public const string UpdateNodeConnectionProduct = nameof(UpdateNodeConnectionProduct);
        public const string UpdateNodeConnectionProductId = "ConnectionUpdate ProductId";
        public const string UncertaintyPercentage = nameof(UncertaintyPercentage);
        public const string OwnershipRuleType = nameof(OwnershipRuleType);
        public const string OwnershipRulesId = "OwnershipRules Id";
        public const string OwnershipRulesRowVersion = "OwnershipRules RowVersion";
        public const string UpdateNodeOwners = nameof(UpdateNodeOwners);
        public const string UpdateNodeProducts = nameof(UpdateNodeProducts);
        public const string NodeUpdateProductId = "NodeUpdate ProductId";
        public const string DestinationProductIsNotSet = nameof(DestinationProductIsNotSet);
        public const string CRUDOSIMPORTADOS = "CRUDOS IMPORTADOS";
        public const string CRUDOCAMPOMAMBO = "CRUDO CAMPO MAMBO";
        public const string NameOfDestinationProductTypeId = "DestinationProductTypeId";
        public const string NameOfSourceProductTypeId = "SourceProductTypeId";
        public const string MovementsWithoutDestination = nameof(MovementsWithoutDestination);
        public const string BATCHID = nameof(BATCHID);
        public const string InventoryWithMultipleProducts = nameof(InventoryWithMultipleProducts);
        public const string InventoryWithSameBatchIdentifier = nameof(InventoryWithSameBatchIdentifier);
        public const string NumberOfBatchIdentifierCharacters = nameof(NumberOfBatchIdentifierCharacters);
        public const string InActiveNode = "InActive Node";
        public const string Should = "should";
        public const string ShouldNot = "shouldn't";
        public const string ContractPurchaseValue = "12000.00";
        public const string ContractSaleValue = "3000.00";
        public const string InactiveContract = "True";
        public const string Event = nameof(Event);
        public const string InventoryProductUnqiueId = nameof(InventoryProductUnqiueId);
        public const string InventoryId = nameof(InventoryId);
        public const string TankName = nameof(TankName);
        public const string TicketStatus = nameof(TicketStatus);
        public const string WordSegmentName = "SegmentName";
        public const string PreviousDayOfTicketStartDate = nameof(PreviousDayOfTicketStartDate);
        public const string CreationOfBothMovementAndInventory = nameof(CreationOfBothMovementAndInventory);
        public const string NodeWithMultipleProduct = nameof(NodeWithMultipleProduct);
        public const string OperationalCutoffQueue = nameof(OperationalCutoffQueue);
        public const string OwnershipQueue = nameof(OwnershipQueue);
        public const string ExcelMovementAndInventory = nameof(ExcelMovementAndInventory);
        public const string ExcelEvent = nameof(ExcelEvent);
        public const string ExcelContract = nameof(ExcelContract);
        public const string TicketRequest = nameof(TicketRequest);
        public const string ExcelMovementAndInventoryRequest = nameof(ExcelMovementAndInventoryRequest);
        public const string OperationalCutoffTicketRequest = nameof(OperationalCutoffTicketRequest);
        public const string OwnershipTicketRequest = nameof(OwnershipTicketRequest);
        public const string ExcelChaosTest = nameof(ExcelChaosTest);
        public const string EventsChaosTest = nameof(EventsChaosTest);
        public const string ContractsChaosTest = nameof(ContractsChaosTest);
        public const string Chaos = nameof(Chaos);
        public const string CutoffChaosValue = "cutoff";
        public const string OwnershipChaosValue = "ownership";
        public const string TransformChaosValue = "transform";
        public const string ApiChaosValue = "api";
        public const string BlobPath = nameof(BlobPath);
        public const string Contanier = nameof(Contanier);
        public const string DeadletteredMessageId = nameof(DeadletteredMessageId);
        public const string DeadletteredMessages = nameof(DeadletteredMessages);
        public const string SegmentId = nameof(SegmentId);
        public const string Excel = nameof(Excel);
        public const string Events = nameof(Events);
        public const string Json = nameof(Json);
        public const string SinoperInventory = nameof(SinoperInventory);
        public const string SinoperMovements = nameof(SinoperMovements);
        public const string Sinoper = nameof(Sinoper);
        public const string Queue = nameof(Queue);
        public const string EntityId = nameof(EntityId);
        public const string ServiceBusMessageForSinoper = nameof(ServiceBusMessageForSinoper);
        public const string InventoryQueueName = "inventory";
        public const string MovementQueueName = "movements";
        public const string Volumen = "VOLUMEN";
        public const string NetVolume = "10000";
        public const string EquionId = "29";
        public const string FICO = nameof(FICO);
        public const string Colaboracion = "COLABORACION";
        public const string Evacuacion = "EVACUACION";
        public const string ProductVolume = nameof(ProductVolume);
        public const string FicoRequestAndResponseData = nameof(FicoRequestAndResponseData);
        public const string HomologationForOperator = nameof(HomologationForOperator);
        public const string Version = nameof(Version);
        public const string ScenarioId = nameof(ScenarioId);
        public const string GrossStandardQuantity = nameof(GrossStandardQuantity);
        public const string HomologationForAttributeId = nameof(HomologationForAttributeId);
        public const string HomologationForValueAttributeUnit = nameof(HomologationForValueAttributeUnit);
        public const string HomologationForStorageLocation = nameof(HomologationForStorageLocation);
        public const string HomologationForSystem = nameof(HomologationForSystem);
        public const string NodeStorageLocationIdColumn = "NodeStorageLocationId";
        public const string Admin = nameof(Admin);
        public const string ScenarioType = nameof(ScenarioType);
        public const string InventoryProduct = nameof(InventoryProduct);
        public const string MovementTable = "Movement";
        public const string HomologationForSourceSystem = nameof(HomologationForSourceSystem);
        public const string FieldToCheckMandatory = nameof(FieldToCheckMandatory);
        public const string FieldToCheckErrorMessage = nameof(FieldToCheckErrorMessage);
        public const string UpdatedMovementCount = "3";
        public const string UpdatedInventoryCount = "3";
        public const string AttributeData = "CALIDAD";
        public const string SistemaOrigen = "Sistema Origen";
        public const string TransferPointAddNote = "This is TransferPoint Movement";
        public const string HomologationForSourceSystemExcel = nameof(HomologationForSourceSystemExcel);
        public const string User = nameof(User);
        public const string DeltaGrid = "Calculation of deltas by operational adjust";
        public const string DeltaTechErrorPopup = "Error durante el cálculo de los deltas";
        public const string Official = nameof(Official);
        public const string FileRegistrationTransactionId = nameof(FileRegistrationTransactionId);
        public const string ProcessResultJson = nameof(ProcessResultJson);
        public const string ErrorCode = nameof(ErrorCode);
        public const string UpdateNodeProductOwners = nameof(UpdateNodeProductOwners);
        public const string NodeRowVersion = "rowVersion";
        public const string TestdataForConsolidation = nameof(TestdataForConsolidation);
        public const string NoSONSegment = nameof(NoSONSegment);
        public const string MovementsWithoutOwners = nameof(MovementsWithoutOwners);
        public const string ConsolidationQueue = nameof(ConsolidationQueue);
        public const string OfficialDeltaTicketRequest = nameof(OfficialDeltaTicketRequest);
        public const string ConsolidationChaos = "OfficialDelta";
        public const string OfficialDeltaNode = "Official deltas by node";
        public const string TestdataForConsolidationExclusionMovements = nameof(TestdataForConsolidationExclusionMovements);
        public const string TestdataForAnotherPeriodConsolidation = nameof(TestdataForAnotherPeriodConsolidation);
        public const string OwnershipTicketStatus = nameof(OwnershipTicketStatus);
        public const string CreateNodeWithMutipleProductsForOfficialBalanceFile = nameof(CreateNodeWithMutipleProductsForOfficialBalanceFile);
        public const string CreateNodeWithOneProductForOfficialBalanceFile = nameof(CreateNodeWithOneProductForOfficialBalanceFile);
        public const string UpdateNodeProductOwnersForOfficialBalanceFile = nameof(UpdateNodeProductOwnersForOfficialBalanceFile);
        public const string NodeWithTwoStorageLocations = nameof(NodeWithTwoStorageLocations);
        public const string CreateConnectionForOfficialBalanceFile = nameof(CreateConnectionForOfficialBalanceFile);
        public const string UpdateNodeConnectionProductOwnersForOfficialBalanceFile = nameof(UpdateNodeConnectionProductOwnersForOfficialBalanceFile);
        public const string TestdataForOfficialBalanceFileWithoutCancellationMovements = nameof(TestdataForOfficialBalanceFileWithoutCancellationMovements);
        public const string HomologationForLogisticProducts = nameof(HomologationForLogisticProducts);
        public const string HomologationForExcelWithOfficialSourceSystem = nameof(HomologationForExcelWithOfficialSourceSystem);
        public const string TestdataForLogisticOfficialBalance = nameof(TestdataForLogisticOfficialBalance);
        public const string TestdataForOfficialBalanceFileWithCancellationMovements = nameof(TestdataForOfficialBalanceFileWithCancellationMovements);
        public const string TestdataForOfficialBalanceFileWithAnnulationAsPerRelationshipTable = nameof(TestdataForOfficialBalanceFileWithAnnulationAsPerRelationshipTable);
        public const string DeltaStatus = "4";
        public const string TestDataForConsolidatedWithOfficial = nameof(TestDataForConsolidatedWithOfficial);
        public const string Priority = nameof(Priority);
        public const string ElementId = nameof(ElementId);
        public const string TestdataForInvalidScenarioWithAnnulation = nameof(TestdataForInvalidScenarioWithAnnulation);
        public const string TestdataForInvalidScenarioWithoutAnnulation = nameof(TestdataForInvalidScenarioWithoutAnnulation);
        public const string TestdataForOfficialBalanceFileWithCancellationMovementsCalcualtions = nameof(TestdataForOfficialBalanceFileWithCancellationMovementsCalcualtions);
        public const string Fallido = nameof(Fallido);
        public const string TestdataForOfficialDeltaPerNodeReport = nameof(TestdataForOfficialDeltaPerNodeReport);
    }
}