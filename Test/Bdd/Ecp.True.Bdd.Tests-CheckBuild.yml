# ADD STEPS THAT RUN TESTS, CREATE A NUGET PACKAGE, DEPLOY, AND MORE: https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core
# YAML SCHEMA: https://docs.microsoft.com/en-us/azure/devops/pipelines/yaml-schema?view=vsts&tabs=schema
# PREDEFINED VARIABLES: https://docs.microsoft.com/en-us/azure/devops/pipelines/build/variables?view=vsts
# HOSTED AGENT SOFTWARES: https://github.com/Microsoft/azure-pipelines-image-generation/blob/master/images/win/Vs2017-Server2016-Readme.md

# UNCOMMENT THE BELOW LINE TO DISABLE CI BUILDS: https://docs.microsoft.com/en-us/azure/devops/pipelines/yaml-schema?view=vsts&tabs=schema#trigger

trigger: none

# https://docs.microsoft.com/en-us/azure/devops/pipelines/process/resources?view=azure-devops&tabs=schema
resources:
- repo: self

pool:
  vmImage: 'windows-latest' # name: 'Hosted VS2017'

# queue:
#   name: Hosted VS2017
#   demands:
#   - msbuild
#   - visualstudio

variables:
  appName: 'Ecp.True.Bdd.Tests'
  appPath: '$(System.DefaultWorkingDirectory)\Test\Bdd'
  solution: '$(appPath)\$(appName).sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  binFolder: '$(appPath)\bin\$(buildConfiguration)'

steps:
# NuGet Tools Install: https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/tool/nuget?view=vsts
- task: NuGetToolInstaller@1
  displayName: Install Nuget Tools

# Authenticate to AzDO Artifacts
- task: NuGetCommand@2
  displayName: 'Authenticate with Azure DevOps NuGet'
  inputs:
    command: custom
    arguments: sources update -Name "Bdd.Core" -Username "vsts" -Password "$(System.AccessToken)" -StorePasswordInClearText -ConfigFile $(appPath)\Nuget.config

# This is added as a workaroung untill we have private agents.
- script: dotnet add $(appPath)\Ecp.True.Bdd.Tests.csproj package "Selenium.WebDriver.ChromeDriver" -v $(chromeDriverVersion)
  displayName: Set ChromeDriver Version.

# NuGet Restore: https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/package/nuget?view=vsts
- task: NuGetCommand@2
  displayName: Restore Nugets
  inputs:
    command: 'restore'
    solution: '$(solution)' # '$(solution)'
    selectOrConfig: 'config' # Options: select, config
    nugetConfigPath: '$(appPath)\Nuget.config'
    includeNuGetOrg: true # Required when feedsToUse == Select
    verbosityRestore: 'normal' # Options: quiet, normal, detailed
    noCache: false

# Visual Studio Build: https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/build/visual-studio-build?view=vsts
- task: VSBuild@1
  displayName: Build Sln
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    clean: true
    # msbuildArgs: '-noAutoResponse'

# https://docs.opensource.microsoft.com/tools/cg.html
# TPN: https://opensource.microsoft.com/tpn

- task: CopyFiles@2
  displayName: Copy Output
  inputs:
    contents: '**\bin\**'
    targetFolder: $(Build.ArtifactStagingDirectory)
    #sourceFolder: $(Build.SourcesDirectory) # Optional
    #cleanTargetFolder: false # Optional
    #overWrite: false # Optional
    #flattenFolders: false # Optional

- task: PublishBuildArtifacts@1
  displayName: Publish Output
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: 'drop'
    #publishLocation: 'Container' # Options: container, filePath
    #targetPath: # Required when publishLocation == FilePath
    #parallel: false # Optional
    #parallelCount: # Optional